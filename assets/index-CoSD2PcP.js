var Wv=Object.defineProperty;var Gv=(e,r,t)=>r in e?Wv(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var Y=(e,r,t)=>Gv(e,typeof r!="symbol"?r+"":r,t);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=t(i);fetch(i.href,n)}})();const da=new Map,In=[],Kv=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){const s=da.get(e);if(s===void 0)da.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const i=In.indexOf(e);i!==-1&&In.splice(i,1);for(let n=0;n<In.length;n++)if(da.get(In[n]).priority<=t){In.splice(n,0,e);return}In.push(e)}return}throw new TypeError("not a valid backend")},Hv=async e=>{const r=da.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{const t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},qv=async e=>{const r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?In:t;let i;const n=[],o=new Set;for(const l of s){const c=await Hv(l);typeof c=="string"?n.push({name:l,err:c}):(i||(i=c),i===c&&o.add(l))}if(!i)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);const a=r.filter(l=>o.has(typeof l=="string"?l:l.name));return[i,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]},Qv="1.21.0";let t_="warning";const Cs={wasm:{},webgl:{},webgpu:{},versions:{common:Qv},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);t_=e}},get logLevel(){return t_}};Object.defineProperty(Cs,"logLevel",{enumerable:!0});const Xv=Cs,Yv=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const s=t.getContext("2d");if(s!=null){let i,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[3]):(i=e.dims[3],n=e.dims[2]);const o=(r==null?void 0:r.format)!==void 0?r.format:"RGB",a=r==null?void 0:r.norm;let l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));const p=n*i;let d=0,u=p,_=p*2,f=-1;o==="RGBA"?(d=0,u=p,_=p*2,f=p*3):o==="RGB"?(d=0,u=p,_=p*2):o==="RBG"&&(d=0,_=p,u=p*2);for(let b=0;b<n;b++)for(let A=0;A<i;A++){const g=(e.data[d++]-c[0])*l[0],w=(e.data[u++]-c[1])*l[1],$=(e.data[_++]-c[2])*l[2],y=f===-1?255:(e.data[f++]-c[3])*l[3];s.fillStyle="rgba("+g+","+w+","+$+","+y+")",s.fillRect(A,b,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Jv=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let s;if(t!=null){let i,n,o;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[1],o=e.dims[3]):(i=e.dims[3],n=e.dims[2],o=e.dims[1]);const a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm;let c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));const d=n*i;if(r!==void 0&&(r.format!==void 0&&o===4&&r.format!=="RGBA"||o===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const u=4;let _=0,f=1,b=2,A=3,g=0,w=d,$=d*2,y=-1;a==="RGBA"?(g=0,w=d,$=d*2,y=d*3):a==="RGB"?(g=0,w=d,$=d*2):a==="RBG"&&(g=0,$=d,w=d*2),s=t.createImageData(i,n);for(let v=0;v<n*i;_+=u,f+=u,b+=u,A+=u,v++)s.data[_]=(e.data[g++]-p[0])*c[0],s.data[f]=(e.data[w++]-p[1])*c[1],s.data[b]=(e.data[$++]-p[2])*c[2],s.data[A]=y===-1?255:(e.data[y++]-p[3])*c[3]}else throw new Error("Can not access image data");return s},Ul=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:s}=r,i=r.norm??{mean:255,bias:0};let n,o;typeof i.mean=="number"?n=[i.mean,i.mean,i.mean,i.mean]:n=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];const a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3);let d=4,u=0,_=1,f=2,b=3,A=0,g=c,w=c*2,$=-1;a==="RGB"&&(d=3,u=0,_=1,f=2,b=-1),l==="RGBA"?$=c*3:l==="RBG"?(A=0,w=c,g=c*2):l==="BGR"&&(w=0,g=c,A=c*2);for(let v=0;v<c;v++,u+=d,f+=d,_+=d,b+=d)p[A++]=(e[u]+o[0])/n[0],p[g++]=(e[_]+o[1])/n[1],p[w++]=(e[f]+o[2])/n[2],$!==-1&&b!==-1&&(p[$++]=(e[b]+o[3])/n[3]);return l==="RGBA"?new ps("float32",p,[1,4,t,s]):new ps("float32",p,[1,3,t,s])},Zv=async(e,r)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string";let o,a=r??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){const p=l();p.width=e.width,p.height=e.height;const d=c(p);if(d!=null){let u=e.height,_=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(u=r.resizedHeight,_=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=u,a.width=_}else a.tensorFormat="RGBA",a.height=u,a.width=_;d.drawImage(e,0,0),o=d.getImageData(0,0,_,u).data}else throw new Error("Can not access image data")}else if(s){let p,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,d=r.resizedWidth):(p=e.height,d=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=d,r!==void 0){const u=l();u.width=d,u.height=p;const _=c(u);if(_!=null)_.putImageData(e,0,0),o=_.getImageData(0,0,d,p).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");const p=l();p.width=e.width,p.height=e.height;const d=c(p);if(d!=null){const u=e.height,_=e.width;return d.drawImage(e,0,0,_,u),o=d.getImageData(0,0,_,u).data,a.height=u,a.width=_,Ul(o,a)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,d)=>{const u=l(),_=c(u);if(!e||!_)return d();const f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{u.width=f.width,u.height=f.height,_.drawImage(f,0,0,u.width,u.height);const b=_.getImageData(0,0,u.width,u.height);a.height=u.height,a.width=u.width,p(Ul(b.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return Ul(o,a);throw new Error("Input data provided is not supported - aborted tensor creation")},ex=(e,r)=>{const{width:t,height:s,download:i,dispose:n}=r,o=[1,s,t,4];return new ps({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:n})},tx=(e,r)=>{const{dataType:t,dims:s,download:i,dispose:n}=r;return new ps({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:i,dispose:n})},rx=(e,r)=>{const{dataType:t,dims:s,download:i,dispose:n}=r;return new ps({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:i,dispose:n})},sx=(e,r,t)=>new ps({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]}),oi=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),pa=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let r_=!1;const nx=()=>{if(!r_){r_=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(oi.set("int64",BigInt64Array),pa.set(BigInt64Array,"int64")),r&&(oi.set("uint64",BigUint64Array),pa.set(BigUint64Array,"uint64")),s?(oi.set("float16",t),pa.set(t,"float16")):oi.set("float16",Uint16Array)}},ix=e=>{let r=1;for(let t=0;t<e.length;t++){const s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},ox=(e,r)=>{switch(e.location){case"cpu":return new ps(e.type,e.data,r);case"cpu-pinned":return new ps({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new ps({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new ps({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new ps({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let ps=class{constructor(r,t,s){nx();let i,n;if(typeof r=="object"&&"location"in r)switch(this.dataLocation=r.location,i=r.type,n=r.dims,r.location){case"cpu-pinned":{const a=oi.get(i);if(!a)throw new TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);if(!(r.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=r.data;break}case"texture":{if(i!=="float32")throw new TypeError(`unsupported type "${i}" to create tensor from texture`);this.gpuTextureData=r.texture,this.downloader=r.download,this.disposer=r.dispose;break}case"gpu-buffer":{if(i!=="float32"&&i!=="float16"&&i!=="int32"&&i!=="int64"&&i!=="uint32"&&i!=="uint8"&&i!=="bool"&&i!=="uint4"&&i!=="int4")throw new TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);this.gpuBufferData=r.gpuBuffer,this.downloader=r.download,this.disposer=r.dispose;break}case"ml-tensor":{if(i!=="float32"&&i!=="float16"&&i!=="int32"&&i!=="int64"&&i!=="uint32"&&i!=="uint64"&&i!=="int8"&&i!=="uint8"&&i!=="bool"&&i!=="uint4"&&i!=="int4")throw new TypeError(`unsupported type "${i}" to create tensor from MLTensor`);this.mlTensorData=r.mlTensor,this.downloader=r.download,this.disposer=r.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if(typeof r=="string")if(i=r,l=s,r==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const c=oi.get(r);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${r}.`);if(Array.isArray(t)){if(r==="float16"&&c===Uint16Array||r==="uint4"||r==="int4")throw new TypeError(`Creating a ${r} tensor from number array is not supported. Please use ${c.name} as data.`);r==="uint64"||r==="int64"?a=c.from(t,BigInt):a=c.from(t)}else if(t instanceof c)a=t;else if(t instanceof Uint8ClampedArray)if(r==="uint8")a=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(r==="float16"&&t instanceof Uint16Array&&c!==Uint16Array)a=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length);else throw new TypeError(`A ${i} tensor's data must be type of ${c}`)}else if(l=t,Array.isArray(r)){if(r.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const c=typeof r[0];if(c==="string")i="string",a=r;else if(c==="boolean")i="bool",a=Uint8Array.from(r);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(r instanceof Uint8ClampedArray)i="uint8",a=Uint8Array.from(r);else{const c=pa.get(r.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${r.constructor}.`);i=c,a=r}if(l===void 0)l=[a.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");n=l,this.cpuData=a,this.dataLocation="cpu"}const o=ix(n);if(this.cpuData&&o!==this.cpuData.length&&!((i==="uint4"||i==="int4")&&Math.ceil(o/2)===this.cpuData.length))throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=i,this.dims=n,this.size=o}static async fromImage(r,t){return Zv(r,t)}static fromTexture(r,t){return ex(r,t)}static fromGpuBuffer(r,t){return tx(r,t)}static fromMLTensor(r,t){return rx(r,t)}static fromPinnedBuffer(r,t,s){return sx(r,t,s)}toDataURL(r){return Yv(this,r)}toImageData(r){return Jv(this,r)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(r){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,r&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(r){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return ox(this,r)}};const ni=ps,zb=(e,r)=>{(typeof Cs.trace>"u"?!Cs.wasm.trace:!Cs.trace)||console.timeStamp(`${e}::ORT::${r}`)},Bb=(e,r)=>{var i;const t=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[];let s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let o=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(o+=`::${r}`),zb("CPU",o);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},Wc=e=>{(typeof Cs.trace>"u"?!Cs.wasm.trace:!Cs.trace)||Bb("BEGIN",e)},Gc=e=>{(typeof Cs.trace>"u"?!Cs.wasm.trace:!Cs.trace)||Bb("END",e)};let ax=class Rb{constructor(r){this.handler=r}async run(r,t,s){Wc();const i={};let n={};if(typeof r!="object"||r===null||r instanceof ni||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof ni)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(const c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);i[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const p=Object.getOwnPropertyNames(t);for(const d of this.outputNames)if(p.indexOf(d)!==-1){const u=t[d];(u===null||u instanceof ni)&&(c=!0,o=!1,i[d]=u)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(o)for(const c of this.outputNames)i[c]=null;const a=await this.handler.run(r,i,n),l={};for(const c in a)if(Object.hasOwnProperty.call(a,c)){const p=a[c];p instanceof ni?l[c]=p:l[c]=new ni(p.type,p.data,p.dims)}return Gc(),l}async release(){return this.handler.dispose()}static async create(r,t,s,i){Wc();let n,o={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){const p=r;let d=0,u=r.byteLength;if(typeof t=="object"&&t!==null)o=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(u=r.byteLength-d,typeof s=="number"){if(u=s,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||d+u>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-d}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,d,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[a,l]=await qv(o),c=await a.createInferenceSessionHandler(n,l);return Gc(),new Rb(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const lx=ax,cx=Object.freeze(Object.defineProperty({__proto__:null,InferenceSession:lx,TRACE:zb,TRACE_FUNC_BEGIN:Wc,TRACE_FUNC_END:Gc,Tensor:ni,env:Xv,registerBackend:Kv},Symbol.toStringTag,{value:"Module"}));/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var du=Object.defineProperty,ux=Object.getOwnPropertyDescriptor,dx=Object.getOwnPropertyNames,px=Object.prototype.hasOwnProperty,hx=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Ve=(e,r)=>()=>(e&&(r=e(e=0)),r),ui=(e,r)=>{for(var t in r)du(e,t,{get:r[t],enumerable:!0})},mx=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of dx(r))!px.call(e,i)&&i!==t&&du(e,i,{get:()=>r[i],enumerable:!(s=ux(r,i))||s.enumerable});return e},Zi=e=>mx(du({},"__esModule",{value:!0}),e),Bi,on,On,s_,jb,Nb=Ve(()=>{Bi=new Map,on=[],On=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let s=Bi.get(e);if(s===void 0)Bi.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let i=on.indexOf(e);i!==-1&&on.splice(i,1);for(let n=0;n<on.length;n++)if(Bi.get(on[n]).priority<=t){on.splice(n,0,e);return}on.push(e)}return}throw new TypeError("not a valid backend")},s_=async e=>{let r=Bi.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},jb=async e=>{let r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?on:t,i,n=[],o=new Set;for(let l of s){let c=await s_(l);typeof c=="string"?n.push({name:l,err:c}):(i||(i=c),i===c&&o.add(l))}if(!i)throw new Error(`no available backend found. ERR: ${n.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:c}of n)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);let a=r.filter(l=>o.has(typeof l=="string"?l:l.name));return[i,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]}}),fx=Ve(()=>{Nb()}),Vb,_x=Ve(()=>{Vb="1.22.0-dev.20250409-89f8206ba4"}),Wl,ds,Ub=Ve(()=>{_x(),Wl="warning",ds={wasm:{},webgl:{},webgpu:{},versions:{common:Vb},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Wl=e}},get logLevel(){return Wl}},Object.defineProperty(ds,"logLevel",{enumerable:!0})}),er,gx=Ve(()=>{Ub(),er=ds}),Wb,Gb,wx=Ve(()=>{Wb=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let s=t.getContext("2d");if(s!=null){let i,n;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[3]):(i=e.dims[3],n=e.dims[2]);let o=(r==null?void 0:r.format)!==void 0?r.format:"RGB",a=r==null?void 0:r.norm,l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));let p=n*i,d=0,u=p,_=p*2,f=-1;o==="RGBA"?(d=0,u=p,_=p*2,f=p*3):o==="RGB"?(d=0,u=p,_=p*2):o==="RBG"&&(d=0,_=p,u=p*2);for(let b=0;b<n;b++)for(let A=0;A<i;A++){let g=(e.data[d++]-c[0])*l[0],w=(e.data[u++]-c[1])*l[1],$=(e.data[_++]-c[2])*l[2],y=f===-1?255:(e.data[f++]-c[3])*l[3];s.fillStyle="rgba("+g+","+w+","+$+","+y+")",s.fillRect(A,b,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Gb=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(t!=null){let i,n,o;(r==null?void 0:r.tensorLayout)!==void 0&&r.tensorLayout==="NHWC"?(i=e.dims[2],n=e.dims[1],o=e.dims[3]):(i=e.dims[3],n=e.dims[2],o=e.dims[1]);let a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r==null?void 0:r.norm,c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));let d=n*i;if(r!==void 0&&(r.format!==void 0&&o===4&&r.format!=="RGBA"||o===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let u=4,_=0,f=1,b=2,A=3,g=0,w=d,$=d*2,y=-1;a==="RGBA"?(g=0,w=d,$=d*2,y=d*3):a==="RGB"?(g=0,w=d,$=d*2):a==="RBG"&&(g=0,$=d,w=d*2),s=t.createImageData(i,n);for(let v=0;v<n*i;_+=u,f+=u,b+=u,A+=u,v++)s.data[_]=(e.data[g++]-p[0])*c[0],s.data[f]=(e.data[w++]-p[1])*c[1],s.data[b]=(e.data[$++]-p[2])*c[2],s.data[A]=y===-1?255:(e.data[y++]-p[3])*c[3]}else throw new Error("Can not access image data");return s}}),Yo,Kb,Hb,qb,Qb,Xb,bx=Ve(()=>{pu(),Yo=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:s}=r,i=r.norm??{mean:255,bias:0},n,o;typeof i.mean=="number"?n=[i.mean,i.mean,i.mean,i.mean]:n=[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],typeof i.bias=="number"?o=[i.bias,i.bias,i.bias,i.bias]:o=[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3),d=4,u=0,_=1,f=2,b=3,A=0,g=c,w=c*2,$=-1;a==="RGB"&&(d=3,u=0,_=1,f=2,b=-1),l==="RGBA"?$=c*3:l==="RBG"?(A=0,w=c,g=c*2):l==="BGR"&&(w=0,g=c,A=c*2);for(let y=0;y<c;y++,u+=d,f+=d,_+=d,b+=d)p[A++]=(e[u]+o[0])/n[0],p[g++]=(e[_]+o[1])/n[1],p[w++]=(e[f]+o[2])/n[2],$!==-1&&b!==-1&&(p[$++]=(e[b]+o[3])/n[3]);return l==="RGBA"?new is("float32",p,[1,4,t,s]):new is("float32",p,[1,3,t,s])},Kb=async(e,r)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,n=typeof e=="string",o,a=r??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){let p=l();p.width=e.width,p.height=e.height;let d=c(p);if(d!=null){let u=e.height,_=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(u=r.resizedHeight,_=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=u,a.width=_}else a.tensorFormat="RGBA",a.height=u,a.width=_;d.drawImage(e,0,0),o=d.getImageData(0,0,_,u).data}else throw new Error("Can not access image data")}else if(s){let p,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,d=r.resizedWidth):(p=e.height,d=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=d,r!==void 0){let u=l();u.width=d,u.height=p;let _=c(u);if(_!=null)_.putImageData(e,0,0),o=_.getImageData(0,0,d,p).data;else throw new Error("Can not access image data")}else o=e.data}else if(i){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let p=l();p.width=e.width,p.height=e.height;let d=c(p);if(d!=null){let u=e.height,_=e.width;return d.drawImage(e,0,0,_,u),o=d.getImageData(0,0,_,u).data,a.height=u,a.width=_,Yo(o,a)}else throw new Error("Can not access image data")}else{if(n)return new Promise((p,d)=>{let u=l(),_=c(u);if(!e||!_)return d();let f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{u.width=f.width,u.height=f.height,_.drawImage(f,0,0,u.width,u.height);let b=_.getImageData(0,0,u.width,u.height);a.height=u.height,a.width=u.width,p(Yo(b.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return Yo(o,a);throw new Error("Input data provided is not supported - aborted tensor creation")},Hb=(e,r)=>{let{width:t,height:s,download:i,dispose:n}=r,o=[1,s,t,4];return new is({location:"texture",type:"float32",texture:e,dims:o,download:i,dispose:n})},qb=(e,r)=>{let{dataType:t,dims:s,download:i,dispose:n}=r;return new is({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:i,dispose:n})},Qb=(e,r)=>{let{dataType:t,dims:s,download:i,dispose:n}=r;return new is({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:i,dispose:n})},Xb=(e,r,t)=>new is({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]})}),Fn,qi,Gl,Yb,Mx=Ve(()=>{Fn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),qi=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Gl=!1,Yb=()=>{if(!Gl){Gl=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(Fn.set("int64",BigInt64Array),qi.set(BigInt64Array,"int64")),r&&(Fn.set("uint64",BigUint64Array),qi.set(BigUint64Array,"uint64")),s?(Fn.set("float16",t),qi.set(t,"float16")):Fn.set("float16",Uint16Array)}}}),Jb,Zb,yx=Ve(()=>{pu(),Jb=e=>{let r=1;for(let t=0;t<e.length;t++){let s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},Zb=(e,r)=>{switch(e.location){case"cpu":return new is(e.type,e.data,r);case"cpu-pinned":return new is({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new is({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new is({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new is({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),is,pu=Ve(()=>{wx(),bx(),Mx(),yx(),is=class{constructor(e,r,t){Yb();let s,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,i=e.dims,e.location){case"cpu-pinned":{let o=Fn.get(s);if(!o)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,a;if(typeof e=="string")if(s=e,a=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");o=r}else{let l=Fn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?o=l.from(r,BigInt):o=l.from(r)}else if(r instanceof l)o=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&r instanceof Uint16Array&&l!==Uint16Array)o=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw new TypeError(`A ${s} tensor's data must be type of ${l}`)}else if(a=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")s="string",o=e;else if(l==="boolean")s="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",o=Uint8Array.from(e);else{let l=qi.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=l,o=e}if(a===void 0)a=[o.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");i=a,this.cpuData=o,this.dataLocation="cpu"}let n=Jb(i);if(this.cpuData&&n!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(n/2)===this.cpuData.length))throw new Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=i,this.size=n}static async fromImage(e,r){return Kb(e,r)}static fromTexture(e,r){return Hb(e,r)}static fromGpuBuffer(e,r){return qb(e,r)}static fromMLTensor(e,r){return Qb(e,r)}static fromPinnedBuffer(e,r,t){return Xb(e,r,t)}toDataURL(e){return Wb(this,e)}toImageData(e){return Gb(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Zb(this,e)}}}),Ps,eM=Ve(()=>{pu(),Ps=is}),eo,Kl,$s,hs,tM=Ve(()=>{Ub(),eo=(e,r)=>{(typeof ds.trace>"u"?!ds.wasm.trace:!ds.trace)||console.timeStamp(`${e}::ORT::${r}`)},Kl=(e,r)=>{var i;let t=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[],s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let o=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(o+=`::${r}`),eo("CPU",o);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},$s=e=>{(typeof ds.trace>"u"?!ds.wasm.trace:!ds.trace)||Kl("BEGIN",e)},hs=e=>{(typeof ds.trace>"u"?!ds.wasm.trace:!ds.trace)||Kl("END",e)}}),rM,vx=Ve(()=>{Nb(),eM(),tM(),rM=class sM{constructor(r){this.handler=r}async run(r,t,s){$s();let i={},n={};if(typeof r!="object"||r===null||r instanceof Ps||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Ps)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);i[c]=null}if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,p=Object.getOwnPropertyNames(t);for(let d of this.outputNames)if(p.indexOf(d)!==-1){let u=t[d];(u===null||u instanceof Ps)&&(c=!0,o=!1,i[d]=u)}if(c){if(typeof s=="object"&&s!==null)n=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else n=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(o)for(let c of this.outputNames)i[c]=null;let a=await this.handler.run(r,i,n),l={};for(let c in a)if(Object.hasOwnProperty.call(a,c)){let p=a[c];p instanceof Ps?l[c]=p:l[c]=new Ps(p.type,p.data,p.dims)}return hs(),l}async release(){return this.handler.dispose()}static async create(r,t,s,i){$s();let n,o={};if(typeof r=="string"){if(n=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(n=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let p=r,d=0,u=r.byteLength;if(typeof t=="object"&&t!==null)o=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(u=r.byteLength-d,typeof s=="number"){if(u=s,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||d+u>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-d}].`);if(typeof i=="object"&&i!==null)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(p,d,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,l]=await jb(o),c=await a.createInferenceSessionHandler(n,l);return hs(),new sM(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),hu,xx=Ve(()=>{vx(),hu=rM}),Tx=Ve(()=>{}),Ex=Ve(()=>{}),Px=Ve(()=>{}),Cx=Ve(()=>{}),nM={};ui(nM,{InferenceSession:()=>hu,TRACE:()=>eo,TRACE_FUNC_BEGIN:()=>$s,TRACE_FUNC_END:()=>hs,Tensor:()=>Ps,env:()=>er,registerBackend:()=>On});var Ss=Ve(()=>{fx(),gx(),xx(),eM(),Tx(),Ex(),tM(),Px(),Cx()}),mu=Ve(()=>{}),iM={};ui(iM,{default:()=>oM});var Hl,ql,oM,$x=Ve(()=>{var e;dv(),jn(),fu(),Hl="ort-wasm-proxy-worker",ql=((e=globalThis.self)==null?void 0:e.name)===Hl,ql&&(self.onmessage=r=>{let{type:t,in:s}=r.data;try{switch(t){case"init-wasm":_u(s.wasm).then(()=>{Du(s).then(()=>{postMessage({type:t})},i=>{postMessage({type:t,err:i})})},i=>{postMessage({type:t,err:i})});break;case"init-ep":{let{epName:i,env:n}=s;Ou(n,i).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})});break}case"copy-from":{let{buffer:i}=s,n=va(i);postMessage({type:t,out:n});break}case"create":{let{model:i,options:n}=s;Lu(i,n).then(o=>{postMessage({type:t,out:o})},o=>{postMessage({type:t,err:o})});break}case"release":zu(s),postMessage({type:t});break;case"run":{let{sessionId:i,inputIndices:n,inputs:o,outputIndices:a,options:l}=s;Bu(i,n,o,a,new Array(a.length).fill(null),l).then(c=>{c.some(p=>p[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:c},ju([...o,...c]))},c=>{postMessage({type:t,err:c})});break}case"end-profiling":Ru(s),postMessage({type:t});break;default:}}catch(i){postMessage({type:t,err:i})}}),oM=ql?null:r=>new Worker(r??ns,{type:"module",name:Hl})}),aM={};ui(aM,{default:()=>lM});var Ql,Xl,lM,n_,Sx=Ve(()=>{var e,r;Xl=(Ql=import.meta.url,async function(t={}){var Zn;var s,i,n=t,o=new Promise((h,E)=>{s=h,i=E}),a=typeof window=="object",l=typeof WorkerGlobalScope<"u",c=l&&((Zn=self.name)==null?void 0:Zn.startsWith("em-pthread"));n.mountExternalData=(h,E)=>{h.startsWith("./")&&(h=h.substring(2)),(n.Eb||(n.Eb=new Map)).set(h,E)},n.unmountExternalData=()=>{delete n.Eb};var p=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let d=h=>async(...E)=>{var I;try{if(n.Fb)throw Error("Session already started");let z=n.Fb={dc:E[0],errors:[]},V=await h(...E);if(n.Fb!==z)throw Error("Session mismatch");(I=n.Jb)==null||I.flush();let ce=z.errors;if(0<ce.length){let Ce=await Promise.all(ce);if(Ce=Ce.filter(Oe=>Oe),0<Ce.length)throw Error(Ce.join(`
`))}return V}finally{n.Fb=null}};n.jsepInit=(h,E)=>{if(h==="webgpu"){[n.Jb,n.Ub,n.Yb,n.Kb,n.Xb,n.jb,n.Zb,n.ac,n.Vb,n.Wb,n.$b]=E;let I=n.Jb;n.jsepRegisterBuffer=(z,V,ce,Ce)=>I.registerBuffer(z,V,ce,Ce),n.jsepGetBuffer=z=>I.getBuffer(z),n.jsepCreateDownloader=(z,V,ce)=>I.createDownloader(z,V,ce),n.jsepOnCreateSession=z=>{I.onCreateSession(z)},n.jsepOnReleaseSession=z=>{I.onReleaseSession(z)},n.jsepOnRunStart=z=>I.onRunStart(z),n.bc=(z,V)=>{I.upload(z,V)}}else if(h==="webnn"){let I=E[0];[n.nc,n.Nb,n.webnnEnsureTensor,n.Ob,n.webnnDownloadTensor]=E.slice(1),n.webnnReleaseTensorId=n.Nb,n.webnnUploadTensor=n.Ob,n.webnnOnRunStart=z=>I.onRunStart(z),n.webnnOnRunEnd=I.onRunEnd.bind(I),n.webnnRegisterMLContext=(z,V)=>{I.registerMLContext(z,V)},n.webnnOnReleaseSession=z=>{I.onReleaseSession(z)},n.webnnCreateMLTensorDownloader=(z,V)=>I.createMLTensorDownloader(z,V),n.webnnRegisterMLTensor=(z,V,ce,Ce)=>I.registerMLTensor(z,V,ce,Ce),n.webnnCreateMLContext=z=>I.createMLContext(z),n.webnnRegisterMLConstant=(z,V,ce,Ce,Oe,Ke)=>I.registerMLConstant(z,V,ce,Ce,Oe,n.Eb,Ke),n.webnnRegisterGraphInput=I.registerGraphInput.bind(I),n.webnnIsGraphInput=I.isGraphInput.bind(I),n.webnnCreateTemporaryTensor=I.createTemporaryTensor.bind(I),n.webnnIsInt64Supported=I.isInt64Supported.bind(I)}};let u=()=>{let h=(E,I,z)=>(...V)=>{let ce=gr,Ce=I==null?void 0:I();V=E(...V);let Oe=I==null?void 0:I();return Ce!==Oe&&(E=Oe,z(Ce),I=z=null),gr!=ce?new Promise((Ke,ot)=>{Br={resolve:Ke,reject:ot}}):V};(()=>{for(let E of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])n[E]=h(n[E],()=>n[E],I=>n[E]=I)})(),d!==void 0&&(n._OrtRun=d(n._OrtRun),n._OrtRunWithBinding=d(n._OrtRunWithBinding)),u=void 0};n.asyncInit=()=>{u==null||u()};var _,f,b=Object.assign({},n),A=(h,E)=>{throw E},g="";(a||l)&&(l?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),Ql&&(g=Ql),g=g.startsWith("blob:")?"":g.slice(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1),l&&(f=h=>{var E=new XMLHttpRequest;return E.open("GET",h,!1),E.responseType="arraybuffer",E.send(null),new Uint8Array(E.response)}),_=async h=>{if(j(h))return new Promise((I,z)=>{var V=new XMLHttpRequest;V.open("GET",h,!0),V.responseType="arraybuffer",V.onload=()=>{V.status==200||V.status==0&&V.response?I(V.response):z(V.status)},V.onerror=z,V.send(null)});var E=await fetch(h,{credentials:"same-origin"});if(E.ok)return E.arrayBuffer();throw Error(E.status+" : "+E.url)});var w=console.log.bind(console),$=console.error.bind(console),y=w,v=$;Object.assign(n,b),b=null;var T,x,P,D,L,G,K,R,te,H,ee,Z,ne,me=n.wasmBinary,ue=!1,j=h=>h.startsWith("file://");function F(){return T.buffer!=D.buffer&&le(),D}function U(){return T.buffer!=D.buffer&&le(),L}function se(){return T.buffer!=D.buffer&&le(),G}function fe(){return T.buffer!=D.buffer&&le(),K}function oe(){return T.buffer!=D.buffer&&le(),R}function Te(){return T.buffer!=D.buffer&&le(),te}function Re(){return T.buffer!=D.buffer&&le(),H}function He(){return T.buffer!=D.buffer&&le(),ne}if(c){let h=function(E){try{var I=E.data,z=I.Bb;if(z==="load"){let V=[];self.onmessage=ce=>V.push(ce),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let ce of V)h(ce);self.onmessage=h};for(let ce of I.Rb)n[ce]&&!n[ce].proxy||(n[ce]=(...Ce)=>{postMessage({Bb:"callHandler",Qb:ce,args:Ce})},ce=="print"&&(y=n[ce]),ce=="printErr"&&(v=n[ce]));T=I.kc,le(),Me(I.lc)}else if(z==="run"){Hs(I.Ab),qn(I.Ab,0,0,1,0,0),as(),de(I.Ab),X||(Ci(),X=!0);try{qs(I.fc,I.Hb)}catch(V){if(V!="unwind")throw V}}else I.target!=="setimmediate"&&(z==="checkMailbox"?X&&Ee():z&&(v(`worker: received unknown command ${z}`),v(I)))}catch(V){throw Qn(),V}};var Me,X=!1;v=function(...E){E=E.join(" "),console.error(E)},self.alert=function(...E){postMessage({Bb:"alert",text:E.join(" "),ic:wn()})},self.onunhandledrejection=E=>{throw E.reason||E},self.onmessage=h}function le(){var h=T.buffer;n.HEAP8=D=new Int8Array(h),n.HEAP16=G=new Int16Array(h),n.HEAPU8=L=new Uint8Array(h),n.HEAPU16=K=new Uint16Array(h),n.HEAP32=R=new Int32Array(h),n.HEAPU32=te=new Uint32Array(h),n.HEAPF32=H=new Float32Array(h),n.HEAPF64=ne=new Float64Array(h),n.HEAP64=ee=new BigInt64Array(h),n.HEAPU64=Z=new BigUint64Array(h)}function W(){c?startWorker(n):dt.Ca()}c||(T=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),le());var ye,ke=0,Pe=null;function be(){if(--ke==0&&Pe){var h=Pe;Pe=null,h()}}function Se(h){throw v(h="Aborted("+h+")"),ue=!0,h=new WebAssembly.RuntimeError(h+". Build with -sASSERTIONS for more info."),i(h),h}function we(){return{a:{L:Qe,Aa:ze,b:Xs,$:As,A:S,pa:Q,X:re,Z:ge,qa:Fe,na:rt,ga:gt,ma:mt,J:xt,Y:st,V:Bt,oa:Vt,W:Nr,va:$r,E:Fs,Q:Wr,O:Gr,D:je,u:et,r:Yt,P:Rs,z:k,R:N,ja:J,T:Ne,aa:We,M:tt,F:Mt,ia:de,sa:Rt,t:Gt,Ba:_r,w:cs,o:ar,l:Hr,c:ms,n:Vn,j:no,v:io,p:oo,f:Js,s:ao,m:lo,e:co,k:uo,i:po,g:Zs,d:ho,da:mo,ea:fi,fa:fo,ba:_i,ca:Un,N:wi,xa:bi,ua:_o,h:Gn,C:go,G:wo,ta:xa,x:bo,ra:Mo,U:yo,q:gi,y:vo,K:xo,S:To,za:Mi,ya:Eo,ka:Po,la:vi,_:It,B:Co,I:xi,ha:Kn,H:Ti,a:T,wa:Je}}}var Ie={829644:(h,E,I,z,V)=>{if(n===void 0||!n.Eb)return 1;if((h=Xt(Number(h>>>0))).startsWith("./")&&(h=h.substring(2)),!(h=n.Eb.get(h)))return 2;if(E=Number(E>>>0),I=Number(I>>>0),z=Number(z>>>0),E+I>h.byteLength)return 3;try{let ce=h.subarray(E,E+I);switch(V){case 0:U().set(ce,z>>>0);break;case 1:n.mc?n.mc(z,ce):n.bc(z,ce);break;default:return 4}return 0}catch{return 4}},830468:(h,E,I)=>{n.Ob(h,U().subarray(E>>>0,E+I>>>0))},830532:()=>n.nc(),830574:h=>{n.Nb(h)},830611:()=>{n.Vb()},830642:()=>{n.Wb()},830671:()=>{n.$b()},830696:h=>n.Ub(h),830729:h=>n.Yb(h),830761:(h,E,I)=>{n.Kb(Number(h),Number(E),Number(I),!0)},830824:(h,E,I)=>{n.Kb(Number(h),Number(E),Number(I))},830881:()=>typeof wasmOffsetConverter<"u",830938:h=>{n.jb("Abs",h,void 0)},830989:h=>{n.jb("Neg",h,void 0)},831040:h=>{n.jb("Floor",h,void 0)},831093:h=>{n.jb("Ceil",h,void 0)},831145:h=>{n.jb("Reciprocal",h,void 0)},831203:h=>{n.jb("Sqrt",h,void 0)},831255:h=>{n.jb("Exp",h,void 0)},831306:h=>{n.jb("Erf",h,void 0)},831357:h=>{n.jb("Sigmoid",h,void 0)},831412:(h,E,I)=>{n.jb("HardSigmoid",h,{alpha:E,beta:I})},831491:h=>{n.jb("Log",h,void 0)},831542:h=>{n.jb("Sin",h,void 0)},831593:h=>{n.jb("Cos",h,void 0)},831644:h=>{n.jb("Tan",h,void 0)},831695:h=>{n.jb("Asin",h,void 0)},831747:h=>{n.jb("Acos",h,void 0)},831799:h=>{n.jb("Atan",h,void 0)},831851:h=>{n.jb("Sinh",h,void 0)},831903:h=>{n.jb("Cosh",h,void 0)},831955:h=>{n.jb("Asinh",h,void 0)},832008:h=>{n.jb("Acosh",h,void 0)},832061:h=>{n.jb("Atanh",h,void 0)},832114:h=>{n.jb("Tanh",h,void 0)},832166:h=>{n.jb("Not",h,void 0)},832217:(h,E,I)=>{n.jb("Clip",h,{min:E,max:I})},832286:h=>{n.jb("Clip",h,void 0)},832338:(h,E)=>{n.jb("Elu",h,{alpha:E})},832396:h=>{n.jb("Gelu",h,void 0)},832448:h=>{n.jb("Relu",h,void 0)},832500:(h,E)=>{n.jb("LeakyRelu",h,{alpha:E})},832564:(h,E)=>{n.jb("ThresholdedRelu",h,{alpha:E})},832634:(h,E)=>{n.jb("Cast",h,{to:E})},832692:h=>{n.jb("Add",h,void 0)},832743:h=>{n.jb("Sub",h,void 0)},832794:h=>{n.jb("Mul",h,void 0)},832845:h=>{n.jb("Div",h,void 0)},832896:h=>{n.jb("Pow",h,void 0)},832947:h=>{n.jb("Equal",h,void 0)},833e3:h=>{n.jb("Greater",h,void 0)},833055:h=>{n.jb("GreaterOrEqual",h,void 0)},833117:h=>{n.jb("Less",h,void 0)},833169:h=>{n.jb("LessOrEqual",h,void 0)},833228:(h,E,I,z,V)=>{n.jb("ReduceMean",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833403:(h,E,I,z,V)=>{n.jb("ReduceMax",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833577:(h,E,I,z,V)=>{n.jb("ReduceMin",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833751:(h,E,I,z,V)=>{n.jb("ReduceProd",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},833926:(h,E,I,z,V)=>{n.jb("ReduceSum",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834100:(h,E,I,z,V)=>{n.jb("ReduceL1",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834273:(h,E,I,z,V)=>{n.jb("ReduceL2",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834446:(h,E,I,z,V)=>{n.jb("ReduceLogSum",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834623:(h,E,I,z,V)=>{n.jb("ReduceSumSquare",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834803:(h,E,I,z,V)=>{n.jb("ReduceLogSumExp",h,{keepDims:!!E,noopWithEmptyAxes:!!I,axes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},834983:h=>{n.jb("Where",h,void 0)},835036:(h,E,I)=>{n.jb("Transpose",h,{perm:E?Array.from(oe().subarray(Number(E)>>>0,Number(I)>>>0)):[]})},835160:(h,E,I,z)=>{n.jb("DepthToSpace",h,{blocksize:E,mode:Xt(I),format:z?"NHWC":"NCHW"})},835293:(h,E,I,z)=>{n.jb("DepthToSpace",h,{blocksize:E,mode:Xt(I),format:z?"NHWC":"NCHW"})},835426:(h,E,I,z,V,ce,Ce,Oe,Ke,ot,Tt,Ot,Kt,vr,Ds)=>{n.jb("ConvTranspose",h,{format:Ke?"NHWC":"NCHW",autoPad:E,dilations:[I],group:z,kernelShape:[V],pads:[ce,Ce],strides:[Oe],wIsConst:()=>!!F()[ot>>>0],outputPadding:Tt?Array.from(oe().subarray(Number(Tt)>>>0,Number(Ot)>>>0)):[],outputShape:Kt?Array.from(oe().subarray(Number(Kt)>>>0,Number(vr)>>>0)):[],activation:Xt(Ds)})},835859:(h,E,I,z,V,ce,Ce,Oe,Ke,ot,Tt,Ot,Kt,vr)=>{n.jb("ConvTranspose",h,{format:Oe?"NHWC":"NCHW",autoPad:E,dilations:Array.from(oe().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),group:z,kernelShape:Array.from(oe().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(oe().subarray(Number(ce)>>>0,4+(Number(ce)>>>0)>>>0)),strides:Array.from(oe().subarray(Number(Ce)>>>0,2+(Number(Ce)>>>0)>>>0)),wIsConst:()=>!!F()[Ke>>>0],outputPadding:ot?Array.from(oe().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],outputShape:Ot?Array.from(oe().subarray(Number(Ot)>>>0,Number(Kt)>>>0)):[],activation:Xt(vr)})},836520:(h,E,I,z,V,ce,Ce,Oe,Ke,ot,Tt,Ot,Kt,vr,Ds)=>{n.jb("ConvTranspose",h,{format:Ke?"NHWC":"NCHW",autoPad:E,dilations:[I],group:z,kernelShape:[V],pads:[ce,Ce],strides:[Oe],wIsConst:()=>!!F()[ot>>>0],outputPadding:Tt?Array.from(oe().subarray(Number(Tt)>>>0,Number(Ot)>>>0)):[],outputShape:Kt?Array.from(oe().subarray(Number(Kt)>>>0,Number(vr)>>>0)):[],activation:Xt(Ds)})},836953:(h,E,I,z,V,ce,Ce,Oe,Ke,ot,Tt,Ot,Kt,vr)=>{n.jb("ConvTranspose",h,{format:Oe?"NHWC":"NCHW",autoPad:E,dilations:Array.from(oe().subarray(Number(I)>>>0,2+(Number(I)>>>0)>>>0)),group:z,kernelShape:Array.from(oe().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(oe().subarray(Number(ce)>>>0,4+(Number(ce)>>>0)>>>0)),strides:Array.from(oe().subarray(Number(Ce)>>>0,2+(Number(Ce)>>>0)>>>0)),wIsConst:()=>!!F()[Ke>>>0],outputPadding:ot?Array.from(oe().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],outputShape:Ot?Array.from(oe().subarray(Number(Ot)>>>0,Number(Kt)>>>0)):[],activation:Xt(vr)})},837614:(h,E)=>{n.jb("GlobalAveragePool",h,{format:E?"NHWC":"NCHW"})},837705:(h,E,I,z,V,ce,Ce,Oe,Ke,ot,Tt,Ot,Kt,vr)=>{n.jb("AveragePool",h,{format:vr?"NHWC":"NCHW",auto_pad:E,ceil_mode:I,count_include_pad:z,storage_order:V,dilations:ce?Array.from(oe().subarray(Number(ce)>>>0,Number(Ce)>>>0)):[],kernel_shape:Oe?Array.from(oe().subarray(Number(Oe)>>>0,Number(Ke)>>>0)):[],pads:ot?Array.from(oe().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],strides:Ot?Array.from(oe().subarray(Number(Ot)>>>0,Number(Kt)>>>0)):[]})},838184:(h,E)=>{n.jb("GlobalAveragePool",h,{format:E?"NHWC":"NCHW"})},838275:(h,E,I,z,V,ce,Ce,Oe,Ke,ot,Tt,Ot,Kt,vr)=>{n.jb("AveragePool",h,{format:vr?"NHWC":"NCHW",auto_pad:E,ceil_mode:I,count_include_pad:z,storage_order:V,dilations:ce?Array.from(oe().subarray(Number(ce)>>>0,Number(Ce)>>>0)):[],kernel_shape:Oe?Array.from(oe().subarray(Number(Oe)>>>0,Number(Ke)>>>0)):[],pads:ot?Array.from(oe().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],strides:Ot?Array.from(oe().subarray(Number(Ot)>>>0,Number(Kt)>>>0)):[]})},838754:(h,E)=>{n.jb("GlobalMaxPool",h,{format:E?"NHWC":"NCHW"})},838841:(h,E,I,z,V,ce,Ce,Oe,Ke,ot,Tt,Ot,Kt,vr)=>{n.jb("MaxPool",h,{format:vr?"NHWC":"NCHW",auto_pad:E,ceil_mode:I,count_include_pad:z,storage_order:V,dilations:ce?Array.from(oe().subarray(Number(ce)>>>0,Number(Ce)>>>0)):[],kernel_shape:Oe?Array.from(oe().subarray(Number(Oe)>>>0,Number(Ke)>>>0)):[],pads:ot?Array.from(oe().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],strides:Ot?Array.from(oe().subarray(Number(Ot)>>>0,Number(Kt)>>>0)):[]})},839316:(h,E)=>{n.jb("GlobalMaxPool",h,{format:E?"NHWC":"NCHW"})},839403:(h,E,I,z,V,ce,Ce,Oe,Ke,ot,Tt,Ot,Kt,vr)=>{n.jb("MaxPool",h,{format:vr?"NHWC":"NCHW",auto_pad:E,ceil_mode:I,count_include_pad:z,storage_order:V,dilations:ce?Array.from(oe().subarray(Number(ce)>>>0,Number(Ce)>>>0)):[],kernel_shape:Oe?Array.from(oe().subarray(Number(Oe)>>>0,Number(Ke)>>>0)):[],pads:ot?Array.from(oe().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],strides:Ot?Array.from(oe().subarray(Number(Ot)>>>0,Number(Kt)>>>0)):[]})},839878:(h,E,I,z,V)=>{n.jb("Gemm",h,{alpha:E,beta:I,transA:z,transB:V})},839982:h=>{n.jb("MatMul",h,void 0)},840036:(h,E,I,z)=>{n.jb("ArgMax",h,{keepDims:!!E,selectLastIndex:!!I,axis:z})},840144:(h,E,I,z)=>{n.jb("ArgMin",h,{keepDims:!!E,selectLastIndex:!!I,axis:z})},840252:(h,E)=>{n.jb("Softmax",h,{axis:E})},840315:(h,E)=>{n.jb("Concat",h,{axis:E})},840375:(h,E,I,z,V)=>{n.jb("Split",h,{axis:E,numOutputs:I,splitSizes:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},840531:h=>{n.jb("Expand",h,void 0)},840585:(h,E)=>{n.jb("Gather",h,{axis:Number(E)})},840656:(h,E)=>{n.jb("GatherElements",h,{axis:Number(E)})},840735:(h,E)=>{n.jb("GatherND",h,{batch_dims:Number(E)})},840814:(h,E,I,z,V,ce,Ce,Oe,Ke,ot,Tt)=>{n.jb("Resize",h,{antialias:E,axes:I?Array.from(oe().subarray(Number(I)>>>0,Number(z)>>>0)):[],coordinateTransformMode:Xt(V),cubicCoeffA:ce,excludeOutside:Ce,extrapolationValue:Oe,keepAspectRatioPolicy:Xt(Ke),mode:Xt(ot),nearestMode:Xt(Tt)})},841176:(h,E,I,z,V,ce,Ce)=>{n.jb("Slice",h,{starts:E?Array.from(oe().subarray(Number(E)>>>0,Number(I)>>>0)):[],ends:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[],axes:ce?Array.from(oe().subarray(Number(ce)>>>0,Number(Ce)>>>0)):[]})},841440:h=>{n.jb("Tile",h,void 0)},841492:(h,E,I)=>{n.jb("InstanceNormalization",h,{epsilon:E,format:I?"NHWC":"NCHW"})},841606:(h,E,I)=>{n.jb("InstanceNormalization",h,{epsilon:E,format:I?"NHWC":"NCHW"})},841720:h=>{n.jb("Range",h,void 0)},841773:(h,E)=>{n.jb("Einsum",h,{equation:Xt(E)})},841854:(h,E,I,z,V)=>{n.jb("Pad",h,{mode:E,value:I,pads:z?Array.from(oe().subarray(Number(z)>>>0,Number(V)>>>0)):[]})},841997:(h,E,I,z,V,ce)=>{n.jb("BatchNormalization",h,{epsilon:E,momentum:I,spatial:!!V,trainingMode:!!z,format:ce?"NHWC":"NCHW"})},842166:(h,E,I,z,V,ce)=>{n.jb("BatchNormalization",h,{epsilon:E,momentum:I,spatial:!!V,trainingMode:!!z,format:ce?"NHWC":"NCHW"})},842335:(h,E,I)=>{n.jb("CumSum",h,{exclusive:Number(E),reverse:Number(I)})},842432:(h,E,I)=>{n.jb("DequantizeLinear",h,{axis:E,blockSize:I})},842522:(h,E,I,z,V)=>{n.jb("GridSample",h,{align_corners:E,mode:Xt(I),padding_mode:Xt(z),format:V?"NHWC":"NCHW"})},842692:(h,E,I,z,V)=>{n.jb("GridSample",h,{align_corners:E,mode:Xt(I),padding_mode:Xt(z),format:V?"NHWC":"NCHW"})},842862:(h,E)=>{n.jb("ScatterND",h,{reduction:Xt(E)})},842947:(h,E,I,z,V,ce,Ce,Oe,Ke)=>{n.jb("Attention",h,{numHeads:E,isUnidirectional:I,maskFilterValue:z,scale:V,doRotary:ce,qkvHiddenSizes:Ce?Array.from(oe().subarray(Number(Oe)>>>0,Number(Oe)+Ce>>>0)):[],pastPresentShareBuffer:!!Ke})},843219:h=>{n.jb("BiasAdd",h,void 0)},843274:h=>{n.jb("BiasSplitGelu",h,void 0)},843335:h=>{n.jb("FastGelu",h,void 0)},843391:(h,E,I,z,V,ce,Ce,Oe,Ke,ot,Tt,Ot,Kt,vr,Ds,So)=>{n.jb("Conv",h,{format:Ot?"NHWC":"NCHW",auto_pad:E,dilations:I?Array.from(oe().subarray(Number(I)>>>0,Number(z)>>>0)):[],group:V,kernel_shape:ce?Array.from(oe().subarray(Number(ce)>>>0,Number(Ce)>>>0)):[],pads:Oe?Array.from(oe().subarray(Number(Oe)>>>0,Number(Ke)>>>0)):[],strides:ot?Array.from(oe().subarray(Number(ot)>>>0,Number(Tt)>>>0)):[],w_is_const:()=>!!F()[Number(Kt)>>>0],activation:Xt(vr),activation_params:Ds?Array.from(Re().subarray(Number(Ds)>>>0,Number(So)>>>0)):[]})},843975:h=>{n.jb("Gelu",h,void 0)},844027:(h,E,I,z,V,ce,Ce,Oe,Ke)=>{n.jb("GroupQueryAttention",h,{numHeads:E,kvNumHeads:I,scale:z,softcap:V,doRotary:ce,rotaryInterleaved:Ce,smoothSoftmax:Oe,localWindowSize:Ke})},844244:(h,E,I,z)=>{n.jb("LayerNormalization",h,{axis:E,epsilon:I,simplified:!!z})},844355:(h,E,I,z)=>{n.jb("LayerNormalization",h,{axis:E,epsilon:I,simplified:!!z})},844466:(h,E,I,z,V,ce)=>{n.jb("MatMulNBits",h,{k:E,n:I,accuracyLevel:z,bits:V,blockSize:ce})},844593:(h,E,I,z,V,ce)=>{n.jb("MultiHeadAttention",h,{numHeads:E,isUnidirectional:I,maskFilterValue:z,scale:V,doRotary:ce})},844752:(h,E)=>{n.jb("QuickGelu",h,{alpha:E})},844816:(h,E,I,z,V)=>{n.jb("RotaryEmbedding",h,{interleaved:!!E,numHeads:I,rotaryEmbeddingDim:z,scale:V})},844955:(h,E,I)=>{n.jb("SkipLayerNormalization",h,{epsilon:E,simplified:!!I})},845057:(h,E,I)=>{n.jb("SkipLayerNormalization",h,{epsilon:E,simplified:!!I})},845159:(h,E,I,z)=>{n.jb("GatherBlockQuantized",h,{gatherAxis:E,quantizeAxis:I,blockSize:z})},845280:h=>{n.Zb(h)},845314:(h,E)=>n.ac(Number(h),Number(E),n.Fb.dc,n.Fb.errors)};function ze(h,E,I){return kr(async()=>{await n.Xb(Number(h),Number(E),Number(I))})}function Qe(){return typeof wasmOffsetConverter<"u"}class xe{constructor(E){Y(this,"name","ExitStatus");this.message=`Program terminated with exit(${E})`,this.status=E}}var Ze=h=>{h.terminate(),h.onmessage=()=>{}},Ge=[],nt=h=>{St.length==0&&(Cr(),Qt(St[0]));var E=St.pop();if(!E)return 6;bt.push(E),Pr[h.Ab]=E,E.Ab=h.Ab;var I={Bb:"run",fc:h.ec,Hb:h.Hb,Ab:h.Ab};return E.postMessage(I,h.Mb),0},Ye=0,De=(h,E,...I)=>{for(var z=2*I.length,V=vn(),ce=Yn(8*z),Ce=ce>>>3,Oe=0;Oe<I.length;Oe++){var Ke=I[Oe];typeof Ke=="bigint"?(ee[Ce+2*Oe]=1n,ee[Ce+2*Oe+1]=Ke):(ee[Ce+2*Oe]=0n,He()[Ce+2*Oe+1>>>0]=Ke)}return h=$i(h,0,z,ce,E),yn(V),h};function Je(h){if(c)return De(0,1,h);if(P=h,!(0<Ye)){for(var E of bt)Ze(E);for(E of St)Ze(E);St=[],bt=[],Pr={},ue=!0}A(0,new xe(h))}function it(h){if(c)return De(1,0,h);It(h)}var It=h=>{if(P=h,c)throw it(h),"unwind";Je(h)},St=[],bt=[],Mr=[],Pr={},jr=h=>{var E=h.Ab;delete Pr[E],St.push(h),bt.splice(bt.indexOf(h),1),h.Ab=0,Si(E)};function as(){Mr.forEach(h=>h())}var Qt=h=>new Promise(E=>{h.onmessage=V=>{var ce=(V=V.data).Bb;if(V.Gb&&V.Gb!=wn()){var Ce=Pr[V.Gb];Ce?Ce.postMessage(V,V.Mb):v(`Internal error! Worker sent a message "${ce}" to target pthread ${V.Gb}, but that thread no longer exists!`)}else ce==="checkMailbox"?Ee():ce==="spawnThread"?nt(V):ce==="cleanupThread"?jr(Pr[V.hc]):ce==="loaded"?(h.loaded=!0,E(h)):ce==="alert"?alert(`Thread ${V.ic}: ${V.text}`):V.target==="setimmediate"?h.postMessage(V):ce==="callHandler"?n[V.Qb](...V.args):ce&&v(`worker sent an unknown command ${ce}`)},h.onerror=V=>{throw v(`worker sent an error! ${V.filename}:${V.lineno}: ${V.message}`),V};var I,z=[];for(I of[])n.propertyIsEnumerable(I)&&z.push(I);h.postMessage({Bb:"load",Rb:z,kc:T,lc:x})});function Cr(){var h=new Worker((()=>{let E=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new E("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});St.push(h)}var Hs=h=>{le();var E=Te()[h+52>>>2>>>0];h=Te()[h+56>>>2>>>0],Xn(E,E-h),yn(E)},qs=(h,E)=>{Ye=0,h=Ii(h,E),0<Ye?P=h:Mn(h)};class Qs{constructor(E){this.Ib=E-24}}function Xs(h,E,I){var z=new Qs(h>>>=0);throw E>>>=0,I>>>=0,Te()[z.Ib+16>>>2>>>0]=0,Te()[z.Ib+4>>>2>>>0]=E,Te()[z.Ib+8>>>2>>>0]=I,h}function ht(h,E,I,z){return c?De(2,1,h,E,I,z):As(h,E,I,z)}function As(h,E,I,z){if(h>>>=0,I>>>=0,z>>>=0,p===void 0)return 6;var V=[];return c&&V.length===0?ht(h,E>>>=0,I,z):(h={ec:I,Ab:h,Hb:z,Mb:V},c?(h.Bb="spawnThread",postMessage(h,V),0):nt(h))}var ks=typeof TextDecoder<"u"?new TextDecoder:void 0,$t=(h,E=0,I=NaN)=>{var z=(E>>>=0)+I;for(I=E;h[I]&&!(I>=z);)++I;if(16<I-E&&h.buffer&&ks)return ks.decode(h.buffer instanceof ArrayBuffer?h.subarray(E,I):h.slice(E,I));for(z="";E<I;){var V=h[E++];if(128&V){var ce=63&h[E++];if((224&V)==192)z+=String.fromCharCode((31&V)<<6|ce);else{var Ce=63&h[E++];65536>(V=(240&V)==224?(15&V)<<12|ce<<6|Ce:(7&V)<<18|ce<<12|Ce<<6|63&h[E++])?z+=String.fromCharCode(V):(V-=65536,z+=String.fromCharCode(55296|V>>10,56320|1023&V))}}else z+=String.fromCharCode(V)}return z},Xt=(h,E)=>(h>>>=0)?$t(U(),h,E):"";function S(h,E,I){return c?De(3,1,h,E,I):0}function Q(h,E){if(c)return De(4,1,h,E)}var B=h=>{for(var E=0,I=0;I<h.length;++I){var z=h.charCodeAt(I);127>=z?E++:2047>=z?E+=2:55296<=z&&57343>=z?(E+=4,++I):E+=3}return E},q=(h,E,I)=>{var z=U();if(E>>>=0,0<I){var V=E;I=E+I-1;for(var ce=0;ce<h.length;++ce){var Ce=h.charCodeAt(ce);if(55296<=Ce&&57343>=Ce&&(Ce=65536+((1023&Ce)<<10)|1023&h.charCodeAt(++ce)),127>=Ce){if(E>=I)break;z[E++>>>0]=Ce}else{if(2047>=Ce){if(E+1>=I)break;z[E++>>>0]=192|Ce>>6}else{if(65535>=Ce){if(E+2>=I)break;z[E++>>>0]=224|Ce>>12}else{if(E+3>=I)break;z[E++>>>0]=240|Ce>>18,z[E++>>>0]=128|Ce>>12&63}z[E++>>>0]=128|Ce>>6&63}z[E++>>>0]=128|63&Ce}}z[E>>>0]=0,h=E-V}else h=0;return h};function re(h,E){if(c)return De(5,1,h,E)}function ge(h,E,I){if(c)return De(6,1,h,E,I)}function Fe(h,E,I){return c?De(7,1,h,E,I):0}function rt(h,E){if(c)return De(8,1,h,E)}function gt(h,E,I){if(c)return De(9,1,h,E,I)}function mt(h,E,I,z){if(c)return De(10,1,h,E,I,z)}function xt(h,E,I,z){if(c)return De(11,1,h,E,I,z)}function st(h,E,I,z){if(c)return De(12,1,h,E,I,z)}function Bt(h){if(c)return De(13,1,h)}function Vt(h,E){if(c)return De(14,1,h,E)}function Nr(h,E,I){if(c)return De(15,1,h,E,I)}var Qr,sr,$r=()=>Se(""),Sr=h=>{for(var E="";U()[h>>>0];)E+=Qr[U()[h++>>>0]];return E},Vr={},ls={};function Ar(h,E,I={}){return function(z,V,ce={}){var Ce=V.name;if(!z)throw new sr(`type "${Ce}" must have a positive integer typeid pointer`);if(ls.hasOwnProperty(z)){if(ce.Sb)return;throw new sr(`Cannot register type '${Ce}' twice`)}ls[z]=V,Vr.hasOwnProperty(z)&&(V=Vr[z],delete Vr[z],V.forEach(Oe=>Oe()))}(h,E,I)}var Is=(h,E,I)=>{switch(E){case 1:return I?z=>F()[z>>>0]:z=>U()[z>>>0];case 2:return I?z=>se()[z>>>1>>>0]:z=>fe()[z>>>1>>>0];case 4:return I?z=>oe()[z>>>2>>>0]:z=>Te()[z>>>2>>>0];case 8:return I?z=>ee[z>>>3]:z=>Z[z>>>3];default:throw new TypeError(`invalid integer width (${E}): ${h}`)}};function Fs(h,E,I){I>>>=0,Ar(h>>>=0,{name:E=Sr(E>>>0),fromWireType:z=>z,toWireType:function(z,V){if(typeof V!="bigint"&&typeof V!="number")throw V=V===null?"null":(z=typeof V)=="object"||z==="array"||z==="function"?V.toString():""+V,new TypeError(`Cannot convert "${V}" to ${this.name}`);return typeof V=="number"&&(V=BigInt(V)),V},Cb:Ur,readValueFromPointer:Is(E,I,E.indexOf("u")==-1),Db:null})}var Ur=8;function Wr(h,E,I,z){Ar(h>>>=0,{name:E=Sr(E>>>0),fromWireType:function(V){return!!V},toWireType:function(V,ce){return ce?I:z},Cb:Ur,readValueFromPointer:function(V){return this.fromWireType(U()[V>>>0])},Db:null})}var es=[],Or=[];function ms(h){9<(h>>>=0)&&--Or[h+1]==0&&(Or[h]=void 0,es.push(h))}var hr=h=>{if(!h)throw new sr("Cannot use deleted val. handle = "+h);return Or[h]},fr=h=>{switch(h){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let E=es.pop()||Or.length;return Or[E]=h,Or[E+1]=1,E}};function Xr(h){return this.fromWireType(Te()[h>>>2>>>0])}var Bs={name:"emscripten::val",fromWireType:h=>{var E=hr(h);return ms(h),E},toWireType:(h,E)=>fr(E),Cb:Ur,readValueFromPointer:Xr,Db:null};function Gr(h){return Ar(h>>>0,Bs)}var Be=(h,E)=>{switch(E){case 4:return function(I){return this.fromWireType(Re()[I>>>2>>>0])};case 8:return function(I){return this.fromWireType(He()[I>>>3>>>0])};default:throw new TypeError(`invalid float width (${E}): ${h}`)}};function je(h,E,I){I>>>=0,Ar(h>>>=0,{name:E=Sr(E>>>0),fromWireType:z=>z,toWireType:(z,V)=>V,Cb:Ur,readValueFromPointer:Be(E,I),Db:null})}function et(h,E,I,z,V){if(h>>>=0,I>>>=0,E=Sr(E>>>0),V===-1&&(V=4294967295),V=Oe=>Oe,z===0){var ce=32-8*I;V=Oe=>Oe<<ce>>>ce}var Ce=E.includes("unsigned")?function(Oe,Ke){return Ke>>>0}:function(Oe,Ke){return Ke};Ar(h,{name:E,fromWireType:V,toWireType:Ce,Cb:Ur,readValueFromPointer:Is(E,I,z!==0),Db:null})}function Yt(h,E,I){function z(ce){var Ce=Te()[ce>>>2>>>0];return ce=Te()[ce+4>>>2>>>0],new V(F().buffer,ce,Ce)}var V=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][E];Ar(h>>>=0,{name:I=Sr(I>>>0),fromWireType:z,Cb:Ur,readValueFromPointer:z},{Sb:!0})}function Rs(h,E){Ar(h>>>=0,{name:E=Sr(E>>>0),fromWireType:function(I){for(var z,V=Te()[I>>>2>>>0],ce=I+4,Ce=ce,Oe=0;Oe<=V;++Oe){var Ke=ce+Oe;Oe!=V&&U()[Ke>>>0]!=0||(Ce=Xt(Ce,Ke-Ce),z===void 0?z=Ce:(z+="\0",z+=Ce),Ce=Ke+1)}return ts(I),z},toWireType:function(I,z){z instanceof ArrayBuffer&&(z=new Uint8Array(z));var V=typeof z=="string";if(!(V||z instanceof Uint8Array||z instanceof Uint8ClampedArray||z instanceof Int8Array))throw new sr("Cannot pass non-string to std::string");var ce=V?B(z):z.length,Ce=bn(4+ce+1),Oe=Ce+4;if(Te()[Ce>>>2>>>0]=ce,V)q(z,Oe,ce+1);else if(V)for(V=0;V<ce;++V){var Ke=z.charCodeAt(V);if(255<Ke)throw ts(Ce),new sr("String has UTF-16 code units that do not fit in 8 bits");U()[Oe+V>>>0]=Ke}else for(V=0;V<ce;++V)U()[Oe+V>>>0]=z[V];return I!==null&&I.push(ts,Ce),Ce},Cb:Ur,readValueFromPointer:Xr,Db(I){ts(I)}})}var fs=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,js=(h,E)=>{for(var I=h>>1,z=I+E/2;!(I>=z)&&fe()[I>>>0];)++I;if(32<(I<<=1)-h&&fs)return fs.decode(U().slice(h,I));for(I="",z=0;!(z>=E/2);++z){var V=se()[h+2*z>>>1>>>0];if(V==0)break;I+=String.fromCharCode(V)}return I},_s=(h,E,I)=>{if(I??(I=2147483647),2>I)return 0;var z=E;I=(I-=2)<2*h.length?I/2:h.length;for(var V=0;V<I;++V){var ce=h.charCodeAt(V);se()[E>>>1>>>0]=ce,E+=2}return se()[E>>>1>>>0]=0,E-z},dn=h=>2*h.length,pn=(h,E)=>{for(var I=0,z="";!(I>=E/4);){var V=oe()[h+4*I>>>2>>>0];if(V==0)break;++I,65536<=V?(V-=65536,z+=String.fromCharCode(55296|V>>10,56320|1023&V)):z+=String.fromCharCode(V)}return z},hn=(h,E,I)=>{if(E>>>=0,I??(I=2147483647),4>I)return 0;var z=E;I=z+I-4;for(var V=0;V<h.length;++V){var ce=h.charCodeAt(V);if(55296<=ce&&57343>=ce&&(ce=65536+((1023&ce)<<10)|1023&h.charCodeAt(++V)),oe()[E>>>2>>>0]=ce,(E+=4)+4>I)break}return oe()[E>>>2>>>0]=0,E-z},pe=h=>{for(var E=0,I=0;I<h.length;++I){var z=h.charCodeAt(I);55296<=z&&57343>=z&&++I,E+=4}return E};function k(h,E,I){if(h>>>=0,E>>>=0,I=Sr(I>>>=0),E===2)var z=js,V=_s,ce=dn,Ce=Oe=>fe()[Oe>>>1>>>0];else E===4&&(z=pn,V=hn,ce=pe,Ce=Oe=>Te()[Oe>>>2>>>0]);Ar(h,{name:I,fromWireType:Oe=>{for(var Ke,ot=Te()[Oe>>>2>>>0],Tt=Oe+4,Ot=0;Ot<=ot;++Ot){var Kt=Oe+4+Ot*E;Ot!=ot&&Ce(Kt)!=0||(Tt=z(Tt,Kt-Tt),Ke===void 0?Ke=Tt:(Ke+="\0",Ke+=Tt),Tt=Kt+E)}return ts(Oe),Ke},toWireType:(Oe,Ke)=>{if(typeof Ke!="string")throw new sr(`Cannot pass non-string to C++ string type ${I}`);var ot=ce(Ke),Tt=bn(4+ot+E);return Te()[Tt>>>2>>>0]=ot/E,V(Ke,Tt+4,ot+E),Oe!==null&&Oe.push(ts,Tt),Tt},Cb:Ur,readValueFromPointer:Xr,Db(Oe){ts(Oe)}})}function N(h,E){Ar(h>>>=0,{Tb:!0,name:E=Sr(E>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function J(h){qn(h>>>0,!l,1,!a,131072,!1),as()}var ae=h=>{if(!ue)try{if(h(),!(0<Ye))try{c?Mn(P):It(P)}catch(E){E instanceof xe||E=="unwind"||A(0,E)}}catch(E){E instanceof xe||E=="unwind"||A(0,E)}};function de(h){h>>>=0,typeof Atomics.jc=="function"&&(Atomics.jc(oe(),h>>>2,h).value.then(Ee),h+=128,Atomics.store(oe(),h>>>2,1))}var Ee=()=>{var h=wn();h&&(de(h),ae(ki))};function Ne(h,E){(h>>>=0)==E>>>0?setTimeout(Ee):c?postMessage({Gb:h,Bb:"checkMailbox"}):(h=Pr[h])&&h.postMessage({Bb:"checkMailbox"})}var qe=[];function We(h,E,I,z,V){for(E>>>=0,z/=2,qe.length=z,I=V>>>0>>>3,V=0;V<z;V++)qe[V]=ee[I+2*V]?ee[I+2*V+1]:He()[I+2*V+1>>>0];return(E?Ie[E]:Hn[h])(...qe)}var tt=()=>{Ye=0};function Mt(h){h>>>=0,c?postMessage({Bb:"cleanupThread",hc:h}):jr(Pr[h])}function Rt(h){}var Lt=(h,E)=>{var I=ls[h];if(I===void 0)throw h=Pi(h),I=Sr(h),ts(h),new sr(`${E} has unknown type ${I}`);return I},nr=(h,E,I)=>{var z=[];return h=h.toWireType(z,I),z.length&&(Te()[E>>>2>>>0]=fr(z)),h};function Gt(h,E,I){return E>>>=0,I>>>=0,h=hr(h>>>0),E=Lt(E,"emval::as"),nr(E,I,h)}function _r(h,E){return E>>>=0,h=hr(h>>>0),(E=Lt(E,"emval::as")).toWireType(null,h)}var yr=h=>{try{h()}catch(E){Se(E)}},or=0,gr=null,Lr=0,Yr=[],Zt={},wr={},Kr=0,Br=null,gs=[];function kr(h){return function(E){if(!ue){if(or===0){var I=!1,z=!1;E((V=0)=>{if(!ue&&(Lr=V,I=!0,z)){or=2,yr(()=>Di(gr)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),V=!1;try{var ce=function(){var Ke=oe()[gr+8>>>2>>>0];return Ke=dt[wr[Ke]],--Ye,Ke()}()}catch(Ke){ce=Ke,V=!0}var Ce=!1;if(!gr){var Oe=Br;Oe&&(Br=null,(V?Oe.reject:Oe.resolve)(ce),Ce=!0)}if(V&&!Ce)throw ce}}),z=!0,I||(or=1,gr=function(){var V=bn(65548),ce=V+12;Te()[V>>>2>>>0]=ce,Te()[V+4>>>2>>>0]=ce+65536,ce=Yr[0];var Ce=Zt[ce];return Ce===void 0&&(Ce=Kr++,Zt[ce]=Ce,wr[Ce]=ce),ce=Ce,oe()[V+8>>>2>>>0]=ce,V}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),yr(()=>Fi(gr)))}else or===2?(or=0,yr(Oi),ts(gr),gr=null,gs.forEach(ae)):Se(`invalid state: ${or}`);return Lr}}(E=>{h().then(E)})}function cs(h){return h>>>=0,kr(async()=>{var E=await hr(h);return fr(E)})}var ur=[];function ar(h,E,I,z){return I>>>=0,z>>>=0,(h=ur[h>>>0])(null,E=hr(E>>>0),I,z)}var mr={},ir=h=>{var E=mr[h];return E===void 0?Sr(h):E};function Hr(h,E,I,z,V){return I>>>=0,z>>>=0,V>>>=0,(h=ur[h>>>0])(E=hr(E>>>0),E[I=ir(I)],z,V)}var Ns=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Vn(h){return(h>>>=0)==0?fr(Ns()):(h=ir(h),fr(Ns()[h]))}var Ys=h=>{var E=ur.length;return ur.push(h),E},so=(h,E)=>{for(var I=Array(h),z=0;z<h;++z)I[z]=Lt(Te()[E+4*z>>>2>>>0],"parameter "+z);return I},di=(h,E)=>Object.defineProperty(E,"name",{value:h});function no(h,E,I){var z=(E=so(h,E>>>0)).shift();h--;var V=`return function (obj, func, destructorsRef, args) {
`,ce=0,Ce=[];I===0&&Ce.push("obj");for(var Oe=["retType"],Ke=[z],ot=0;ot<h;++ot)Ce.push("arg"+ot),Oe.push("argType"+ot),Ke.push(E[ot]),V+=`  var arg${ot} = argType${ot}.readValueFromPointer(args${ce?"+"+ce:""});
`,ce+=E[ot].Cb;return V+=`  var rv = ${I===1?"new func":"func.call"}(${Ce.join(", ")});
`,z.Tb||(Oe.push("emval_returnValue"),Ke.push(nr),V+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Oe.push(V+`};
`),h=function(Tt){var Ot=Function;if(!(Ot instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Ot} which is not a function`);var Kt=di(Ot.name||"unknownFunctionName",function(){});return Kt.prototype=Ot.prototype,Kt=new Kt,(Tt=Ot.apply(Kt,Tt))instanceof Object?Tt:Kt}(Oe)(...Ke),I=`methodCaller<(${E.map(Tt=>Tt.name).join(", ")}) => ${z.name}>`,Ys(di(I,h))}function io(h){return h=ir(h>>>0),fr(n[h])}function oo(h,E){return E>>>=0,h=hr(h>>>0),E=hr(E),fr(h[E])}function Js(h){9<(h>>>=0)&&(Or[h+1]+=1)}function ao(){return fr([])}function lo(h){h=hr(h>>>0);for(var E=Array(h.length),I=0;I<h.length;I++)E[I]=h[I];return fr(E)}function co(h){return fr(ir(h>>>0))}function uo(){return fr({})}function po(h){for(var E=hr(h>>>=0);E.length;){var I=E.pop();E.pop()(I)}ms(h)}function Zs(h,E,I){E>>>=0,I>>>=0,h=hr(h>>>0),E=hr(E),I=hr(I),h[E]=I}function ho(h,E){return E>>>=0,h=(h=Lt(h>>>0,"_emval_take_value")).readValueFromPointer(E),fr(h)}function mo(h,E){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),E>>>=0,h=new Date(1e3*h),oe()[E>>>2>>>0]=h.getUTCSeconds(),oe()[E+4>>>2>>>0]=h.getUTCMinutes(),oe()[E+8>>>2>>>0]=h.getUTCHours(),oe()[E+12>>>2>>>0]=h.getUTCDate(),oe()[E+16>>>2>>>0]=h.getUTCMonth(),oe()[E+20>>>2>>>0]=h.getUTCFullYear()-1900,oe()[E+24>>>2>>>0]=h.getUTCDay(),h=(h.getTime()-Date.UTC(h.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,oe()[E+28>>>2>>>0]=h}var pi=h=>h%4==0&&(h%100!=0||h%400==0),hi=[0,31,60,91,121,152,182,213,244,274,305,335],mi=[0,31,59,90,120,151,181,212,243,273,304,334];function fi(h,E){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),E>>>=0,h=new Date(1e3*h),oe()[E>>>2>>>0]=h.getSeconds(),oe()[E+4>>>2>>>0]=h.getMinutes(),oe()[E+8>>>2>>>0]=h.getHours(),oe()[E+12>>>2>>>0]=h.getDate(),oe()[E+16>>>2>>>0]=h.getMonth(),oe()[E+20>>>2>>>0]=h.getFullYear()-1900,oe()[E+24>>>2>>>0]=h.getDay();var I=(pi(h.getFullYear())?hi:mi)[h.getMonth()]+h.getDate()-1|0;oe()[E+28>>>2>>>0]=I,oe()[E+36>>>2>>>0]=-60*h.getTimezoneOffset(),I=new Date(h.getFullYear(),6,1).getTimezoneOffset();var z=new Date(h.getFullYear(),0,1).getTimezoneOffset();h=0|(I!=z&&h.getTimezoneOffset()==Math.min(z,I)),oe()[E+32>>>2>>>0]=h}function fo(h){h>>>=0;var E=new Date(oe()[h+20>>>2>>>0]+1900,oe()[h+16>>>2>>>0],oe()[h+12>>>2>>>0],oe()[h+8>>>2>>>0],oe()[h+4>>>2>>>0],oe()[h>>>2>>>0],0),I=oe()[h+32>>>2>>>0],z=E.getTimezoneOffset(),V=new Date(E.getFullYear(),6,1).getTimezoneOffset(),ce=new Date(E.getFullYear(),0,1).getTimezoneOffset(),Ce=Math.min(ce,V);return 0>I?oe()[h+32>>>2>>>0]=+(V!=ce&&Ce==z):0<I!=(Ce==z)&&(V=Math.max(ce,V),E.setTime(E.getTime()+6e4*((0<I?Ce:V)-z))),oe()[h+24>>>2>>>0]=E.getDay(),I=(pi(E.getFullYear())?hi:mi)[E.getMonth()]+E.getDate()-1|0,oe()[h+28>>>2>>>0]=I,oe()[h>>>2>>>0]=E.getSeconds(),oe()[h+4>>>2>>>0]=E.getMinutes(),oe()[h+8>>>2>>>0]=E.getHours(),oe()[h+12>>>2>>>0]=E.getDate(),oe()[h+16>>>2>>>0]=E.getMonth(),oe()[h+20>>>2>>>0]=E.getYear(),h=E.getTime(),BigInt(isNaN(h)?-1:h/1e3)}function _i(h,E,I,z,V,ce,Ce){return c?De(16,1,h,E,I,z,V,ce,Ce):-52}function Un(h,E,I,z,V,ce){if(c)return De(17,1,h,E,I,z,V,ce)}var en={},gi=()=>performance.timeOrigin+performance.now();function wi(h,E){if(c)return De(18,1,h,E);if(en[h]&&(clearTimeout(en[h].id),delete en[h]),!E)return 0;var I=setTimeout(()=>{delete en[h],ae(()=>Ai(h,performance.timeOrigin+performance.now()))},E);return en[h]={id:I,qc:E},0}function bi(h,E,I,z){h>>>=0,E>>>=0,I>>>=0,z>>>=0;var V=new Date().getFullYear(),ce=new Date(V,0,1).getTimezoneOffset();V=new Date(V,6,1).getTimezoneOffset();var Ce=Math.max(ce,V);Te()[h>>>2>>>0]=60*Ce,oe()[E>>>2>>>0]=+(ce!=V),h=(E=Oe=>{var Ke=Math.abs(Oe);return`UTC${0<=Oe?"-":"+"}${String(Math.floor(Ke/60)).padStart(2,"0")}${String(Ke%60).padStart(2,"0")}`})(ce),E=E(V),V<ce?(q(h,I,17),q(E,z,17)):(q(h,z,17),q(E,I,17))}var xa=()=>Date.now();function _o(h,E,I){return 0<=h&&3>=h?(h===0?h=Date.now():h=performance.timeOrigin+performance.now(),ee[I>>>0>>>3]=BigInt(Math.round(1e6*h)),0):28}var mn=[],Wn=(h,E)=>{mn.length=0;for(var I;I=U()[h++>>>0];){var z=I!=105;E+=(z&=I!=112)&&E%8?4:0,mn.push(I==112?Te()[E>>>2>>>0]:I==106?ee[E>>>3]:I==105?oe()[E>>>2>>>0]:He()[E>>>3>>>0]),E+=z?8:4}return mn};function Gn(h,E,I){return h>>>=0,E=Wn(E>>>0,I>>>0),Ie[h](...E)}function go(h,E,I){return h>>>=0,E=Wn(E>>>0,I>>>0),Ie[h](...E)}var wo=()=>{};function bo(h,E){return v(Xt(h>>>0,E>>>0))}var Mo=()=>{throw Ye+=1,"unwind"};function yo(){return 4294901760}var vo=()=>navigator.hardwareConcurrency;function xo(){return Se("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function To(h){h>>>=0;var E=U().length;if(h<=E||4294901760<h)return!1;for(var I=1;4>=I;I*=2){var z=E*(1+.2/I);z=Math.min(z,h+100663296);e:{z=(Math.min(4294901760,65536*Math.ceil(Math.max(h,z)/65536))-T.buffer.byteLength+65535)/65536|0;try{T.grow(z),le();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1}var tn=()=>(Se("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),rn={},fn=h=>{h.forEach(E=>{tn()})};function Mi(){var h=Error().stack.toString().split(`
`);return h[0]=="Error"&&h.shift(),fn(h),rn.Lb=tn(),rn.cc=h,rn.Lb}function Eo(h,E,I){if(h>>>=0,E>>>=0,rn.Lb==h)var z=rn.cc;else(z=Error().stack.toString().split(`
`))[0]=="Error"&&z.shift(),fn(z);for(var V=3;z[V]&&tn()!=h;)++V;for(h=0;h<I&&z[h+V];++h)oe()[E+4*h>>>2>>>0]=tn();return h}var _n,ws={},yi=()=>{if(!_n){var h,E={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(h in ws)ws[h]===void 0?delete E[h]:E[h]=ws[h];var I=[];for(h in E)I.push(`${h}=${E[h]}`);_n=I}return _n};function Po(h,E){if(c)return De(19,1,h,E);h>>>=0,E>>>=0;var I=0;return yi().forEach((z,V)=>{var ce=E+I;for(V=Te()[h+4*V>>>2>>>0]=ce,ce=0;ce<z.length;++ce)F()[V++>>>0]=z.charCodeAt(ce);F()[V>>>0]=0,I+=z.length+1}),0}function vi(h,E){if(c)return De(20,1,h,E);h>>>=0,E>>>=0;var I=yi();Te()[h>>>2>>>0]=I.length;var z=0;return I.forEach(V=>z+=V.length+1),Te()[E>>>2>>>0]=z,0}function Co(h){return c?De(21,1,h):52}function xi(h,E,I,z){return c?De(22,1,h,E,I,z):52}function Kn(h,E,I,z){return c?De(23,1,h,E,I,z):70}var $o=[null,[],[]];function Ti(h,E,I,z){if(c)return De(24,1,h,E,I,z);E>>>=0,I>>>=0,z>>>=0;for(var V=0,ce=0;ce<I;ce++){var Ce=Te()[E>>>2>>>0],Oe=Te()[E+4>>>2>>>0];E+=8;for(var Ke=0;Ke<Oe;Ke++){var ot=U()[Ce+Ke>>>0],Tt=$o[h];ot===0||ot===10?((h===1?y:v)($t(Tt)),Tt.length=0):Tt.push(ot)}V+=Oe}return Te()[z>>>2>>>0]=V,0}c||function(){for(var h=n.numThreads-1;h--;)Cr();Ge.unshift(()=>{ke++,function(E){c?E():Promise.all(St.map(Qt)).then(E)}(()=>be())})}();for(var Ei=Array(256),gn=0;256>gn;++gn)Ei[gn]=String.fromCharCode(gn);Qr=Ei,sr=n.BindingError=class extends Error{constructor(h){super(h),this.name="BindingError"}},n.InternalError=class extends Error{constructor(h){super(h),this.name="InternalError"}},Or.push(0,1,void 0,1,null,1,!0,1,!1,1),n.count_emval_handles=()=>Or.length/2-5-es.length;var dt,Hn=[Je,it,ht,S,Q,re,ge,Fe,rt,gt,mt,xt,st,Bt,Vt,Nr,_i,Un,wi,Po,vi,Co,xi,Kn,Ti];(async function(){function h(z,V){return dt=z.exports,dt=function(){var ce=dt,Ce={};for(let[Oe,Ke]of Object.entries(ce))Ce[Oe]=typeof Ke=="function"?(...ot)=>{Yr.push(Oe);try{return Ke(...ot)}finally{ue||(Yr.pop(),gr&&or===1&&Yr.length===0&&(or=0,Ye+=1,yr(Jn),typeof Fibers<"u"&&Fibers.rc()))}}:Ke;return Ce}(),dt=function(){var ce=dt,Ce=Ke=>ot=>Ke(ot)>>>0,Oe=Ke=>()=>Ke()>>>0;return(ce=Object.assign({},ce)).Da=Ce(ce.Da),ce.fb=Oe(ce.fb),ce.hb=Ce(ce.hb),ce.tb=Ce(ce.tb),ce.ub=Oe(ce.ub),ce.__cxa_get_exception_ptr=Ce(ce.__cxa_get_exception_ptr),ce}(),Mr.push(dt.ib),x=V,be(),dt}ke++;var E=we();if(n.instantiateWasm)return new Promise(z=>{n.instantiateWasm(E,(V,ce)=>{h(V,ce),z(V.exports)})});if(c)return new Promise(z=>{Me=V=>{var ce=new WebAssembly.Instance(V,we());z(h(ce,V))}});ye??(ye=n.locateFile?n.locateFile?n.locateFile("ort-wasm-simd-threaded.jsep.wasm",g):g+"ort-wasm-simd-threaded.jsep.wasm":new URL("/magic-eye-anything/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href);try{var I=await async function(z){var V=ye;if(!me&&typeof WebAssembly.instantiateStreaming=="function"&&!j(V))try{var ce=fetch(V,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(ce,z)}catch(Ce){v(`wasm streaming compile failed: ${Ce}`),v("falling back to ArrayBuffer instantiation")}return async function(Ce,Oe){try{var Ke=await async function(ot){if(!me)try{var Tt=await _(ot);return new Uint8Array(Tt)}catch{}if(ot==ye&&me)ot=new Uint8Array(me);else{if(!f)throw"both async and sync fetching of the wasm failed";ot=f(ot)}return ot}(Ce);return await WebAssembly.instantiate(Ke,Oe)}catch(ot){v(`failed to asynchronously prepare wasm: ${ot}`),Se(ot)}}(V,z)}(E);return h(I.instance,I.module)}catch(z){return i(z),Promise.reject(z)}})();var Pi=h=>(Pi=dt.Da)(h),Ci=()=>(Ci=dt.Ea)();n._OrtInit=(h,E)=>(n._OrtInit=dt.Fa)(h,E),n._OrtGetLastError=(h,E)=>(n._OrtGetLastError=dt.Ga)(h,E),n._OrtCreateSessionOptions=(h,E,I,z,V,ce,Ce,Oe,Ke,ot)=>(n._OrtCreateSessionOptions=dt.Ha)(h,E,I,z,V,ce,Ce,Oe,Ke,ot),n._OrtAppendExecutionProvider=(h,E,I,z,V)=>(n._OrtAppendExecutionProvider=dt.Ia)(h,E,I,z,V),n._OrtAddFreeDimensionOverride=(h,E,I)=>(n._OrtAddFreeDimensionOverride=dt.Ja)(h,E,I),n._OrtAddSessionConfigEntry=(h,E,I)=>(n._OrtAddSessionConfigEntry=dt.Ka)(h,E,I),n._OrtReleaseSessionOptions=h=>(n._OrtReleaseSessionOptions=dt.La)(h),n._OrtCreateSession=(h,E,I)=>(n._OrtCreateSession=dt.Ma)(h,E,I),n._OrtReleaseSession=h=>(n._OrtReleaseSession=dt.Na)(h),n._OrtGetInputOutputCount=(h,E,I)=>(n._OrtGetInputOutputCount=dt.Oa)(h,E,I),n._OrtGetInputOutputMetadata=(h,E,I,z)=>(n._OrtGetInputOutputMetadata=dt.Pa)(h,E,I,z),n._OrtFree=h=>(n._OrtFree=dt.Qa)(h),n._OrtCreateTensor=(h,E,I,z,V,ce)=>(n._OrtCreateTensor=dt.Ra)(h,E,I,z,V,ce),n._OrtGetTensorData=(h,E,I,z,V)=>(n._OrtGetTensorData=dt.Sa)(h,E,I,z,V),n._OrtReleaseTensor=h=>(n._OrtReleaseTensor=dt.Ta)(h),n._OrtCreateRunOptions=(h,E,I,z)=>(n._OrtCreateRunOptions=dt.Ua)(h,E,I,z),n._OrtAddRunConfigEntry=(h,E,I)=>(n._OrtAddRunConfigEntry=dt.Va)(h,E,I),n._OrtReleaseRunOptions=h=>(n._OrtReleaseRunOptions=dt.Wa)(h),n._OrtCreateBinding=h=>(n._OrtCreateBinding=dt.Xa)(h),n._OrtBindInput=(h,E,I)=>(n._OrtBindInput=dt.Ya)(h,E,I),n._OrtBindOutput=(h,E,I,z)=>(n._OrtBindOutput=dt.Za)(h,E,I,z),n._OrtClearBoundOutputs=h=>(n._OrtClearBoundOutputs=dt._a)(h),n._OrtReleaseBinding=h=>(n._OrtReleaseBinding=dt.$a)(h),n._OrtRunWithBinding=(h,E,I,z,V)=>(n._OrtRunWithBinding=dt.ab)(h,E,I,z,V),n._OrtRun=(h,E,I,z,V,ce,Ce,Oe)=>(n._OrtRun=dt.bb)(h,E,I,z,V,ce,Ce,Oe),n._OrtEndProfiling=h=>(n._OrtEndProfiling=dt.cb)(h),n._JsepOutput=(h,E,I)=>(n._JsepOutput=dt.db)(h,E,I),n._JsepGetNodeName=h=>(n._JsepGetNodeName=dt.eb)(h);var wn=()=>(wn=dt.fb)(),ts=n._free=h=>(ts=n._free=dt.gb)(h),bn=n._malloc=h=>(bn=n._malloc=dt.hb)(h),qn=(h,E,I,z,V,ce)=>(qn=dt.kb)(h,E,I,z,V,ce),Qn=()=>(Qn=dt.lb)(),$i=(h,E,I,z,V)=>($i=dt.mb)(h,E,I,z,V),Si=h=>(Si=dt.nb)(h),Mn=h=>(Mn=dt.ob)(h),Ai=(h,E)=>(Ai=dt.pb)(h,E),ki=()=>(ki=dt.qb)(),Xn=(h,E)=>(Xn=dt.rb)(h,E),yn=h=>(yn=dt.sb)(h),Yn=h=>(Yn=dt.tb)(h),vn=()=>(vn=dt.ub)(),Ii=n.dynCall_ii=(h,E)=>(Ii=n.dynCall_ii=dt.vb)(h,E),Fi=h=>(Fi=dt.wb)(h),Jn=()=>(Jn=dt.xb)(),Di=h=>(Di=dt.yb)(h),Oi=()=>(Oi=dt.zb)();return n.stackSave=()=>vn(),n.stackRestore=h=>yn(h),n.stackAlloc=h=>Yn(h),n.setValue=function(h,E,I="i8"){switch(I.endsWith("*")&&(I="*"),I){case"i1":case"i8":F()[h>>>0]=E;break;case"i16":se()[h>>>1>>>0]=E;break;case"i32":oe()[h>>>2>>>0]=E;break;case"i64":ee[h>>>3]=BigInt(E);break;case"float":Re()[h>>>2>>>0]=E;break;case"double":He()[h>>>3>>>0]=E;break;case"*":Te()[h>>>2>>>0]=E;break;default:Se(`invalid type for setValue: ${I}`)}},n.getValue=function(h,E="i8"){switch(E.endsWith("*")&&(E="*"),E){case"i1":case"i8":return F()[h>>>0];case"i16":return se()[h>>>1>>>0];case"i32":return oe()[h>>>2>>>0];case"i64":return ee[h>>>3];case"float":return Re()[h>>>2>>>0];case"double":return He()[h>>>3>>>0];case"*":return Te()[h>>>2>>>0];default:Se(`invalid type for getValue: ${E}`)}},n.UTF8ToString=Xt,n.stringToUTF8=q,n.lengthBytesUTF8=B,function h(){if(0<ke)Pe=h;else if(c)s(n),W();else{for(;0<Ge.length;)Ge.shift()(n);0<ke?Pe=h:(n.calledRun=!0,ue||(W(),s(n)))}}(),n.PTR_SIZE=4,o}),lM=Xl,n_=(r=(e=globalThis.self)==null?void 0:e.name)==null?void 0:r.startsWith("em-pthread"),n_&&Xl()}),Yl,Kc,i_,ns,cM,Jo,o_,a_,Jl,l_,Zl,uM,ec,dM,fu=Ve(()=>{mu(),Yl=typeof location>"u"?void 0:location.origin,Kc=import.meta.url>"file:"&&import.meta.url<"file;",i_=()=>{{if(Kc){let e=URL;return new URL(new e("ort.bundle.min.mjs",import.meta.url).href,Yl).href}return import.meta.url}},ns=i_(),cM=()=>{if(ns&&!ns.startsWith("blob:"))return ns.substring(0,ns.lastIndexOf("/")+1)},Jo=(e,r)=>{try{let t=r??ns;return(t?new URL(e,t):new URL(e)).origin===Yl}catch{return!1}},o_=(e,r)=>{let t=r??ns;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},a_=(e,r)=>`${r??"./"}${e}`,Jl=async e=>{let r=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},l_=async e=>(await import(e)).default,Zl=($x(),Zi(iM)).default,uM=async()=>{if(!ns)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Jo(ns))return[void 0,Zl()];let e=await Jl(ns);return[e,Zl(e)]},ec=(Sx(),Zi(aM)).default,dM=async(e,r,t)=>{if(!e&&!r&&ec&&ns&&Jo(ns))return[void 0,ec];{let s="ort-wasm-simd-threaded.jsep.mjs",i=e??o_(s,r),n=t&&i&&!Jo(i,r),o=n?await Jl(i):i??a_(s,r);return[n?o:void 0,await l_(o)]}}}),tc,Zo,Ri,rc,c_,u_,d_,_u,Jt,jn=Ve(()=>{fu(),Zo=!1,Ri=!1,rc=!1,c_=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},u_=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},d_=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},_u=async e=>{if(Zo)return Promise.resolve();if(Ri)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(rc)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ri=!0;let r=e.initTimeout,t=e.numThreads;if(e.simd!==!1){if(e.simd==="relaxed"){if(!d_())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!u_())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let s=c_();t>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let i=e.wasmPaths,n=typeof i=="string"?i:void 0,o=i==null?void 0:i.mjs,a=(o==null?void 0:o.href)??o,l=i==null?void 0:i.wasm,c=(l==null?void 0:l.href)??l,p=e.wasmBinary,[d,u]=await dM(a,n,t>1),_=!1,f=[];if(r>0&&f.push(new Promise(b=>{setTimeout(()=>{_=!0,b()},r)})),f.push(new Promise((b,A)=>{let g={numThreads:t};if(p)g.wasmBinary=p;else if(c||n)g.locateFile=w=>c??n+w;else if(a&&a.indexOf("blob:")!==0)g.locateFile=w=>new URL(w,a).href;else if(d){let w=cM();w&&(g.locateFile=$=>w+$)}u(g).then(w=>{Ri=!1,Zo=!0,tc=w,b(),d&&URL.revokeObjectURL(d)},w=>{Ri=!1,rc=!0,A(w)})})),await Promise.race(f),_)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Jt=()=>{if(Zo&&tc)return tc;throw new Error("WebAssembly is not initialized yet.")}}),Es,_a,qt,gu=Ve(()=>{jn(),Es=(e,r)=>{let t=Jt(),s=t.lengthBytesUTF8(e)+1,i=t._malloc(s);return t.stringToUTF8(e,i,s),r.push(i),i},_a=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([i,n])=>{let o=r?r+i:i;if(typeof n=="object")_a(n,o+".",t,s);else if(typeof n=="string"||typeof n=="number")s(o,n.toString());else if(typeof n=="boolean")s(o,n?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof n}`)})},qt=e=>{let r=Jt(),t=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);r._OrtGetLastError(i,i+s);let n=Number(r.getValue(i,s===4?"i32":"i64")),o=r.getValue(i+s,"*"),a=o?r.UTF8ToString(o):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${a}`)}finally{r.stackRestore(t)}}}),pM,Ax=Ve(()=>{jn(),gu(),pM=e=>{let r=Jt(),t=0,s=[],i=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(i.terminate=!1);let n=0;return(e==null?void 0:e.tag)!==void 0&&(n=Es(e.tag,s)),t=r._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,n),t===0&&qt("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&_a(e.extra,"",new WeakSet,(o,a)=>{let l=Es(o,s),c=Es(a,s);r._OrtAddRunConfigEntry(t,l,c)!==0&&qt(`Can't set a run config entry: ${o} - ${a}.`)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(o=>r._free(o)),n}}}),p_,h_,m_,ji,f_,hM,kx=Ve(()=>{jn(),gu(),p_=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},h_=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},m_=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},ji=(e,r,t,s)=>{let i=Es(r,s),n=Es(t,s);Jt()._OrtAddSessionConfigEntry(e,i,n)!==0&&qt(`Can't set a session config entry: ${r} - ${t}.`)},f_=async(e,r,t)=>{for(let s of r){let i=typeof s=="string"?s:s.name,n=[];switch(i){case"webnn":if(i="WEBNN",typeof s!="string"){let p=s==null?void 0:s.deviceType;p&&ji(e,"deviceType",p,t)}break;case"webgpu":if(i="JS",typeof s!="string"){let p=s;if(p!=null&&p.preferredLayout){if(p.preferredLayout!=="NCHW"&&p.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${p.preferredLayout}`);ji(e,"preferredLayout",p.preferredLayout,t)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let o=Es(i,t),a=n.length,l=0,c=0;if(a>0){l=Jt()._malloc(a*Jt().PTR_SIZE),t.push(l),c=Jt()._malloc(a*Jt().PTR_SIZE),t.push(c);for(let p=0;p<a;p++)Jt().setValue(l+p*Jt().PTR_SIZE,n[p][0],"*"),Jt().setValue(c+p*Jt().PTR_SIZE,n[p][1],"*")}await Jt()._OrtAppendExecutionProvider(e,o,l,c,a)!==0&&qt(`Can't append execution provider: ${i}.`)}},hM=async e=>{let r=Jt(),t=0,s=[],i=e||{};m_(i);try{let n=p_(i.graphOptimizationLevel??"all"),o=h_(i.executionMode??"sequential"),a=typeof i.logId=="string"?Es(i.logId,s):0,l=i.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let c=i.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let p=typeof i.optimizedModelFilePath=="string"?Es(i.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(n,!!i.enableCpuMemArena,!!i.enableMemPattern,o,!!i.enableProfiling,0,a,l,c,p),t===0&&qt("Can't create session options."),i.executionProviders&&await f_(t,i.executionProviders,s),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);ji(t,"enableGraphCapture",i.enableGraphCapture.toString(),s)}if(i.freeDimensionOverrides)for(let[d,u]of Object.entries(i.freeDimensionOverrides)){if(typeof d!="string")throw new Error(`free dimension override name must be a string: ${d}`);if(typeof u!="number"||!Number.isInteger(u)||u<0)throw new Error(`free dimension override value must be a non-negative integer: ${u}`);let _=Es(d,s);r._OrtAddFreeDimensionOverride(t,_,u)!==0&&qt(`Can't set a free dimension override: ${d} - ${u}.`)}return i.extra!==void 0&&_a(i.extra,"",new WeakSet,(d,u)=>{ji(t,d,u,s)}),[t,s]}catch(n){throw t!==0&&r._OrtReleaseSessionOptions(t)!==0&&qt("Can't release session options."),s.forEach(o=>r._free(o)),n}}}),ii,Gs,Dn,wu,ga,bu,Mu,Hc,wt=Ve(()=>{ii=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Gs=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Dn=(e,r)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof r=="number"?r:r.reduce((i,n)=>i*n,1);return t>0?Math.ceil(s*t):void 0},wu=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},ga=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},bu=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Mu=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Hc=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),yu,mM=Ve(()=>{mu(),yu=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=r.body.getReader(),n;try{n=new ArrayBuffer(s)}catch(a){if(a instanceof RangeError){let l=Math.ceil(s/65536);n=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw a}let o=0;for(;;){let{done:a,value:l}=await i.read();if(a)break;let c=l.byteLength;new Uint8Array(n,o,c).set(l),o+=c}return new Uint8Array(n,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),__,g_,w_,b_,vu,M_,zt,Ks=Ve(()=>{wt(),__=["V","I","W","E","F"],g_=(e,r)=>{console.log(`[${__[e]},${new Date().toISOString()}]${r}`)},vu=(e,r)=>{w_=e,b_=r},M_=(e,r)=>{let t=ga(e),s=ga(w_);t>=s&&g_(t,typeof r=="function"?r():r)},zt=(...e)=>{b_&&M_(...e)}}),y_,li,ve,wa,fM,_M,gM,Pt=Ve(()=>{y_=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},li=class{static calcShape(e,r,t=!1){let s=e.length,i=r.length;if(s===0)return r;if(i===0)return e;let n=Math.max(e.length,r.length),o=new Array(n);if(t){if(s<2||i<2)return;let a=y_.calcMatMulShape([e[s-2],e[s-1]],[r[i-2],r[i-1]]);if(a===void 0)return;[o[n-2],o[n-1]]=a}for(let a=t?3:1;a<=n;a++){let l=s-a<0?1:e[s-a],c=i-a<0?1:r[i-a];if(l!==c&&l>1&&c>1)return;let p=Math.max(l,c);if(l&&c)o[n-a]=Math.max(l,c);else{if(p>1)return;o[n-a]=0}}return o}static isValidBroadcast(e,r){let t=e.length,s=r.length;if(t>s)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==r[s-i])return!1;return!0}},ve=class ha{static size(r){return ha.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let i=new Array(s),n=s-1;for(;n>=0;){if(r[n]%t===0){i[n]=r[n]/t;break}if(t%r[n]!==0)throw new Error("cannot convert shape");i[n]=1,t/=r[n],n--}for(n--;n>=0;n--)i[n]=r[n];return i}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return ha.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return ha.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let i=1;for(let n=t;n<s;n++){if(r[n]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=Number(r[n])}return i}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let i=t-3;i>=0;--i)s[i]=s[i+1]*r[i+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((i,n)=>i+t[n]+t[n+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,i)=>s===t[i])}},wa=class Qi{static adjustPoolAttributes(r,t,s,i,n,o){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let a=0;a<t.length-2;a++)a>=s.length?s.push(t[a+2]):s[a]=t[a+2];for(let a=0;a<s.length;a++)if(a<i.length){if(i[a]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let a=0;a<s.length;a++)if(a<n.length){if(n[a]<0)throw new Error("dilations should be greater than or equal to 1")}else n.push(1);for(let a=0;a<s.length*2;a++)if(a<o.length){if(o[a]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let a=0;a<s.length;a++){if(s[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[a]>=s[a]||o[a+s.length]>=s[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,i,n,o,a){if(a){if(n.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<r.length-2;l++)Qi.adjustPadAndReturnShape(r[l+(o?1:2)],t[l],s[l],i[l],n,l,l+r.length-2,a)}}static computePoolOutputShape(r,t,s,i,n,o,a){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return Qi.computeShapeHelper(r,t,l,s,i,n,o,a),l}static computeConvOutputShape(r,t,s,i,n,o,a){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[r[0],t[0]];return Qi.computeShapeHelper(!1,r,l,s,i,n,o,a),l}static computeShapeHelper(r,t,s,i,n,o,a,l){if(r)for(let c=0;c<t.length-2;c++)s.push(1);else for(let c=0;c<t.length-2;c++)s.push(Qi.adjustPadAndReturnShape(t[c+2],i[c],n[c],o[c],a,c,c+t.length-2,l))}static adjustPadAndReturnShape(r,t,s,i,n,o,a,l){let c=s*(i-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return n[o]=0,n[a]=0,Math.floor((r-c)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((r+t-1)/t-1)*t+i-r;return n[o]=Math.floor(l==="SAME_LOWER"?(p+1)/2:p/2),n[a]=p-n[o],Math.floor((r+p-i)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+n[o]+n[a]-c)/t+1)}},fM=class{static getShapeOfGemmResult(e,r,t,s,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let n,o,a;r?(n=e[1],o=e[0]):(n=e[0],o=e[1]);let l=-1;if(s?(a=t[0],l=1):(a=t[1],l=0),t[l]!==o)throw new Error("dimension mismatch");if(n<=0||a<=0||o<=0)throw new Error("invalid shape specified");if(i&&!li.isValidBroadcast(i,[n,a]))throw new Error("gemm: invalid bias shape for broadcast");return[n,a,o]}},_M=-34028234663852886e22,gM=34028234663852886e22}),xu,wM=Ve(()=>{wt(),xu=(e,r)=>new(wu(r))(e)}),qc,sc,v_,nc,x_,ic,oc,ac,T_,bM,Ix=Ve(()=>{Ks(),qc=(e,r=!0)=>{if(e.byteLength%8!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let t=e.byteLength/8,s=new BigInt64Array(e.buffer,e.byteOffset,t),i=new Int32Array(t);for(let n=0;n<t;n++){let o=s[n];if(o>2147483647n||o<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${n}: ${o}`);i[n]=Number(o)}return r?new Uint8Array(i.buffer):i},sc=(e,r=!0)=>{if(e.byteLength%4!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let t=e.byteLength/4,s=new Int32Array(e.buffer,e.byteOffset,t),i=BigInt64Array.from(s,BigInt);return r?new Uint8Array(i.buffer):i},v_=1,nc=()=>v_++,x_=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),ic=(e,r)=>{let t=x_.get(e);if(!t)throw new Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((s,i)=>s*i)*t/8):0},oc=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:r,context:t,tensor:s,dataType:i,shape:n,shouldConvertInt64toInt32:o=!1}=e;this.sessionId=r,this.mlContext=t,this.mlTensor=s,this.dataType=i,this.tensorShape=n,this.shouldConvertInt64toInt32=o}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return ic(this.dataType,this.tensorShape)}destroy(){zt("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,r){if(e){let t=await this.mlContext.readTensor(this.mlTensor),s=sc(new Uint8Array(t));if(r){(r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength)).set(s);return}else return s.buffer}else return r?this.mlContext.readTensor(this.mlTensor,r):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,r,t){return this.mlContext===e&&this.dataType===r&&this.tensorShape.length===t.length&&this.tensorShape.every((s,i)=>s===t[i])}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},ac=class{constructor(e,r){this.tensorManager=e,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,r,t,s){let i=r,n=this.tensorManager.getMLContext(e),o=i==="int64"&&!n.opSupportLimits().input.dataTypes.includes("int64");if(o&&(i="int32",zt("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(n,i,t))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==ic(i,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let a=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,i,t,a,!0,!0,o),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let r=e;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(r=qc(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),r.byteLength===this.wrapper.byteLength){this.wrapper.write(r);return}else zt("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(r):this.activeUpload=new Uint8Array(r)}async download(e){var r,t,s;if(this.activeUpload){let i=(r=this.wrapper)!=null&&r.isInt64ToInt32Converted?sc(this.activeUpload):this.activeUpload;if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(i):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(i);return}else return i.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read((t=this.wrapper)==null?void 0:t.shouldConvertInt64toInt32,e):this.wrapper.read((s=this.wrapper)==null?void 0:s.shouldConvertInt64toInt32)}},T_=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let r=this.backend.getMLContext(e);if(!r)throw new Error("MLContext not found for session.");return r}reserveTensorId(){let e=nc();return this.tensorTrackersById.set(e,new ac(this)),e}releaseTensorId(e){let r=this.tensorTrackersById.get(e);r&&(this.tensorTrackersById.delete(e),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(e,r,t,s,i){zt("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${t}, shape: ${s}, copyOld: ${i}}`);let n=this.tensorTrackersById.get(r);if(!n)throw new Error("Tensor not found.");return n.ensureTensor(e,t,s,i)}upload(e,r){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(r)}async download(e,r){zt("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r==null?void 0:r.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(r)}releaseTensorsForSession(e){for(let r of this.freeTensors)r.sessionId===e&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==e)}registerTensor(e,r,t,s){let i=this.getMLContext(e),n=nc(),o=new oc({sessionId:e,context:i,tensor:r,dataType:t,shape:s});return this.tensorTrackersById.set(n,new ac(this,o)),this.externalTensors.add(o),n}async getCachedTensor(e,r,t,s,i,n,o=!1){let a=this.getMLContext(e);for(let[c,p]of this.freeTensors.entries())if(p.canReuseTensor(a,r,t)){zt("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${t}}`);let d=this.freeTensors.splice(c,1)[0];return d.sessionId=e,d}zt("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${t}}`);let l=await a.createTensor({dataType:r,shape:t,dimensions:t,usage:s,writable:i,readable:n});return new oc({sessionId:e,context:a,tensor:l,dataType:r,shape:t,shouldConvertInt64toInt32:o})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},bM=(...e)=>new T_(...e)}),ea,E_,MM,Fx=Ve(()=>{wt(),jn(),wM(),Ix(),Ks(),ea=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),E_=(e,r)=>{if(e===r)return!0;if(e===void 0||r===void 0)return!1;let t=Object.keys(e).sort(),s=Object.keys(r).sort();return t.length===s.length&&t.every((i,n)=>i===s[n]&&e[i]===r[i])},MM=class{constructor(e){this.tensorManager=bM(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,vu(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){zt("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){zt("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let r=this.temporarySessionTensorIds.get(e);if(r){for(let t of r)zt("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}else if(e===void 0){let t=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let r=this.mlContextCache.findIndex(t=>E_(t.options,e));if(r!==-1)return this.mlContextCache[r].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let t=this.sessionIdsByMLContext.get(r);t||(t=new Set,this.sessionIdsByMLContext.set(r,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let r=this.mlContextBySessionId.get(e);if(!r)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(r);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(r);let s=this.mlContextCache.findIndex(i=>i.mlContext===r);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){zt("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,t,s,i){let n=ea.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,r,n,s,i)}async createTemporaryTensor(e,r,t){zt("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${t}}`);let s=ea.get(r);if(!s)throw new Error(`Unsupported ONNX data type: ${r}`);let i=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,i,s,t,!1);let n=this.temporarySessionTensorIds.get(e);return n?n.push(i):this.temporarySessionTensorIds.set(e,[i]),i}uploadTensor(e,r){if(!Jt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");zt("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let t=await this.tensorManager.download(e);return xu(t,r)}}registerMLTensor(e,r,t,s){let i=ea.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);let n=this.tensorManager.registerTensor(e,r,i,s);return zt("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${i}, dimensions: ${s}} -> {tensorId: ${n}}`),n}registerMLConstant(e,r,t,s,i,n,o=!1){if(!n)throw new Error("External mounted files are not available.");let a=e;e.startsWith("./")&&(a=e.substring(2));let l=n.get(a);if(!l)throw new Error(`File with name ${a} not found in preloaded files.`);if(r+t>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let c=l.slice(r,r+t).buffer,p;switch(i.dataType){case"float32":p=new Float32Array(c);break;case"float16":p=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(c):new Uint16Array(c);break;case"int32":p=new Int32Array(c);break;case"uint32":p=new Uint32Array(c);break;case"int64":o?(p=qc(new Uint8Array(c),!1),i.dataType="int32"):p=new BigInt64Array(c);break;case"uint64":p=new BigUint64Array(c);break;case"int8":p=new Int8Array(c);break;case"int4":case"uint4":case"uint8":p=new Uint8Array(c);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return zt("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}} ${o?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),s.constant(i,p)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,r){let t=this.sessionGraphInputs.get(e);return t?t.includes(r):!1}isInt64Supported(e){var r;return!!((r=this.mlContextBySessionId.get(e))!=null&&r.opSupportLimits().input.dataTypes.includes("int64"))}flush(){}}}),Tu=Ve(()=>{}),lc,ta,ra,P_,C_,cc,Qc,$_,yM,Dx=Ve(()=>{Ks(),Tu(),lc=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),ta=[],ra=e=>Math.ceil(Number(e)/16)*16,P_=e=>{for(let r=0;r<ta.length;r++){let t=ta[r];if(e<=t)return t}return Math.ceil(e/16)*16},C_=1,cc=()=>C_++,Qc=async(e,r,t,s)=>{let i=ra(t),n=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(r,0,n,0,i),e.flush(),await n.mapAsync(GPUMapMode.READ);let a=n.getMappedRange();if(s){let l=s();return l.set(new Uint8Array(a,0,t)),l}else return new Uint8Array(a.slice(0,t))}finally{n.destroy()}},$_=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of lc)ta.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(e,r){let t=r.buffer,s=r.byteOffset,i=r.byteLength,n=ra(i),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(Number(o.originalSize)!==i)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${i}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=a.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,s,i)),a.unmap();let c=this.backend.device.createCommandEncoder();c.copyBufferToBuffer(a,0,o.gpuData.buffer,0,n),this.backend.device.queue.submit([c.finish()]),a.destroy(),zt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=ra(t.originalSize),n=this.backend.getCommandEncoder();this.backend.endComputePass(),n.copyBufferToBuffer(t.gpuData.buffer,0,s.gpuData.buffer,0,i)}registerExternalBuffer(e,r,t){let s;if(t){if(s=t[0],e===t[1])return zt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=cc();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:r}),zt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),zt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=P_(e),s,i=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,n=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||n){let a=(i?this.freeBuffers:this.freeUniformBuffers).get(t);a?a.length>0?s=a.pop():s=this.backend.device.createBuffer({size:t,usage:r}):s=this.backend.device.createBuffer({size:t,usage:r})}else s=this.backend.device.createBuffer({size:t,usage:r});let o={id:cc(),type:0,buffer:s};return this.storageCache.set(o.id,{gpuData:o,originalSize:Number(e)}),zt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){var r;return(r=this.storageCache.get(e))==null?void 0:r.gpuData}release(e){let r=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(r);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return zt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,r){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await Qc(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=lc.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(zt("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},yM=(...e)=>new $_(...e)}),S_,Wt,pr=Ve(()=>{S_=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Wt=e=>new S_(e)}),ci,sa,Dr,qr,ct,cr,Xc,ai,cn,lt,Ni,Ae,at,vM,Eu,A_,xM,Ct=Ve(()=>{wt(),Pt(),ci=64,sa=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},Dr=(e,r=1)=>{let t=sa(e,r);return typeof t=="string"?t:t[0]},qr=(e,r=1)=>{let t=sa(e,r);return typeof t=="string"?t:t[1]},ct=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:ve.computeStrides(t)})}),r},cr=e=>e%4===0?4:e%2===0?2:1,Xc=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,ai=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}<f32>(${t})`,cn=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,lt=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Ni=(e,r,t,s,i)=>{let n=typeof t=="number",o=n?t:t.length,a=[...new Array(o).keys()],l=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,c=sa(r,i),p=typeof c=="string"?c:c[1],d=typeof c=="string"?c:c[0],u={indices:l,value:p,storage:d,tensor:r},_=j=>typeof j=="string"?j:`${j}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},b=n?"uniforms.":"",A=`${b}${e}_shape`,g=`${b}${e}_strides`,w="";for(let j=0;j<o-1;j++)w+=`
    let dim${j} = current / ${lt(g,j,o)};
    let rest${j} = current % ${lt(g,j,o)};
    indices[${j}] = dim${j};
    current = rest${j};
    `;w+=`indices[${o-1}] = current;`;let $=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${u.indices} {
    var indices: ${u.indices};
    var current = offset;
    ${w}
    return indices;
  }`,y=j=>(f.offsetToIndices=!0,o<2?j:`o2i_${e}(${j})`),v=[];if(o>=2)for(let j=o-1;j>=0;j--)v.push(`${lt(g,j,o)} * (indices[${j}])`);let T=o<2?"":`
  fn i2o_${e}(indices: ${u.indices}) -> u32 {
    return ${v.join("+")};
  }`,x=j=>(f.indicesToOffset=!0,o<2?j:`i2o_${e}(${j})`),P=(...j)=>o===0?"0u":`${u.indices}(${j.map(_).join(",")})`,D=(j,F)=>o<2?`${j}`:`${lt(j,F,o)}`,L=(j,F,U)=>o<2?`${j}=${U};`:`${lt(j,F,o)}=${U};`,G={},K=(j,F)=>{f.broadcastedIndicesToOffset=!0;let U=`${F.name}broadcastedIndicesTo${e}Offset`;if(U in G)return`${U}(${j})`;let se=[];for(let fe=o-1;fe>=0;fe--){let oe=F.indicesGet("outputIndices",fe+F.rank-o);se.push(`${D(g,fe)} * (${oe} % ${D(A,fe)})`)}return G[U]=`fn ${U}(outputIndices: ${F.type.indices}) -> u32 {
             return ${se.length>0?se.join("+"):"0u"};
           }`,`${U}(${j})`},R=(j,F)=>(()=>{if(u.storage===u.value)return`${e}[${j}]=${F};`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`${e}[${j}]=vec2<u32>(u32(${F}), select(0u, 0xFFFFFFFFu, ${F} < 0));`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`${e}[${j}]=vec2<u32>(u32(${F}), 0u);`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`${e}[${j}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${F}));`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),te=j=>(()=>{if(u.storage===u.value)return`${e}[${j}]`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`i32(${e}[${j}].x)`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`u32(${e}[${j}].x)`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${j}] & 0xFFu), bool(${e}[${j}] & 0xFF00u), bool(${e}[${j}] & 0xFF0000u), bool(${e}[${j}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),H=o<2?"":`
  fn get_${e}ByIndices(indices: ${u.indices}) -> ${p} {
    return ${te(`i2o_${e}(indices)`)};
  }`,ee=o<2?"":(()=>{let j=a.map(U=>`d${U}: u32`).join(", "),F=a.map(U=>`d${U}`).join(", ");return`
  fn get_${e}(${j}) -> ${p} {
    return get_${e}ByIndices(${P(F)});
  }`})(),Z=(...j)=>{if(j.length!==o)throw new Error(`indices length must be ${o}`);let F=j.map(_).join(",");return o===0?te("0u"):o===1?te(F[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${F})`)},ne=j=>o<2?te(j):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${j})`),me=o<2?"":`
  fn set_${e}ByIndices(indices: ${u.indices}, value: ${p}) {
    ${R(`i2o_${e}(indices)`,"value")}
  }`,ue=o<2?"":(()=>{let j=a.map(U=>`d${U}: u32`).join(", "),F=a.map(U=>`d${U}`).join(", ");return`
  fn set_${e}(${j}, value: ${p}) {
    set_${e}ByIndices(${P(F)}, value);
  }`})();return{impl:()=>{let j=[],F=!1;return f.offsetToIndices&&(j.push($),F=!0),f.indicesToOffset&&(j.push(T),F=!0),f.broadcastedIndicesToOffset&&(Object.values(G).forEach(U=>j.push(U)),F=!0),f.set&&(j.push(ue),F=!0),f.setByIndices&&(j.push(me),F=!0),f.get&&(j.push(ee),F=!0),f.getByIndices&&(j.push(H),F=!0),!n&&F&&j.unshift(`const ${A} = ${u.indices}(${t.join(",")});`,`const ${g} = ${u.indices}(${ve.computeStrides(t).join(",")});`),j.join(`
`)},type:u,offsetToIndices:y,indicesToOffset:x,broadcastedIndicesToOffset:K,indices:P,indicesGet:D,indicesSet:L,set:(...j)=>{if(j.length!==o+1)throw new Error(`indices length must be ${o}`);let F=j[o];if(typeof F!="string")throw new Error("value must be string");let U=j.slice(0,o).map(_).join(",");return o===0?R("0u",F):o===1?R(U[0],F):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${U}, ${F})`)},setByOffset:R,setByIndices:(j,F)=>o<2?R(j,F):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${j}, ${F});`),get:Z,getByOffset:te,getByIndices:ne,usage:s,name:e,strides:g,shape:A,rank:o}},Ae=(e,r,t,s=1)=>Ni(e,r,t,"input",s),at=(e,r,t,s=1)=>Ni(e,r,t,"output",s),vM=(e,r,t)=>Ni(e,r,t,"atomicOutput",1),Eu=(e,r,t,s=1)=>Ni(e,r,t,"internal",s),A_=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=ci){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*t*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,n=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*t*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${t}, ${s})
  fn main(${n}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,t=1){return this.uniforms.push({name:e,type:r,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t,length:s}of this.uniforms)if(s&&s>4)t==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${t}>, ${Math.ceil(s/8)}>`):e.push(`${r}:array<vec4<${t}>, ${Math.ceil(s/4)}>`);else{let i=s==null||s===1?t:`vec${s}<${t}>`;e.push(`${r}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},xM=(e,r)=>new A_(e,r)}),k_,uc,I_,F_,D_,O_,os,TM,EM,un=Ve(()=>{wt(),Pt(),pr(),Ct(),k_=(e,r)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(r.length!==0&&r.length!==e[0].dims.length)throw new Error(`perm size ${r.length} does not match input rank ${e[0].dims.length}`)},uc=(e,r)=>r.length!==0?r:[...new Array(e).keys()].reverse(),I_=(e,r)=>ve.sortBasedOnPerm(e,uc(e.length,r)),F_=(e,r,t,s)=>{let i=`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let n=0;n<r;++n)i+=`a[${e[n]}]=i[${n}];`;return i+="return a;}"},D_=(e,r)=>{let t=[],s=[];for(let i=0;i<e.length;++i)e[i]!==1&&t.push(e[i]),e[r[i]]!==1&&s.push(r[i]);return{newShape:t,newPerm:s}},O_=(e,r)=>{let t=0;for(let s=0;s<e.length;++s)if(r[e[s]]!==1){if(e[s]<t)return!1;t=e[s]}return!0},os=(e,r)=>{let t=e.dataType,s=e.dims.length,i=uc(s,r),n=I_(e.dims,i),o=e.dims,a=n,l=s<2||O_(i,e.dims),c;if(l)return c=f=>{let b=Ae("input",t,o,4),A=at("output",t,a,4);return`
  ${f.registerUniform("output_size","u32").declareVariables(b,A)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let f=ve.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:[{type:12,data:Math.ceil(f/4)}]}},getShaderSource:c};let{newShape:p,newPerm:d}=D_(e.dims,i),u=ve.areEqual(d,[2,3,1]),_=ve.areEqual(d,[3,1,2]);if(p.length===2||u||_){o=u?[p[0],p[1]*p[2]]:_?[p[0]*p[1],p[2]]:p,a=[o[1],o[0]];let f=16;return c=b=>{let A=Ae("a",t,o.length),g=at("output",t,a.length);return`
  ${b.registerUniform("output_size","u32").declareVariables(A,g)}
  var<workgroup> tile : array<array<${g.type.value}, ${f+1}>, ${f}>;
  ${b.mainStart([f,f,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${f} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${f}u + local_id.x;
    let input_row = workgroup_id_x * ${f}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${A.getByIndices(`${A.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${f}u + local_id.x;
    let output_row = workgroup_id_y * ${f}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${g.setByIndices(`${g.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let b=ve.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(a[1]/f),y:Math.ceil(a[0]/f)},programUniforms:[{type:12,data:b},...ct(o,a)]}},getShaderSource:c}}return c=f=>{let b=Ae("a",t,o.length),A=at("output",t,a.length);return`
  ${f.registerUniform("output_size","u32").declareVariables(b,A)}

  ${F_(i,s,b,A)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${A.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${A.setByOffset("global_idx",b.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let f=ve.size(n);return{outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...ct(o,a)]}},getShaderSource:c}},TM=(e,r)=>{k_(e.inputs,r.perm),e.compute(os(e.inputs[0],r.perm))},EM=e=>Wt({perm:e.perm})}),L_,z_,B_,R_,j_,N_,V_,U_,W_,G_,Ms,PM,CM,$M,SM,AM,kM,IM,FM,DM,OM,Ox=Ve(()=>{wt(),Pt(),Ct(),Pu(),un(),L_={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},z_={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},B_={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},R_={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},j_=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},N_=(e,r)=>{let t=[],s=e.length;for(let n=0;n<s;n++)r.indexOf(n)===-1&&t.push(e[n]);let i=r.map(n=>e[n]);return[t,i]},V_=(e,r)=>{let t=e.length+r.length,s=[],i=0;for(let n=0;n<t;n++)r.indexOf(n)===-1?s.push(e[i++]):s.push(1);return s},U_=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},W_=(e,r)=>{let t=[];if(!U_(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},G_=(e,r,t,s,i,n,o)=>{let a=t[0].dims,l=ve.size(n),c=ve.size(o),p=Ae("_A",t[0].dataType,a),d=at("output",i,n),u=64;l===1&&(u=256);let _=`
          var<workgroup> aBestValues : array<f32, ${u}>;
       `,f=b=>`
        ${b.registerUniform("reduceSize","u32").declareVariables(p,d)}
        ${_}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${b.mainStart(u)}

          let outputIndex = global_idx / ${u};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${B_[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${u}) {
           let candidate = f32(${p.getByOffset("offset + k")});
           bestValue = ${L_[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${u}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${z_[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${d.setByOffset("outputIndex",`${s==="mean"?`${d.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${d.type.storage}(${R_[s]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${r};${u}`,inputDependencies:["type"]},getShaderSource:f,getRunData:()=>({outputs:[{dims:n,dataType:i}],dispatchGroup:{x:l},programUniforms:[{type:12,data:c}]})}},Ms=(e,r,t,s)=>{let i=e.inputs.length===1?t:Yc(e.inputs,t),n=i.axes;n.length===0&&!i.noopWithEmptyAxes&&(n=e.inputs[0].dims.map((_,f)=>f));let o=ve.normalizeAxes(n,e.inputs[0].dims.length),a=o,l=e.inputs[0],c=W_(a,e.inputs[0].dims.length);c.length>0&&(l=e.compute(os(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],a=j_(a.length,l.dims.length));let[p,d]=N_(l.dims,a),u=p;i.keepDims&&(u=V_(p,o)),e.compute(G_(r,i.cacheKey,[l],s,e.inputs[0].dataType,u,d),{inputs:[l]})},PM=(e,r)=>{Ms(e,"ReduceMeanShared",r,"mean")},CM=(e,r)=>{Ms(e,"ReduceL1Shared",r,"l1")},$M=(e,r)=>{Ms(e,"ReduceL2Shared",r,"l2")},SM=(e,r)=>{Ms(e,"ReduceLogSumExpShared",r,"logSumExp")},AM=(e,r)=>{Ms(e,"ReduceMaxShared",r,"max")},kM=(e,r)=>{Ms(e,"ReduceMinShared",r,"min")},IM=(e,r)=>{Ms(e,"ReduceProdShared",r,"prod")},FM=(e,r)=>{Ms(e,"ReduceSumShared",r,"sum")},DM=(e,r)=>{Ms(e,"ReduceSumSquareShared",r,"sumSquare")},OM=(e,r)=>{Ms(e,"ReduceLogSumShared",r,"logSum")}}),ys,K_,ba,Yc,vs,H_,q_,Q_,X_,Y_,J_,Z_,eg,tg,rg,xs,LM,zM,BM,RM,jM,NM,VM,UM,WM,GM,Pu=Ve(()=>{wt(),Pt(),pr(),Ct(),Ox(),ys=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},K_=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ba=(e,r,t,s,i,n,o=!1,a=!1)=>{let l=[],c=t[0].dims,p=c.length,d=ve.normalizeAxes(i,p),u=!a&&d.length===0;c.forEach((b,A)=>{u||d.indexOf(A)>=0?o&&l.push(1):l.push(b)});let _=l.length,f=ve.size(l);return{name:e,shaderCache:r,getShaderSource:b=>{let A=[],g=Ae("_A",t[0].dataType,p),w=at("output",n,_),$=s(g,w,d),y=$[2];for(let v=0,T=0;v<p;v++)u||d.indexOf(v)>=0?(o&&T++,y=`for(var j${v}: u32 = 0; j${v} < ${c[v]}; j${v}++) {
                  ${$[2].includes("last_index")?`let last_index = j${v};`:""}
                  ${g.indicesSet("input_indices",v,`j${v}`)}
                  ${y}
                }`):(A.push(`${g.indicesSet("input_indices",v,w.indicesGet("output_indices",T))};`),T++);return`

        ${b.registerUniform("output_size","u32").declareVariables(g,w)}

        ${b.mainStart()}
          ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${g.type.indices};
          let output_indices = ${w.offsetToIndices("global_idx")};

          ${A.join(`
`)}
          ${$[0]}       // init ops for reduce max/min
          ${$[1]}
          ${y}
          ${$[3]}
          ${$.length===4?w.setByOffset("global_idx","value"):$.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:n}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...ct(c,l)]})}},Yc=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),Wt({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},vs=(e,r,t,s)=>{let i=e.inputs,n=i.length===1?t:Yc(i,t);e.compute(ba(r,{hint:n.cacheKey,inputDependencies:["rank"]},[i[0]],n.noopWithEmptyAxes&&n.axes.length===0?K_:s,n.axes,i[0].dataType,n.keepDims,n.noopWithEmptyAxes),{inputs:[0]})},H_=(e,r)=>{ys(e.inputs),vs(e,"ReduceLogSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},q_=(e,r)=>{ys(e.inputs),vs(e,"ReduceL1",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},Q_=(e,r)=>{ys(e.inputs),vs(e,"ReduceL2",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},X_=(e,r)=>{ys(e.inputs),vs(e,"ReduceLogSumExp",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},Y_=(e,r)=>{ys(e.inputs),vs(e,"ReduceMax",r,(t,s,i)=>{let n=[];for(let o=0;o<t.rank;o++)(i.indexOf(o)>=0||i.length===0)&&n.push(t.indicesSet("input_indices",o,0));return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},J_=(e,r)=>{ys(e.inputs),vs(e,"ReduceMean",r,(t,s,i)=>{let n=1;for(let o=0;o<t.rank;o++)(i.indexOf(o)>=0||i.length===0)&&(n*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${n});`]})},Z_=(e,r)=>{ys(e.inputs),vs(e,"ReduceMin",r,(t,s,i)=>{let n=[];for(let o=0;o<t.rank;o++)(i.indexOf(o)>=0||i.length===0)&&n.push(`input_indices[${o}] = 0;`);return[`${n.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},eg=(e,r)=>{ys(e.inputs),vs(e,"ReduceProd",r,(t,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},tg=(e,r)=>{ys(e.inputs),vs(e,"ReduceSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},rg=(e,r)=>{ys(e.inputs),vs(e,"ReduceSumSquare",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},xs=(e,r,t)=>{if(r.length===0)return t;let s=1,i=1;for(let n=0;n<r.length;n++)r.indexOf(n)===-1?s*=e[n]:i*=e[n];return i<32&&s>1024},LM=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?J_(e,r):PM(e,r)},zM=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?q_(e,r):CM(e,r)},BM=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Q_(e,r):$M(e,r)},RM=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?X_(e,r):SM(e,r)},jM=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Y_(e,r):AM(e,r)},NM=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Z_(e,r):kM(e,r)},VM=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?eg(e,r):IM(e,r)},UM=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?tg(e,r):FM(e,r)},WM=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rg(e,r):DM(e,r)},GM=(e,r)=>{xs(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?H_(e,r):OM(e,r)}}),dc,KM,HM,Jc,Lx=Ve(()=>{wt(),pr(),Pu(),dc=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},KM=(e,r)=>{dc(e.inputs);let t=(s,i,n)=>{let o=[];for(let a=0;a<s.rank;a++)(n.indexOf(a)>=0||n.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ba("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},HM=(e,r)=>{dc(e.inputs);let t=(s,i,n)=>{let o=[];for(let a=0;a<s.rank;a++)(n.indexOf(a)>=0||n.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(ba("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Jc=e=>Wt(e)}),sg,na,ng,ig,og,to,ag,qM,Cu=Ve(()=>{wt(),Pt(),Tu(),Ct(),sg=(e,r)=>{let t=e[0],s=e[1],i=e[2],n=e[3],o=e[4],a=e[5];if(o&&a)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],c=t.dims[1],p=t.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==p)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let d=i.dims[0]/3,u=d,_=u;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let $ of r.qkvHiddenSizes)if($%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");d=r.qkvHiddenSizes[0],u=r.qkvHiddenSizes[1],_=r.qkvHiddenSizes[2]}let f=c;if(d!==u)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==d+u+_)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let b=0;if(o){if(u!==_)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==u/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(b=o.dims[3])}let A=f+b,g=-1,w=0;if(n)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(a){if(a.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(a.dims[0]!==l||a.dims[1]!==r.numHeads||a.dims[2]!==c||a.dims[3]!==A)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:c,pastSequenceLength:b,kvSequenceLength:f,totalSequenceLength:A,maxSequenceLength:g,inputHiddenSize:p,hiddenSize:d,vHiddenSize:_,headSize:Math.floor(d/r.numHeads),vHeadSize:Math.floor(_/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:w,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},na=(e,r,t)=>r&&e?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,ng=(e,r,t,s,i,n,o,a)=>{let l=cr(o?1:n),c=64,p=n/l;p<c&&(c=32);let d=Math.ceil(n/l/c),u=[{type:12,data:r},{type:12,data:t},{type:12,data:s},{type:12,data:i},{type:12,data:p},{type:12,data:d}],_=Dr(e.dataType,l),f=qr(1,l),b=["type"];o&&b.push("type"),a&&b.push("type");let A=g=>{let w=at("x",e.dataType,e.dims,l),$=[w],y=o?Ae("seq_lens",o.dataType,o.dims):void 0;y&&$.push(y);let v=a?Ae("total_sequence_length_input",a.dataType,a.dims):void 0;v&&$.push(v);let T=qr(e.dataType),x=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${c}>;
  var<workgroup> thread_sum: array<f32, ${c}>;
  ${g.registerUniforms(x).declareVariables(...$)}
  ${g.mainStart([c,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${na(y,v,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${c}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${c}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${w.type.value}(${T}(1.0) / ${T}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${w.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${w.type.value}(${T}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${_};${l}`,inputDependencies:b},getShaderSource:A,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:i,z:r*t},programUniforms:u})}},ig=(e,r,t,s,i,n,o,a,l)=>{let c=o+n.kvSequenceLength,p=[n.batchSize,n.numHeads,n.sequenceLength,c],d=e>1&&s,u=n.kvNumHeads?n.kvNumHeads:n.numHeads,_=d?[n.batchSize,u,c,n.headSize]:void 0,f=n.nReps?n.nReps:1,b=n.scale===0?1/Math.sqrt(n.headSize):n.scale,A=cr(n.headSize),g=n.headSize/A,w=12,$={x:Math.ceil(c/w),y:Math.ceil(n.sequenceLength/w),z:n.batchSize*n.numHeads},y=[{type:12,data:n.sequenceLength},{type:12,data:g},{type:12,data:c},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:1,data:b},{type:12,data:o},{type:12,data:n.kvSequenceLength},{type:12,data:f}],v=d&&s&&ve.size(s.dims)>0,T=["type","type"];v&&T.push("type"),i&&T.push("type"),a&&T.push("type"),l&&T.push("type");let x=[{dims:p,dataType:r.dataType,gpuDataType:0}];d&&x.push({dims:_,dataType:r.dataType,gpuDataType:0});let P=D=>{let L=Ae("q",r.dataType,r.dims,A),G=Ae("key",t.dataType,t.dims,A),K=[L,G];if(v){let me=Ae("past_key",s.dataType,s.dims,A);K.push(me)}i&&K.push(Ae("attention_bias",i.dataType,i.dims));let R=a?Ae("seq_lens",a.dataType,a.dims):void 0;R&&K.push(R);let te=l?Ae("total_sequence_length_input",l.dataType,l.dims):void 0;te&&K.push(te);let H=at("output",r.dataType,p),ee=[H];d&&ee.push(at("present_key",r.dataType,_,A));let Z=qr(1,A),ne=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${w}u;

  var<workgroup> tileQ: array<${L.type.storage}, ${w*w}>;
  var<workgroup> tileK: array<${L.type.storage}, ${w*w}>;
  ${D.registerUniforms(ne).declareVariables(...K,...ee)}
  ${D.mainStart([w,w,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${f===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${f===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${na(R,te,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${v&&d?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${d?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Z}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${v&&d?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${d?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Z}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(A){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${A}`)}})()};
        output[outputIdx] = ${H.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${A};${i!==void 0};${s!==void 0};${e}`,inputDependencies:T},getRunData:()=>({outputs:x,dispatchGroup:$,programUniforms:y}),getShaderSource:P}},og=(e,r,t,s,i,n,o=void 0,a=void 0)=>{let l=n+i.kvSequenceLength,c=i.nReps?i.nReps:1,p=i.vHiddenSize*c,d=e>1&&s,u=i.kvNumHeads?i.kvNumHeads:i.numHeads,_=d?[i.batchSize,u,l,i.headSize]:void 0,f=[i.batchSize,i.sequenceLength,p],b=12,A={x:Math.ceil(i.vHeadSize/b),y:Math.ceil(i.sequenceLength/b),z:i.batchSize*i.numHeads},g=[{type:12,data:i.sequenceLength},{type:12,data:l},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:p},{type:12,data:n},{type:12,data:i.kvSequenceLength},{type:12,data:c}],w=d&&s&&ve.size(s.dims)>0,$=["type","type"];w&&$.push("type"),o&&$.push("type"),a&&$.push("type");let y=[{dims:f,dataType:r.dataType,gpuDataType:0}];d&&y.push({dims:_,dataType:r.dataType,gpuDataType:0});let v=T=>{let x=Ae("probs",r.dataType,r.dims),P=Ae("v",t.dataType,t.dims),D=[x,P];w&&D.push(Ae("past_value",s.dataType,s.dims));let L=o?Ae("seq_lens",o.dataType,o.dims):void 0;o&&D.push(L);let G=a?Ae("total_sequence_length_input",a.dataType,a.dims):void 0;a&&D.push(G);let K=[at("output",r.dataType,f)];d&&K.push(at("present_value",r.dataType,_));let R=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${b}u;
  var<workgroup> tileQ: array<${x.type.value}, ${b*b}>;
  var<workgroup> tileV: array<${x.type.value}, ${b*b}>;
  ${T.registerUniforms(R).declareVariables(...D,...K)}
  ${T.mainStart([b,b,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${c===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${c===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${na(L,G,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${w&&d?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${d?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${x.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${w&&d?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${d?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:$},getRunData:()=>({outputs:y,dispatchGroup:A,programUniforms:g}),getShaderSource:v}},to=(e,r,t,s,i,n,o,a,l,c,p=void 0,d=void 0)=>{let u=Math.min(e.outputCount,1+(o?1:0)+(a?1:0)),_=u>1?c.pastSequenceLength:0,f=_+c.kvSequenceLength,b=l&&ve.size(l.dims)>0?l:void 0,A=[r,t];u>1&&o&&ve.size(o.dims)>0&&A.push(o),b&&A.push(b),p&&A.push(p),d&&A.push(d);let g=e.compute(ig(u,r,t,o,b,c,_,p,d),{inputs:A,outputs:u>1?[-1,1]:[-1]})[0];e.compute(ng(g,c.batchSize,c.numHeads,_,c.sequenceLength,f,p,d),{inputs:p&&d?[g,p,d]:[g],outputs:[]});let w=[g,s];u>1&&a&&ve.size(a.dims)>0&&w.push(a),p&&w.push(p),d&&w.push(d),e.compute(og(u,g,s,a,c,_,p,d),{inputs:w,outputs:u>1?[0,2]:[0]})},ag=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,i=r.inputHiddenSize,n=r.headSize,o=12,a={x:Math.ceil(r.headSize/o),y:Math.ceil(r.sequenceLength/o),z:r.batchSize*r.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:s},{type:12,data:i},{type:12,data:n},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],p=d=>{let u=at("output_q",l[0].dataType,t),_=at("output_k",l[0].dataType,t),f=at("output_v",l[0].dataType,t),b=Ae("input",l[0].dataType,l[0].dims),A=Ae("weight",l[1].dataType,l[1].dims),g=Ae("bias",l[2].dataType,l[2].dims),w=b.type.storage,$=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${w}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${w}, ${o*o}>;
  var<workgroup> tileWeightK: array<${w}, ${o*o}>;
  var<workgroup> tileWeightV: array<${w}, ${o*o}>;
  ${d.registerUniforms($).declareVariables(b,A,g,u,_,f)}
  ${d.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${w}(0);
    var valueK = ${w}(0);
    var valueV = ${w}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:c}),getShaderSource:p},{inputs:l,outputs:[-1,-1,-1]})},qM=(e,r)=>{let t=sg(e.inputs,r),[s,i,n]=ag(e,t);return to(e,s,i,n,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),lg,cg,ug,QM,zx=Ve(()=>{Ss(),wt(),Pt(),pr(),Ct(),lg=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,i,n)=>{let o=i.length;if(o!==s.length)throw new Error(`${n}: num dimensions != ${o}`);i.forEach((a,l)=>{if(a!==s[l])throw new Error(`${n}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},cg=(e,r)=>{let{epsilon:t,spatial:s,format:i}=r,n=e[0].dims,o=s?cr(n[n.length-1]):1,a=i==="NHWC"&&n.length>1?o:1,l=ve.size(n)/o,c=s,p=c?n.length:n,d=Ae("x",e[0].dataType,e[0].dims,o),u=Ae("scale",e[1].dataType,e[1].dims,a),_=Ae("bias",e[2].dataType,e[2].dims,a),f=Ae("inputMean",e[3].dataType,e[3].dims,a),b=Ae("inputVar",e[4].dataType,e[4].dims,a),A=at("y",e[0].dataType,p,o),g=()=>{let $="";if(s)$=`let cOffset = ${n.length===1?"0u":i==="NHWC"?`outputIndices[${n.length-1}] / ${o}`:"outputIndices[1]"};`;else if(i==="NCHW")$=`
            ${A.indicesSet("outputIndices","0","0")}
            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{$=`var cIndices = ${u.type.indices}(0);
                       cIndices[0] = outputIndices[${n.length-1}];`;for(let y=1;y<u.rank;y++)$+=`cIndices[${y}] = outputIndices[${y}];`;$+=`let cOffset = ${u.indicesToOffset("cIndices")};`}return $},w=$=>`
  const epsilon = ${t};
  ${$.registerUniform("outputSize","u32").declareVariables(d,u,_,f,b,A)}
  ${$.mainStart()}
  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${A.offsetToIndices(`global_idx * ${o}`)};
    ${g()}
    let scale = ${u.getByOffset("cOffset")};
    let bias = ${_.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${b.getByOffset("cOffset")};
    let x = ${d.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${A.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${o}`,inputDependencies:c?["rank","type","type","type","type"]:void 0},getShaderSource:w,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c?[{type:12,data:l},...ct(n)]:[{type:12,data:l}]})}},ug=e=>Wt(e),QM=(e,r)=>{let{inputs:t,outputCount:s}=e,i=ug({...r,outputCount:s});if(er.webgpu.validateInputContent&&lg(t,i),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(cg(t,i))}}),dg,pg,XM,Bx=Ve(()=>{Pt(),Ct(),dg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},pg=e=>{let r=e[0].dims,t=e[0].dims[2],s=ve.size(r)/4,i=e[0].dataType,n=Ae("input",i,r,4),o=Ae("bias",i,[t],4),a=Ae("residual",i,r,4),l=at("output",i,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:c=>`
  const channels = ${t}u / 4;
  ${c.declareVariables(n,o,a,l)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${n.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},XM=e=>{dg(e.inputs),e.compute(pg(e.inputs))}}),hg,Nt,YM,JM,ZM,ey,ty,ry,sy,ny,iy,mg,oy,ay,ly,cy,Xi,uy,ma,dy,py,hy,my,fy,_y,gy,wy,by,My,yy,vy,xy,Ty,Ey,Py,pc,Cy,Zc,eu,$y,Sy,Ay,fg,_g,ky,$u=Ve(()=>{wt(),Pt(),pr(),Ct(),hg=(e,r,t,s,i,n,o)=>{let a=Math.ceil(r/4),l="";typeof i=="string"?l=`${i}(a)`:l=i("a");let c=Ae("inputData",t,[a],4),p=at("outputData",s,[a],4),d=[{name:"vec_size",type:"u32"}];return o&&d.push(...o),`
      ${e.registerUniforms(d).declareVariables(c,p)}

  ${n??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${c.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",l)}
  }`},Nt=(e,r,t,s,i,n=e.dataType,o,a)=>{let l=[{type:12,data:Math.ceil(ve.size(e.dims)/4)}];return o&&l.push(...o),{name:r,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:c=>hg(c,ve.size(e.dims),e.dataType,n,t,s,a),getRunData:c=>({outputs:[{dims:e.dims,dataType:n}],dispatchGroup:{x:Math.ceil(ve.size(c[0].dims)/64/4)},programUniforms:l})}},YM=e=>{e.compute(Nt(e.inputs[0],"Abs","abs"))},JM=e=>{e.compute(Nt(e.inputs[0],"Acos","acos"))},ZM=e=>{e.compute(Nt(e.inputs[0],"Acosh","acosh"))},ey=e=>{e.compute(Nt(e.inputs[0],"Asin","asin"))},ty=e=>{e.compute(Nt(e.inputs[0],"Asinh","asinh"))},ry=e=>{e.compute(Nt(e.inputs[0],"Atan","atan"))},sy=e=>{e.compute(Nt(e.inputs[0],"Atanh","atanh"))},ny=e=>Wt(e),iy=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute(Nt(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},mg=e=>{let r,t,s=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=s?e[1].getFloat32Array()[0]:-34028234663852886e22,t=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?e[1].getUint16Array()[0]:64511,t=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Wt({min:r,max:t})},oy=(e,r)=>{let t=r||mg(e.inputs),s=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},ay=e=>{e.compute(Nt(e.inputs[0],"Ceil","ceil"))},ly=e=>{e.compute(Nt(e.inputs[0],"Cos","cos"))},cy=e=>{e.compute(Nt(e.inputs[0],"Cosh","cosh"))},Xi=e=>Wt(e),uy=(e,r)=>{let t=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${t}(${r.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},ma=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,dy=e=>{let r=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,ma(r)))},py=e=>{e.compute(Nt(e.inputs[0],"Exp","exp"))},hy=e=>{e.compute(Nt(e.inputs[0],"Floor","floor"))},my=e=>{let r=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,ma(r)))},fy=(e,r)=>{let t=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},_y=e=>{e.compute(Nt(e.inputs[0],"Not",r=>`!${r}`))},gy=e=>{e.compute(Nt(e.inputs[0],"Neg",r=>`-${r}`))},wy=e=>{e.compute(Nt(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},by=e=>{let r=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},My=e=>{e.compute(Nt(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},yy=e=>Wt(e),vy=(e,r)=>{let t=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},xy=e=>{e.compute(Nt(e.inputs[0],"Sin","sin"))},Ty=e=>{e.compute(Nt(e.inputs[0],"Sinh","sinh"))},Ey=e=>{e.compute(Nt(e.inputs[0],"Sqrt","sqrt"))},Py=e=>{e.compute(Nt(e.inputs[0],"Tan","tan"))},pc=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Cy=e=>{e.compute(Nt(e.inputs[0],"Tanh",pc))},Zc=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${pc("v")};
}
`,eu=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,$y=e=>{let r=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"FastGelu",eu,Zc(r),void 0,e.inputs[0].dataType))},Sy=(e,r)=>{let t=qr(e.inputs[0].dataType);return e.compute(Nt(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},Ay=e=>{e.compute(Nt(e.inputs[0],"Log","log"))},fg=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,_g=e=>`quick_gelu_impl(${e})`,ky=(e,r)=>{let t=qr(e.inputs[0].dataType);e.compute(Nt(e.inputs[0],"QuickGelu",_g,fg(t,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),gg,wg,Iy,Rx=Ve(()=>{Pt(),Ct(),$u(),gg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},wg=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=Ae("input",e[0].dataType,e[0].dims,4),s=Ae("bias",e[0].dataType,[e[0].dims[2]],4),i=at("output",e[0].dataType,r,4),n=ve.size(r)/4,o=Dr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${a.declareVariables(t,s,i)}

  ${ma(o)}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Iy=e=>{gg(e.inputs),e.compute(wg(e.inputs))}}),bg,Mg,Ts,Fy,Dy,Oy,Ly,zy,By,Ry,jy,Ny,Vy,jx=Ve(()=>{wt(),Pt(),Ct(),bg=(e,r,t,s,i,n,o,a,l,c,p,d)=>{let u,_;typeof a=="string"?u=_=(w,$)=>`${a}((${w}),(${$}))`:typeof a=="function"?u=_=a:(u=a.scalar,_=a.vector);let f=at("outputData",p,s.length,4),b=Ae("aData",l,r.length,4),A=Ae("bData",c,t.length,4),g;if(i)if(n){let w=ve.size(r)===1,$=ve.size(t)===1,y=r.length>0&&r[r.length-1]%4===0,v=t.length>0&&t[t.length-1]%4===0;w||$?g=f.setByOffset("global_idx",_(w?`${b.type.value}(${b.getByOffset("0")}.x)`:b.getByOffset("global_idx"),$?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):g=`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${b.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",_(o||y?b.getByOffset("offsetA / 4u"):`${b.type.value}(${b.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||v?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else g=f.setByOffset("global_idx",_(b.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!n)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let w=($,y,v="")=>{let T=`aData[indexA${y}][componentA${y}]`,x=`bData[indexB${y}][componentB${y}]`;return`
            let outputIndices${y} = ${f.offsetToIndices(`global_idx * 4u + ${y}u`)};
            let offsetA${y} = ${b.broadcastedIndicesToOffset(`outputIndices${y}`,f)};
            let offsetB${y} = ${A.broadcastedIndicesToOffset(`outputIndices${y}`,f)};
            let indexA${y} = offsetA${y} / 4u;
            let indexB${y} = offsetB${y} / 4u;
            let componentA${y} = offsetA${y} % 4u;
            let componentB${y} = offsetB${y} % 4u;
            ${$}[${y}] = ${v}(${u(T,x)});
          `};p===9?g=`
            var data = vec4<u32>(0);
            ${w("data",0,"u32")}
            ${w("data",1,"u32")}
            ${w("data",2,"u32")}
            ${w("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:g=`
            ${w("outputData[global_idx]",0)}
            ${w("outputData[global_idx]",1)}
            ${w("outputData[global_idx]",2)}
            ${w("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(b,A,f)}

        ${d??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${g}
      }`},Mg=(e,r,t,s,i,n,o=t.dataType)=>{let a=t.dims.map(b=>Number(b)??1),l=s.dims.map(b=>Number(b)??1),c=!ve.areEqual(a,l),p=a,d=ve.size(a),u=!1,_=!1,f=[c];if(c){let b=li.calcShape(a,l,!1);if(!b)throw new Error("Can't perform binary op on the given tensors");p=b.slice(),d=ve.size(p);let A=ve.size(a)===1,g=ve.size(l)===1,w=a.length>0&&a[a.length-1]%4===0,$=l.length>0&&l[l.length-1]%4===0;f.push(A),f.push(g),f.push(w),f.push($);let y=1;for(let v=1;v<p.length;v++){let T=a[a.length-v],x=l[l.length-v];if(T===x)y*=T;else break}y%4===0?(_=!0,u=!0):(A||g||w||$)&&(u=!0)}else u=!0;return f.push(u),{name:e,shaderCache:{hint:r+f.map(b=>b.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:b=>bg(b,a,l,p,u,c,_,i,t.dataType,s.dataType,o,n),getRunData:()=>({outputs:[{dims:p,dataType:o}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:Math.ceil(ve.size(p)/4)},...ct(a,l,p)]})}},Ts=(e,r,t,s,i,n)=>{e.compute(Mg(r,i??"",e.inputs[0],e.inputs[1],t,s,n))},Fy=e=>{Ts(e,"Add",(r,t)=>`${r}+${t}`)},Dy=e=>{Ts(e,"Div",(r,t)=>`${r}/${t}`)},Oy=e=>{Ts(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},Ly=e=>{Ts(e,"Mul",(r,t)=>`${r}*${t}`)},zy=e=>{let r=Ae("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Ts(e,"Pow",{scalar:(t,s)=>`pow_custom(${t},${s})`,vector:(t,s)=>`pow_vector_custom(${t},${s})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},By=e=>{Ts(e,"Sub",(r,t)=>`${r}-${t}`)},Ry=e=>{Ts(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},jy=e=>{Ts(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},Ny=e=>{Ts(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},Vy=e=>{Ts(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}}),yg,vg,xg,Tg,Uy,Wy,Nx=Ve(()=>{wt(),Pt(),pr(),Ct(),yg=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],i=s.dataType,n=s.dims.length;e.forEach((o,a)=>{if(a!==t){if(o.dataType!==i)throw new Error("input tensors should be one type");if(o.dims.length!==n)throw new Error("input tensors should have the same shape");o.dims.forEach((l,c)=>{if(c!==r&&l!==s.dims[c])throw new Error("non concat dimensions must match")})}})},vg=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,xg=(e,r)=>{let t=e.length,s=[];for(let i=0;i<t;++i){let n=r.setByOffset("global_idx",e[i].getByIndices("indices"));t===1?s.push(n):i===0?s.push(`if (inputIndex == ${i}u) { ${n} }`):i===t-1?s.push(`else { ${n} }`):s.push(`else if (inputIndex == ${i}) { ${n} }`)}return s.join(`
`)},Tg=(e,r,t,s)=>{let i=ve.size(t),n=new Array(e.length),o=new Array(e.length),a=0,l=[],c=[],p=[{type:12,data:i}];for(let b=0;b<e.length;++b)a+=e[b].dims[r],n[b]=a,c.push(e[b].dims.length),o[b]=Ae(`input${b}`,s,c[b]),l.push("rank"),p.push({type:12,data:n[b]});for(let b=0;b<e.length;++b)p.push(...ct(e[b].dims));p.push(...ct(t));let d=at("output",s,t.length),u=d.indicesGet("indices",r),_=Array.from(Array(n.length).keys()).map(b=>`uniforms.sizeInConcatAxis${b}`).join(","),f=b=>`

  ${(()=>{b.registerUniform("outputSize","u32");for(let A=0;A<e.length;A++)b.registerUniform(`sizeInConcatAxis${A}`,"u32");return b.declareVariables(...o,d)})()}

  ${vg(n.length,_)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${d.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${u});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${n.length}u>(${_});
      ${u} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${xg(o,d)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:p}),getShaderSource:f}},Uy=(e,r)=>{let t=e.inputs,s=t[0].dims,i=ve.normalizeAxis(r.axis,s.length);yg(t,i);let n=s.slice();n[i]=t.reduce((a,l)=>a+(l.dims.length>i?l.dims[i]:0),0);let o=t.filter(a=>ve.size(a.dims)>0);e.compute(Tg(o,i,n,t[0].dataType),{inputs:o})},Wy=e=>Wt({axis:e.axis})}),zn,Bn,Rn,Su,Nn=Ve(()=>{wt(),Pt(),zn=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Bn=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},Rn=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},Su=e=>{let r=(e==null?void 0:e.activation)||"";if(r==="HardSigmoid"){let[t,s]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=(e==null?void 0:e.activation_params)||[_M,gM];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=(e==null?void 0:e.activation_params)||[.01];return{activation:r,alpha:t}}return{activation:r}}}),zr,Gy,Au=Ve(()=>{zr=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},Gy=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Ky,Vx=Ve(()=>{Ky=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Ji,ku,Iu=Ve(()=>{wt(),Pt(),Ct(),Nn(),Ji=(e,r,t,s,i)=>{let n=s-t;return`
      ${Array.from({length:t}).map((o,a)=>`
      if (${lt(r.shape,a,r.rank)} != 1) {
        ${r.indicesSet(e,a,lt(i,a+n,s))}
      } else {
        ${r.indicesSet(e,a,0)}
      }`).join("")}
`},ku=(e,r,t,s,i=!1,n)=>{let o=e[0].dims,a=e[1].dims,l=o[o.length-2],c=a[a.length-1],p=o[o.length-1],d=cr(c),u=cr(p),_=cr(l),f=ve.size(t)/d/_,b=e.length>2,A=s?s.slice(0,-2):t.slice(0,-2),g=[ve.size(A),l,c],w=[{type:12,data:f},{type:12,data:l},{type:12,data:c},{type:12,data:p}];Bn(r,w),w.push(...ct(A,o,a)),b&&w.push(...ct(e[2].dims)),w.push(...ct(g));let $=y=>{let v=Eu("batch_dims",e[0].dataType,A.length),T=Ae("a",e[0].dataType,o.length,u),x=Ae("b",e[1].dataType,a.length,d),P=at("output",e[0].dataType,g.length,d),D=Dr(P.type.tensor),L=zn(r,P.type.value,D),G=[T,x],K="";if(b){let H=i?d:1;G.push(Ae("bias",e[2].dataType,e[2].dims.length,H)),K=`${i?`value += bias[col / ${H}];`:`value += ${P.type.value}(bias[row + i]);`}`}let R=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Rn(r,R);let te=()=>{let H=`var a_data: ${T.type.value};`;for(let ee=0;ee<u;ee++)H+=`
              let b_data${ee} = b[(b_offset + (k + ${ee}) * uniforms.N + col) / ${d}];`;for(let ee=0;ee<_;ee++){H+=`a_data = a[(a_offset + (row + ${ee}) * uniforms.K + k) / ${u}];`;for(let Z=0;Z<u;Z++)H+=`
            values[${ee}] = fma(${x.type.value}(a_data${u===1?"":`[${Z}]`}), b_data${Z}, values[${ee}]);
`}return H};return`
  ${y.registerUniforms(R).registerInternalVariables(v).declareVariables(...G,P)}
  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${_};
    let row = (index1 % stride1) * ${_};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${v.offsetToIndices("batch")};`}

    var a_indices: ${T.type.indices};
    ${Ji("a_indices",T,T.rank-2,v.rank,"batch_indices")}
    ${T.indicesSet("a_indices",T.rank-2,0)}
    ${T.indicesSet("a_indices",T.rank-1,0)}
    let a_offset = ${T.indicesToOffset("a_indices")};

    var b_indices: ${x.type.indices};
    ${Ji("b_indices",x,x.rank-2,v.rank,"batch_indices")}
    ${x.indicesSet("b_indices",x.rank-2,0)}
    ${x.indicesSet("b_indices",x.rank-1,0)}
    let b_offset = ${x.indicesToOffset("b_indices")};
    var values: array<${P.type.value}, ${_}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${u}) {
      ${te()}
    }
    for (var i = 0u; i < ${_}u; i++) {
      var value = values[i];
      ${K}
      ${L}
      let cur_indices = ${P.type.indices}(batch, row + i, col);
      let offset = ${P.indicesToOffset("cur_indices")};
      ${P.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${d};${u};${_};${i}`,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:w}),getShaderSource:$}}}),Eg,Pg,tu,hc,Cg,ru,$g,Ma,Fu=Ve(()=>{wt(),Pt(),Ct(),Nn(),Iu(),Au(),Eg=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,Pg=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,tu=(e,r,t="f32",s,i=!1,n=32,o=!1,a=32)=>{let l=r[1]*e[1],c=r[0]*e[0],p=i?l:n,d=i?n:l,u=p/r[0],_=n/r[1];if(!((i&&u===4&&e[1]===4||!i&&(u===3||u===4))&&p%r[0]===0&&n%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${u} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${u} must be 3 or 4.
  tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${u}<${t}>, ${p/u}>, ${d}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${c/e[0]}>, ${n}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${u};
const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${o?`${Math.ceil(a/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${_};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Eg(i,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${u===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Pg(i,u)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},hc=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,Cg=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ru=(e,r,t="f32",s,i=!1,n=32,o=!1,a=32,l=!1)=>{let c=e[1]*r[1],p=e[0]*r[0],d=i?c:n,u=i?n:c;if(!(u%r[1]===0&&d%r[0]===0&&n%r[1]===0))throw new Error(`tileAHight ${u} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${r[0]}, tileInner ${n} must be divisible by workgroupSize[1]${r[1]}`);let _=u/r[1],f=d/r[0],b=n/r[1],A=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${c};
    let globalColStart = i32(workgroupId.x) * ${p};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${r[0]}) {
          ${hc(i,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${c};

let tileRowA = i32(localId.y) * ${_};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${b};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${hc(i,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${b}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Cg(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${d}>, ${u}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${p}>, ${n}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${n};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(a/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${A}
  }
`},$g=(e,r,t,s,i=!1)=>{let[n,o,a,l]=s,c=Dr(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${zr(e,c)} {
      var value = ${zr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${o.type.indices};
        ${Ji("aIndices",o,o.rank-2,n.rank,"batchIndices")}
        ${o.indicesSet("aIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("aIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${zr(e,c)} {
      var value = ${zr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${a.type.indices};
        ${Ji("bIndices",a,a.rank-2,n.rank,"batchIndices")}
        ${a.indicesSet("bIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("bIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${zr(e,c)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${i?"bias[colIn]":`${zr(e,c)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Ma=(e,r,t,s,i=!1,n)=>{let o=e[0].dims,a=e[1].dims,l=o.slice(0,-2),c=a.slice(0,-2),p=s?s.slice(0,-2):t.slice(0,-2),d=ve.size(p),u=o[o.length-2],_=o[o.length-1],f=a[a.length-1],b=_%4===0&&f%4===0,A=u<=8?[4,1,1]:[4,4,1],g=[8,8,1],w=[Math.ceil(f/g[0]/A[0]),Math.ceil(u/g[1]/A[1]),Math.ceil(d/g[2]/A[2])],$=b?4:1,y=[...l,u,_/$],v=y.length,T=[...c,_,f/$],x=T.length,P=[d,u,f/$],D=[{type:6,data:u},{type:6,data:f},{type:6,data:_}];Bn(r,D),D.push(...ct(p,y,T));let L=["rank","rank"],G=e.length>2;G&&(D.push(...ct(e[2].dims)),L.push("rank")),D.push(...ct(P));let K=R=>{let te=p.length,H=Eu("batchDims",e[0].dataType,te,1),ee=Dr(e[0].dataType),Z=Ae("a",e[0].dataType,v,$),ne=Ae("b",e[1].dataType,x,$),me=at("result",e[0].dataType,P.length,$),ue=[Z,ne];if(G){let fe=i?$:1;ue.push(Ae("bias",e[2].dataType,e[2].dims.length,fe))}let j=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Rn(r,j);let F=Dr(me.type.tensor),U=zn(r,me.type.value,F),se=$g($,G,U,[H,Z,ne,me],i);return`
  ${R.registerUniforms(j).registerInternalVariables(H).declareVariables(...ue,me)}
  ${se}
  ${b?tu(A,g,ee,H):ru(A,g,ee,H)}
                   `};return{name:"MatMul",shaderCache:{hint:`${A};${r.activation};${b};${i}`,inputDependencies:L},getRunData:()=>({outputs:[{dims:n?n(t):t,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:D}),getShaderSource:K}}}),Sg,Hy,Ux=Ve(()=>{wt(),Ks(),Ct(),Nn(),Au(),Vx(),Fu(),Sg=(e,r,t,s,i=!1,n,o=4,a=4,l=4,c="f32")=>{let p=D=>{switch(D){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${D} is not supported.`)}},d=D=>{switch(D){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${D} is not supported.`)}},u=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,_=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",b=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=e?"row":"col",g=e?"col":"row",w=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${A} / outWidth;
    let outCol = ${A} % outWidth;

    let WRow = ${g} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${g} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${g} % inChannels;
    var resData = ${zr(o,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${b}) {
      ${u}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${p(o)}
    }
    return resData;`,$=e?r&&s?`
    let col = colIn * ${o};
    ${w}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${w}
    }
    return ${zr(o,c)}(0.0);`:s&&t?`
    let col = colIn * ${o};
    ${w}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${w}
    }
    return ${zr(o,c)}(0.0);`,y=e?s&&t?d(a):`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${d(a)}
    }
    return ${zr(a,c)}(0.0);`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${d(a)}
    }
    return ${zr(a,c)}(0.0);`,v=zr(l,c),T=zr(e?o:a,c),x=zr(e?a:o,c),P=zn(n,v,c);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${T} {
      ${e?$:y}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {
      ${e?y:$}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${v}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${_}
      ${Gy(i)}
      ${P}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Hy=(e,r,t,s,i,n,o,a,l)=>{let c=r.format==="NHWC",p=c?e[0].dims[3]:e[0].dims[1],d=t[0],u=c?t[2]:t[3],_=c?t[1]:t[2],f=c?t[3]:t[1],b=c&&(p%4===0||p%3===0)&&f%4===0,A=c?f:u*_,g=c?u*_:f,w=[8,8,1],$=s<=8?[4,1,1]:[4,4,1],y=[Math.ceil(A/w[0]/$[0]),Math.ceil(g/w[1]/$[1]),Math.ceil(d/w[2]/$[2])];zt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${y}`);let v=b?c&&p%4!==0?3:4:1,T=w[1]*$[1],x=w[0]*$[0],P=Math.max(w[0]*v,w[1]),D=s%T===0,L=i%x===0,G=n%P===0,K=b?[v,4,4]:[1,1,1],R=[{type:6,data:s},{type:6,data:i},{type:6,data:n},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];Bn(r,R),R.push(...ct(e[0].dims,e[1].dims));let te=["rank","rank"];o&&(R.push(...ct(e[2].dims)),te.push("rank")),R.push(...ct(t));let H=ee=>{let Z=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Rn(r,Z);let ne=b?4:1,me=Dr(e[0].dataType),ue=`
      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${me}>`:me}) {
        result[flatIndex] = ${b?`vec4<${me}>`:me}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${me}>`:me}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);
      }`,j=Ae("x",e[0].dataType,e[0].dims.length,v===3?1:v),F=Ae("w",e[1].dataType,e[1].dims.length,ne),U=[j,F],se=at("result",e[0].dataType,t.length,ne);if(o){let fe=Ae("bias",e[2].dataType,e[2].dims.length,ne);U.push(fe),ue+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${me}>`:me} {
          return bias[coords.${c?"w":"y"}${b?"/ 4":""}];
        }`}return`
        ${Ky("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${ee.registerUniforms(Z).declareVariables(...U,se)}
        ${ue}
        ${Sg(c,D,L,G,o,r,K[0],K[1],K[2],me)}
        ${b?tu($,w,me,void 0,!c,P):ru($,w,me,void 0,!c,P,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${v};${b};${D};${L};${G};${T};${x};${P}`,inputDependencies:te},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:R}),getShaderSource:H}}}),Ag,mc,Vi,kg,fc,Ig,qy,Qy,Wx=Ve(()=>{wt(),Ks(),Pt(),Ct(),Nn(),Au(),Ag=e=>{let r=1;for(let t=0;t<e.length;t++)r*=e[t];return r},mc=e=>typeof e=="number"?[e,e,e]:e,Vi=(e,r)=>r<=1?e:e+(e-1)*(r-1),kg=(e,r,t,s=1)=>{let i=Vi(r,s);return Math.floor((e[0]*(t-1)-t+i)/2)},fc=(e,r,t,s,i)=>{i==null&&(i=kg(e,r[0],s[0]));let n=[0,0,0,t];for(let o=0;o<3;o++)e[o]+2*i>=r[o]&&(n[o]=Math.trunc((e[o]-r[o]+2*i)/s[o]+1));return n},Ig=(e,r,t,s,i,n,o,a,l,c)=>{let p,d,u,_;if(e==="VALID"&&(e=0),typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e};let f=fc([r,t,s,1],[a,l,c],1,[i,n,o],e);d=f[0],u=f[1],_=f[2]}else if(Array.isArray(e)){if(!e.every((b,A,g)=>b===g[0]))throw Error(`Unsupported padding parameter: ${e}`);p={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let f=fc([r,t,s,1],[a,l,c],1,[i,n,o],e[0]);d=f[0],u=f[1],_=f[2]}else if(e==="SAME_UPPER"){d=Math.ceil(r/i),u=Math.ceil(t/n),_=Math.ceil(s/o);let f=(d-1)*i+a-r,b=(u-1)*n+l-t,A=(_-1)*o+c-s,g=Math.floor(f/2),w=f-g,$=Math.floor(b/2),y=b-$,v=Math.floor(A/2),T=A-v;p={top:$,bottom:y,left:v,right:T,front:g,back:w}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:u,outWidth:_}},qy=(e,r,t,s,i,n=!1,o="channelsLast")=>{let a,l,c,p,d;if(o==="channelsLast")[a,l,c,p,d]=e;else if(o==="channelsFirst")[a,d,l,c,p]=e;else throw new Error(`Unknown dataFormat ${o}`);let[u,,_,f,b]=r,[A,g,w]=mc(t),[$,y,v]=mc(s),T=Vi(_,$),x=Vi(f,y),P=Vi(b,v),{padInfo:D,outDepth:L,outHeight:G,outWidth:K}=Ig(i,l,c,p,A,g,w,T,x,P),R=n?u*d:u,te=[0,0,0,0,0];return o==="channelsFirst"?te=[a,R,L,G,K]:o==="channelsLast"&&(te=[a,L,G,K,R]),{batchSize:a,dataFormat:o,inDepth:l,inHeight:c,inWidth:p,inChannels:d,outDepth:L,outHeight:G,outWidth:K,outChannels:R,padInfo:D,strideDepth:A,strideHeight:g,strideWidth:w,filterDepth:_,filterHeight:f,filterWidth:b,effectiveFilterDepth:T,effectiveFilterHeight:x,effectiveFilterWidth:P,dilationDepth:$,dilationHeight:y,dilationWidth:v,inShape:e,outShape:te,filterShape:r}},Qy=(e,r,t,s,i,n)=>{let o=n==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let a=[64,1,1],l={x:t.map((A,g)=>g)},c=[Math.ceil(Ag(l.x.map(A=>t[A]))/a[0]),1,1];zt("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${c}`);let p=1,d=ve.size(t),u=[{type:12,data:d},{type:12,data:s},{type:12,data:i},{type:12,data:r.strides},{type:12,data:r.dilations}];Bn(r,u),u.push(...ct(e[0].dims,e[1].dims));let _=["rank","rank"],f=e.length===3;f&&(u.push(...ct(e[2].dims)),_.push("rank")),u.push(...ct(t));let b=A=>{let g=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];Rn(r,g);let w=1,$=Dr(e[0].dataType),y=Ae("x",e[0].dataType,e[0].dims.length,p),v=Ae("W",e[1].dataType,e[1].dims.length,w),T=[y,v],x=at("result",e[0].dataType,t.length,w),P="";if(f){let G=Ae("bias",e[2].dataType,e[2].dims.length,w);T.push(G),P+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${$} {
          return bias[${o?lt("coords",4,5):lt("coords",1,5)}];
        }`}let D=zr(p,$),L=zn(r,D,$);return`
            ${P}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${y.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${v.getByIndices("aIndices")};
            }
          ${A.registerUniforms(g).declareVariables(...T,x)}
          ${A.mainStart()}
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${x.offsetToIndices("global_idx")};
              let batch = ${lt("coords",0,y.rank)};
              let d2 = ${o?lt("coords",y.rank-1,y.rank):lt("coords",1,y.rank)};
              let xFRCCorner = vec3<u32>(${o?lt("coords",1,y.rank):lt("coords",2,y.rank)},
              ${o?lt("coords",2,y.rank):lt("coords",3,y.rank)},
              ${o?lt("coords",3,y.rank):lt("coords",4,y.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?lt("uniforms.x_shape",1,y.rank):lt("uniforms.x_shape",2,y.rank)};
              let xShapeZ = ${o?lt("uniforms.x_shape",2,y.rank):lt("uniforms.x_shape",3,y.rank)};
              let xShapeW = ${o?lt("uniforms.x_shape",3,y.rank):lt("uniforms.x_shape",4,y.rank)};
              let xShapeU = ${o?lt("uniforms.x_shape",4,y.rank):lt("uniforms.x_shape",1,y.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${f?"value = value + getBiasByOutputCoords(coords)":""};
              ${L}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${o};${p};${f}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:c[0],y:c[1],z:c[2]},programUniforms:u}),getShaderSource:b}}}),Xy,Yy,Gx=Ve(()=>{wt(),Pt(),Ct(),Nn(),Xy=(e,r,t,s)=>{let i=e.length>2,n=i?"value += b[output_channel];":"",o=e[0].dims,a=e[1].dims,l=r.format==="NHWC",c=l?t[3]:t[1],p=c/r.group,d=l&&p>=4?cr(c):1,u=ve.size(t)/d,_=[{type:12,data:u},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:p}];Bn(r,_),_.push(...ct(o,[a[0],a[1],a[2],a[3]/d]));let f=i?["rank","rank","rank"]:["rank","rank"];_.push(...ct([t[0],t[1],t[2],t[3]/d]));let b=A=>{let g=at("output",e[0].dataType,t.length,d),w=Dr(g.type.tensor),$=zn(r,g.type.value,w),y=Ae("x",e[0].dataType,o.length),v=Ae("w",e[1].dataType,a.length,d),T=[y,v];i&&T.push(Ae("b",e[2].dataType,e[2].dims,d));let x=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Rn(r,x);let P=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${y.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${v.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${y.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${v.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${A.registerUniforms(x).declareVariables(...T,g)}

  ${A.mainStart()}
    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${g.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${d} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${g.type.value} = ${g.type.value}(0);
    ${P}
    ${n}
    ${$}
    ${g.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${d}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:_}),getShaderSource:b}},Yy=(e,r,t,s)=>{let i=e.length>2,n=cr(t[3]),o=cr(t[2]),a=ve.size(t)/n/o,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/n],c=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/n],p=[t[0],t[1],t[2],t[3]/n],d=[{type:12,data:a},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];Bn(r,d),d.push(...ct(l,c,p));let u=(o-1)*r.strides[1]+c[1],_=f=>{let b=at("output",e[0].dataType,p.length,n),A=Dr(b.type.tensor),g=zn(r,b.type.value,A),w=Ae("x",e[0].dataType,l.length,n),$=Ae("w",e[1].dataType,c.length,n),y=[w,$];i&&y.push(Ae("b",e[2].dataType,e[2].dims,n));let v=i?"value += b[output_channel];":"",T=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Rn(r,T),`
  ${f.registerUniforms(T).declareVariables(...y,b)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${w.type.value}, ${u}>;
    var values: array<${b.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${c[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${u}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${w.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${w.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${c[1]}; w_width++) {
          let w_val = ${$.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${v}
      ${g}
      ${b.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${n};${o};${u};${c[0]};${c[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:_}}}),Fg,ia,Dg,oa,su,_c,Og,Lg,nu,Kx=Ve(()=>{Pt(),Ux(),Wx(),Fu(),Gx(),Nn(),Iu(),un(),Fg=(e,r,t,s,i,n)=>{let o=e[0],a=e.slice(n?1:2,n?3:4),l=a.length,c=r[0],p=r.slice(2).map((u,_)=>u+(u-1)*(t[_]-1)),d=a.map((u,_)=>u+s[_]+s[_+l]).map((u,_)=>Math.floor((u-p[_]+i[_])/i[_]));return d.splice(0,0,o),d.splice(n?3:1,0,c),d},ia=[2,3,1,0],Dg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(r.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(r.strides.length!==i)throw new Error(`strides should be ${i}D`);if(r.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},oa=(e,r)=>{let t=e.kernelShape.slice();t.length<r[1].dims.length-2&&t.push(...Array(r[1].dims.length-2-t.length).fill(0));for(let n=2;n<r[1].dims.length;++n)t[n-2]===0&&(t[n-2]=r[1].dims[n]);let s=e.pads.slice();wa.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:t,pads:s}),i},su=e=>{let r=Su(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,n=e.group,o=e.kernel_shape,a=e.pads,l=e.strides,c=e.w_is_const();return{autoPad:s,format:t,dilations:i,group:n,kernelShape:o,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},_c=(e,r,t,s)=>{let i=t.format==="NHWC",n=Fg(r[0].dims,r[1].dims,t.dilations,t.pads,t.strides,i);if(t.group!==1){let T=[r[0]];if(i){let x=e.kernelCustomData.wT??e.compute(os(r[1],ia),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=x),T.push(x)}else T.push(r[1]);r.length===3&&T.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&i&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(Yy(T,t,n,s),{inputs:T}):e.compute(Xy(T,t,n,s),{inputs:T});return}let o=r.length===3,a=r[0].dims[i?1:2],l=r[0].dims[i?2:3],c=r[0].dims[i?3:1],p=r[1].dims[2],d=r[1].dims[3],u=n[i?1:2],_=n[i?2:3],f=n[i?3:1],b=i&&p===a&&d===l&&t.pads[0]===0&&t.pads[1]===0;if(b||p===1&&d===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let T=n[0],x,P,D,L=[];if(i){let R=e.kernelCustomData.wT??e.compute(os(r[1],ia),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=R),b){let te=a*l*c;x=r[0].reshape([1,T,te]),P=R.reshape([1,te,f]),D=[1,T,f]}else x=r[0].reshape([T,a*l,c]),P=R.reshape([1,c,f]),D=[T,u*_,f];L.push(x),L.push(P)}else x=r[0].reshape([T,c,a*l]),P=r[1].reshape([1,f,c]),D=[T,f,u*_],L.push(P),L.push(x);o&&L.push(r[2]);let G=D[2],K=L[0].dims[L[0].dims.length-1];G<8&&K<8?e.compute(ku(L,t,n,D,i,s),{inputs:L}):e.compute(Ma(L,t,n,D,i,s),{inputs:L});return}let A=!0,g=e.kernelCustomData.wT??e.compute(os(r[1],ia),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=g);let w=[r[0],g];o&&w.push(r[2]);let $=i?u*_:f,y=i?f:u*_,v=p*d*c;e.compute(Hy(w,t,n,$,y,v,o,A,s),{inputs:w})},Og=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let i=[0,r.pads[0],0,r.pads[1]],n=[1].concat(r.strides),o=[1].concat(r.dilations),a=[1].concat(r.kernelShape),l=oa({...r,pads:i,strides:n,dilations:o,kernelShape:a},s);_c(e,s,l,c=>t?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},Lg=(e,r,t)=>{let s=t.format==="NHWC"?"channelsLast":"channelsFirst",i=oa(t,r),n=t.autoPad==="NOTSET"?t.pads:t.autoPad,o=qy(r[0].dims,r[1].dims,t.strides,t.dilations,n,!1,s);e.compute(Qy(r,i,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],s))},nu=(e,r)=>{if(Dg(e.inputs,r),e.inputs[0].dims.length===3)Og(e,r);else if(e.inputs[0].dims.length===5)Lg(e,e.inputs,r);else{let t=oa(r,e.inputs);_c(e,e.inputs,t)}}}),Jy,Hx=Ve(()=>{wt(),Ks(),Pt(),Ct(),Jy=(e,r,t)=>{let s=e.length>2,i=r.outputShape,n=r.format==="NHWC",o=r.group,a=e[1].dims,l=a[2]/o,c=a[3],p=n?cr(l):1,d=n&&c===1&&l>=4,u=d?Math.floor(l/4)*4:Math.floor(l/p)*p,_=l-u,f=n?cr(c):1,b=n?c===1?p:f:1,A=ve.size(i)/f,g=[Math.ceil(A/64),1,1];zt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${g}`);let w=["rank","rank"],$=[r.strides[0],r.strides[1]],y=[r.kernelShape[n?1:2],r.kernelShape[n?2:3]],v=[r.dilations[0],r.dilations[1]],T=[y[0]+(r.dilations[0]<=1?0:(r.kernelShape[n?1:2]-1)*(r.dilations[0]-1)),y[1]+(r.dilations[1]<=1?0:(r.kernelShape[n?2:3]-1)*(r.dilations[1]-1))],x=[T[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),T[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],P=[{type:12,data:A},{type:12,data:$},{type:12,data:y},{type:12,data:v},{type:12,data:T},{type:6,data:x},{type:12,data:u},{type:12,data:l},{type:12,data:c},...ct(e[0].dims,e[1].dims)];s&&(P.push(...ct(e[2].dims)),w.push("rank")),P.push(...ct(i));let D=L=>{let G=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:$.length},{name:"filter_dims",type:"u32",length:y.length},{name:"dilations",type:"u32",length:y.length},{name:"effective_filter_dims",type:"u32",length:T.length},{name:"pads",type:"i32",length:x.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],K=Dr(e[0].dataType),R=n?1:2,te=n?2:3,H=n?3:1,ee=Ae("W",e[1].dataType,e[1].dims.length,b),Z=Ae("Dy",e[0].dataType,e[0].dims.length,p),ne=[Z,ee];s&&ne.push(Ae("bias",e[2].dataType,[i[H]].length,f));let me=at("result",e[0].dataType,i.length,f),ue=()=>{let U="";if(d)p===4?U+=`
        let xValue = ${Z.getByOffset("x_offset")};
        let wValue = ${ee.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:p===2?U+=`
          dotProd = dotProd + dot(vec4<${K}>(${Z.getByOffset("x_offset")}, ${Z.getByOffset("x_offset + 1u")}), vec4<${K}>(${ee.getByOffset("w_offset")}, ${ee.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:p===1&&(U+=`
          dotProd = dotProd + dot(vec4<${K}>(${Z.getByOffset("x_offset")}, ${Z.getByOffset("x_offset + 1u")}, ${Z.getByOffset("x_offset + 2u")}, ${Z.getByOffset("x_offset + 3u")}), vec4<${K}>(${ee.getByOffset("w_offset")}, ${ee.getByOffset("w_offset + 1u")}, ${ee.getByOffset("w_offset + 2u")}, ${ee.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(U+=`
                  let xValue = ${n?Z.getByOffset(`${Z.indicesToOffset(`${Z.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p}`):Z.get("batch","inputChannel","idyR","idyC")};
        `,p===1)U+=`
          let w_offset = ${ee.indicesToOffset(`${ee.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${ee.getByOffset(`w_offset / ${b}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let se=0;se<p;se++)U+=`
            let wValue${se} = ${ee.getByOffset(`${ee.indicesToOffset(`${ee.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${se}, wOutChannel)`)} / ${b}`)};
            dotProd = dotProd + xValue[${se}] * wValue${se};`;return U},j=()=>{if(_===0)return"";if(!d)throw new Error(`packInputAs4 ${d} is not true.`);let U="";if(p===1){U+="dotProd = dotProd";for(let se=0;se<_;se++)U+=`
            + ${Z.getByOffset(`x_offset + ${se}`)} * ${ee.getByOffset(`w_offset + ${se}`)}`;U+=";"}else if(p===2){if(_!==2)throw new Error(`Invalid inputChannelsRemainder ${_}.`);U+=`
          let xValue = ${Z.getByOffset("x_offset")};
          let wValue = ${ee.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return U},F=`
            let outputIndices = ${me.offsetToIndices(`global_idx * ${f}`)};
            let batch = ${me.indicesGet("outputIndices",0)};
            let d1 = ${me.indicesGet("outputIndices",H)};
            let r = ${me.indicesGet("outputIndices",R)};
            let c = ${me.indicesGet("outputIndices",te)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${me.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${K}(dyRCorner) + ${K}(wR)) / ${K}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${K}(uniforms.Dy_shape[${R}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${K}(dyCCorner) + ${K}(wC)) / ${K}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${K}(uniforms.Dy_shape[${te}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${d?`
                var x_offset = ${Z.indicesToOffset(`${Z.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p};
                var w_offset = ${ee.indicesToOffset(`${ee.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${b};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${d?4:p}) {
                  ${ue()}
                  inputChannel = inputChannel + ${d?4:p};
                }
                ${j()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${f}]`:""};
            ${me.setByOffset("global_idx","value")};
          `;return`
    ${L.registerUniforms(G).declareVariables(...ne,me)}
      ${L.mainStart()}
      ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${F}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${p}${b}${f}${d}${_}`,inputDependencies:w},getRunData:()=>({dispatchGroup:{x:g[0],y:g[1],z:g[2]},outputs:[{dims:t?t(i):i,dataType:e[0].dataType}],programUniforms:P}),getShaderSource:D}}}),zg,Bg,Rg,gc,Zy,jg,wc,Ng,e0,qx=Ve(()=>{Hx(),Nn(),un(),zg=(e,r,t,s,i,n)=>(e-1)*r+t+(s-1)*i+1-n,Bg=(e,r,t,s,i)=>{let n=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=n,t[i]=e-n):r==="SAME_LOWER"&&(t[s]=e-n,t[i]=n)},Rg=(e,r,t,s,i,n,o,a,l,c)=>{let p=e.length-2,d=c.length===0;l.length<p&&l.push(...Array(p-l.length).fill(0));let u=e[0],_=r[a?3:1]*i;for(let f=0,b=e.length-p-(a?1:0);f<p;++f,++b){let A=e[b],g=d?A*o[f]:c[f],w=zg(A,o[f],n[f],r[b],t[f],g);Bg(w,s,n,f,f+p),d&&c.push(o[f]*(A-1)+l[f]+(r[b]-1)*t[f]+1-n[f]-n[f+p])}c.splice(0,0,u),c.splice(a?3:1,0,_)},gc=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((d,u)=>d*u,1)===0){t.length=0;for(let d=2;d<r[1].dims.length;++d)t.push(r[1].dims[d])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let i=e.pads.slice(),n=e.outputShape.slice(),o=e.outputPadding.slice(),a=r[0].dims,l=e.dilations.slice();if(l.reduce((d,u)=>d+u,0)===0){let d=r[0].dims.length-2;l=new Array(d).fill(1)}let c=e.strides.slice();if(c.reduce((d,u)=>d+u,0)===0){let d=r[0].dims.length-2;c=new Array(d).fill(1)}Rg(a,t,l,e.autoPad,e.group,i,c,s,o,n);let p=Object.assign({},e);return Object.assign(p,{kernelShape:t,pads:i,outputPadding:o,outputShape:n,dilations:l,strides:c}),p},Zy=e=>{let r=Su(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,n=e.group,o=e.kernelShape,a=e.pads,l=e.strides,c=e.wIsConst(),p=e.outputPadding,d=e.outputShape;return{autoPad:s,format:t,dilations:i,group:n,kernelShape:o,outputPadding:p,outputShape:d,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},jg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let n=e[0].dims.length-2;if(r.dilations.reduce((o,a)=>o+a,0)>0&&r.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(r.strides.reduce((o,a)=>o+a,0)>0&&r.strides.length!==n)throw new Error(`strides should be ${n}D`);if(r.pads.reduce((o,a)=>o+a,0)>0&&r.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(r.outputPadding.length!==n&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${n}D`);if(r.kernelShape.reduce((o,a)=>o+a,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},wc=(e,r,t,s)=>{let i=e.kernelCustomData.wT??e.compute(os(r[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=i);let n=[r[0],i];r.length===3&&n.push(r[2]),e.compute(Jy(n,t,s),{inputs:n})},Ng=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let i=r.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let n=r.dilations;(n.length===0||n[0]===0)&&(n=[1]);let o=r.strides;(o.length===0||o[0]===0)&&(o=[1]);let a=r.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],o=[1].concat(o),n=[1].concat(n),i=[1].concat(i);let l=r.outputPadding;l=[0].concat(l);let c=gc({...r,pads:a,strides:o,dilations:n,kernelShape:i,outputPadding:l},s);wc(e,s,c,p=>t?[p[0],p[2],p[3]]:[p[0],p[1],p[3]])},e0=(e,r)=>{if(jg(e.inputs,r),e.inputs[0].dims.length===3)Ng(e,r);else{let t=gc(r,e.inputs);wc(e,e.inputs,t)}}}),Vg,t0,r0,Qx=Ve(()=>{wt(),Pt(),pr(),Ct(),Vg=(e,r,t,s)=>{let i=ve.size(r),n=r.length,o=Ae("input",e,n),a=at("output",e,n),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),c=ve.normalizeAxis(l,n),p=d=>{let u=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,_=lt("uniforms.input_shape","uniforms.axis",n),f=s.reverse?u+(s.exclusive?" + 1":""):"0",b=s.reverse?_:u+(s.exclusive?"":" + 1");return`
                ${d.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,a)}
                ${d.mainStart()}
                  ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${f};
                  let last : i32 = ${b};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:c},...ct(r,r)]}),getShaderSource:p}},t0=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,i=e.inputs[1];e.compute(Vg(s,t,i,r),{inputs:[0]})},r0=e=>{let r=e.exclusive===1,t=e.reverse===1;return Wt({exclusive:r,reverse:t})}}),Ug,Wg,Gg,s0,n0,Xx=Ve(()=>{wt(),Pt(),pr(),Ct(),Ug=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Wg=(e,r,t,s)=>{let i=[];i.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let n=0;n<r;++n)i.push(t.indicesSet("a",e[n],`i[${n}]`));return i.push("return a;}"),i.join(`
`)},Gg=(e,r)=>{let t,s,i,n,o,a,l=r.format==="NHWC",c=r.blocksize,p=r.mode==="DCR";l?([t,s,i,n]=e.dims,o=p?[t,s,i,c,c,n/c**2]:[t,s,i,n/c**2,c,c],a=p?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,s,i,n]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=p?[t,c,c,n/c**2,s,i]:[t,n/c**2,c,c,s,i],a=p?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let d=e.reshape(o),u=d.dims.length,_=e.dataType,f=Ae("a",_,u),b=at("output",_,u),A=g=>`
  ${g.registerUniform("output_size","u32").declareVariables(f,b)}

  ${Wg(a,u,f,b)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${b.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${b.setByOffset("global_idx",f.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:g=>{let w=l?[t,s*c,i*c,n/c**2]:[t,n/c**2,s*c,i*c],$=ve.size(w),y=d.dims,v=ve.sortBasedOnPerm(y,a);return{outputs:[{dims:w,dataType:g[0].dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:[{type:12,data:$},...ct(y,v)]}},getShaderSource:A}},s0=(e,r)=>{Ug(e.inputs),e.compute(Gg(e.inputs[0],r))},n0=e=>Wt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),aa,Ui,bc,Kg,Hg,qg,Qg,Mc,Xg,i0,o0,Yx=Ve(()=>{wt(),Pt(),pr(),Ct(),aa="[a-zA-Z]|\\.\\.\\.",Ui="("+aa+")+",bc="^"+Ui+"$",Kg="("+Ui+",)*"+Ui,Hg="^"+Kg+"$",qg=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},Qg=class{constructor(e,r){var i;this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,s]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(Hg)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,o)=>{let a=e[o].dims.slice();if(!n.match(RegExp(bc)))throw new Error("Invalid LHS term");let l=this.processTerm(n,!0,a,o);this.lhs.push(l)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([n,o])=>o.count===1||n==="...").map(([n])=>n).join("");else if(!s.match(RegExp(Ui)))throw new Error("Invalid RHS");(i=s.match(RegExp(aa,"g")))==null||i.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let o=this.symbolToInfo.get(n);if(o===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(o.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,r,t){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(t)}else s={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,s)}processTerm(e,r,t,s=-1){let i=t.length,n=!1,o=[],a=0;if(!e.match(RegExp(bc))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(aa,"g")),c=new qg(s);return l==null||l.forEach((p,d)=>{if(p==="..."){if(n)throw new Error("Only one ellipsis is allowed per input term");n=!0;let u=i-l.length+1;if(u<0)throw new Error("Ellipsis out of bounds");if(o=t.slice(a,a+u),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let _=0;_<o.length;_++){let f=String.fromCharCode(48+_);c.addSymbol(f,d+_),this.addSymbol(f,t[a++],s)}}else c.addSymbol(p,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[a++],s)}),c}},Mc=e=>e+"_max",Xg=(e,r,t,s)=>{let i=e.map(c=>c.length).map((c,p)=>Ae(`input${p}`,r,c)),n=ve.size(s),o=at("output",r,s.length),a=[...t.symbolToInfo.keys()].filter(c=>!t.rhs.symbolToIndices.has(c)),l=c=>{let p=[],d="var prod = 1.0;",u="var sum = 0.0;",_="sum += prod;",f=[],b=[],A=[],g=[],w=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((y,v)=>{var T;if(t.rhs.symbolToIndices.has(v)){let x=(T=t.rhs.symbolToIndices.get(v))==null?void 0:T[0];x!==void 0&&t.lhs.forEach((P,D)=>{if(y.inputIndices.includes(D)){let L=P.symbolToIndices.get(v);if(L===void 0)throw new Error("Invalid symbol error");L.forEach(G=>{p.push(`${i[D].indicesSet(`input${D}Indices`,G,o.indicesGet("outputIndices",x))}`)})}})}else t.lhs.forEach((x,P)=>{if(y.inputIndices.includes(P)){let D=x.symbolToIndices.get(v);if(D===void 0)throw new Error("Invalid symbol error");D.forEach(L=>{f.push(`${i[P].indicesSet(`input${P}Indices`,L,`${v}`)}`)}),g.push(`prod *= ${i[P].getByIndices(`input${P}Indices`)};`)}}),b.push(`for(var ${v}: u32 = 0; ${v} < uniforms.${Mc(v)}; ${v}++) {`),A.push("}")});let $=w?[...p,`let sum = ${i.map((y,v)=>y.getByIndices(`input${v}Indices`)).join(" * ")};`]:[...p,u,...b,...f,d,...g,_,...A];return`
            ${c.registerUniforms(a.map(y=>({name:`${Mc(y)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,o)}

            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${i.map((y,v)=>`var input${v}Indices: ${i[v].type.indices};`).join(`
`)}
            ${$.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let c=a.filter(d=>t.symbolToInfo.has(d)).map(d=>{var u;return{type:12,data:((u=t.symbolToInfo.get(d))==null?void 0:u.dimValue)||0}});c.push({type:12,data:n});let p=e.map((d,u)=>[...ct(d)]).reduce((d,u)=>d.concat(u),c);return p.push(...ct(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:p}},getShaderSource:l}},i0=(e,r)=>{let t=new Qg(e.inputs,r.equation),s=t.outputDims,i=e.inputs.map((n,o)=>n.dims);e.compute(Xg(i,e.inputs[0].dataType,t,s))},o0=e=>{let r=e.equation.replace(/\s+/g,"");return Wt({equation:r})}}),Yg,yc,Jg,Zg,a0,Jx=Ve(()=>{wt(),Pt(),Ct(),Yg=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,i=r.length<t.length?0:r.length-t.length;for(;s<t.length&&i<r.length;++s,++i)if(t[s]!==r[i]&&t[s]!==1&&r[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},yc=(e,r)=>{let t=e.length-r.length,s=[];for(let i=0;i<t;++i)s.push(e[i]);for(let i=0;i<r.length;++i)s.push(r[i]===1?e[i+t]:r[i]);return s},Jg=(e,r)=>e.length>r.length?yc(e,r):yc(r,e),Zg=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=Jg(r,t),i=e[0].dataType,n=i===9||ve.size(r)===1,o=i===9||r.length>0&&r[r.length-1]%4===0?4:1,a=n||s.length>0&&s[s.length-1]%4===0?4:1,l=Math.ceil(ve.size(s)/a),c=d=>{let u=Ae("input",i,r.length,o),_=at("output",i,s.length,a),f;if(i===9){let b=(A,g,w="")=>`
          let outputIndices${g} = ${_.offsetToIndices(`outputOffset + ${g}u`)};
          let offset${g} = ${u.broadcastedIndicesToOffset(`outputIndices${g}`,_)};
          let index${g} = offset${g} / 4u;
          let component${g} = offset${g} % 4u;
          ${A}[${g}] = ${w}(${u.getByOffset(`index${g}`)}[component${g}]);
        `;f=`
        let outputOffset = global_idx * ${a};
        var data = vec4<u32>(0);
        ${b("data",0,"u32")}
        ${b("data",1,"u32")}
        ${b("data",2,"u32")}
        ${b("data",3,"u32")}
        ${_.setByOffset("global_idx","data")}
      }`}else f=`
        let outputIndices = ${_.offsetToIndices(`global_idx * ${a}`)};
        let inputOffset = ${u.broadcastedIndicesToOffset("outputIndices",_)};
        let data = ${_.type.value}(${u.getByOffset(`inputOffset / ${o}`)});
        ${_.setByOffset("global_idx","data")}
      }`;return`
    ${d.registerUniform("vec_size","u32").declareVariables(u,_)}
    ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${f}`},p=[{type:12,data:l},...ct(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${o}${a}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p})}},a0=e=>{Yg(e.inputs),e.compute(Zg(e.inputs),{inputs:[0]})}}),ew,l0,Zx=Ve(()=>{wt(),Pt(),Ct(),$u(),ew=e=>{let r=e[0].dataType,t=ve.size(e[0].dims),s=ve.size(e[1].dims),i=s%4===0,n=o=>{let a=Ae("x",r,[1],4),l=Ae("bias",r,[1],4),c=at("y",r,[1],4),p=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],d=_=>`
      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;
      let bias${_} = ${l.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,u=i?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${d(0)}${d(1)}${d(2)}${d(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(p).declareVariables(a,l,c)}

    ${Zc(qr(r))}

    ${o.mainStart(ci)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${u}
      let x_in = x + bias;
      ${c.setByOffset("global_idx",eu("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:n,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/ci/4)}})}},l0=e=>{e.inputs.length<2||ve.size(e.inputs[1].dims)===0?$y(e):e.compute(ew(e.inputs))}}),tw,rw,c0,u0,eT=Ve(()=>{wt(),Pt(),pr(),Ct(),tw=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},rw=(e,r)=>{let t=e[0].dims,s=e[1].dims,i=t.length,n=ve.normalizeAxis(r.axis,i),o=t.slice(0);o.splice(n,1,...s);let a=t[n],l=e[0].dataType===9?4:1,c=Math.ceil(ve.size(o)/l),p=[{type:12,data:c},{type:6,data:a},{type:12,data:n},...ct(e[0].dims,e[1].dims,o)],d=u=>{let _=Ae("data",e[0].dataType,e[0].dims.length,l),f=Ae("inputIndices",e[1].dataType,e[1].dims.length),b=at("output",e[0].dataType,o.length,l),A=w=>{let $=s.length,y=`var indicesIndices${w}  = ${f.type.indices}(0);`;for(let v=0;v<$;v++)y+=`${$>1?`indicesIndices${w}[${v}]`:`indicesIndices${w}`} = ${o.length>1?`outputIndices${w}[uniforms.axis + ${v}]`:`outputIndices${w}`};`;y+=`
          var idx${w} = ${f.getByIndices(`indicesIndices${w}`)};
          if (idx${w} < 0) {
            idx${w} = idx${w} + uniforms.axisDimLimit;
          }
          var dataIndices${w} : ${_.type.indices};
        `;for(let v=0,T=0;v<i;v++)v===n?(y+=`${i>1?`dataIndices${w}[${v}]`:`dataIndices${w}`} = u32(idx${w});`,T+=$):(y+=`${i>1?`dataIndices${w}[${v}]`:`dataIndices${w}`} = ${o.length>1?`outputIndices${w}[${T}]`:`outputIndices${w}`};`,T++);return y},g;if(e[0].dataType===9){let w=($,y,v="")=>`
          let outputIndices${y} = ${b.offsetToIndices(`outputOffset + ${y}u`)};
          ${A(y)};
          let offset${y} = ${_.indicesToOffset(`dataIndices${y}`)};
          let index${y} = offset${y} / 4u;
          let component${y} = offset${y} % 4u;
          ${$}[${y}] = ${v}(${_.getByOffset(`index${y}`)}[component${y}]);
        `;g=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${w("value",0,"u32")}
        ${w("value",1,"u32")}
        ${w("value",2,"u32")}
        ${w("value",3,"u32")}
        ${b.setByOffset("global_idx","value")}
      `}else g=`
      let outputIndices = ${b.offsetToIndices("global_idx")};
      ${A("")};
      let value = ${_.getByIndices("dataIndices")};
      ${b.setByOffset("global_idx","value")};
      `;return`
      ${u.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,f,b)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${g}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:d}},c0=e=>Wt({axis:e.axis}),u0=(e,r)=>{let t=e.inputs;tw(t),e.compute(rw(e.inputs,r))}}),sw,d0,p0,tT=Ve(()=>{wt(),Pt(),Ct(),sw=(e,r,t,s,i,n,o,a,l)=>{let c=[{type:12,data:n},{type:12,data:s},{type:12,data:i},{type:12,data:t},{type:12,data:o},{type:12,data:a},{type:12,data:l}],p=[n];c.push(...ct(r.dims,p));let d=u=>{let _=Ae("indices_data",r.dataType,r.dims.length),f=at("input_slice_offsets_data",12,1,1),b=[_,f],A=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:i.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${u.registerUniforms(A).declareVariables(...b)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${i.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${i.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:c}),getShaderSource:d},{inputs:[r],outputs:[-1]})[0]},d0=(e,r)=>{let t=e.inputs,s=t[0].dims,i=t[0].dataType,n=t[1].dims,o=n[n.length-1],a=ve.sizeToDimension(n,n.length-1),l=ve.sizeFromDimension(s,r.batchDims+o),c=ve.sizeToDimension(s,r.batchDims),p=ve.sizeFromDimension(s,r.batchDims),d=a/c,u=new Array(o),_=l;for(let y=0;y<o;++y)u[o-1-y]=_,_*=s[r.batchDims+o-1-y];let f=sw(e,t[1],u,r.batchDims,s,a,d,p,o),b=r.batchDims+o;if(b>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let A=n.slice(0,-1).concat(s.slice(b)),g=ve.size(A),w=[{type:12,data:g},{type:12,data:l},...ct(t[0].dims,f.dims,A)],$=y=>{let v=Ae("data",t[0].dataType,t[0].dims.length),T=Ae("slice_offsets",12,f.dims.length),x=at("output",t[0].dataType,A.length);return`
          ${y.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(v,T,x)}
            ${y.mainStart()}
            ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:A,dataType:i}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:w}),getShaderSource:$},{inputs:[t[0],f]})},p0=e=>({batchDims:e.batch_dims,cacheKey:""})}),nw,iw,h0,m0,rT=Ve(()=>{wt(),Pt(),pr(),Ct(),nw=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=ve.normalizeAxis(r.quantizeAxis,e[0].dims.length),s=r.blockSize,i=e[0],n=e[2],o=e.length===4?e[3]:void 0;if(n.dims.length!==i.dims.length||!i.dims.map((a,l)=>l===t?Math.ceil(a/s)===n.dims[l]:a===n.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==n.dims.length||!o.dims.map((a,l)=>a===n.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},iw=(e,r)=>{let t=e[0].dims,s=e[1].dims,i=t.length,n=ve.normalizeAxis(r.gatherAxis,i),o=ve.normalizeAxis(r.quantizeAxis,i),a=t.slice(0);a.splice(n,1,...s);let l=ve.size(a),c=e[2].dataType,p=e[0].dataType===22,d=[{type:12,data:l},{type:12,data:o},{type:12,data:n},{type:12,data:r.blockSize},...ct(...e.map((_,f)=>_.dims),a)],u=_=>{let f=Ae("data",e[0].dataType,e[0].dims.length),b=Ae("inputIndices",e[1].dataType,e[1].dims.length),A=Ae("scales",e[2].dataType,e[2].dims.length),g=e.length>3?Ae("zeroPoint",e[3].dataType,e[3].dims.length):void 0,w=at("output",c,a.length),$=[f,b,A];g&&$.push(g);let y=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${_.registerUniforms(y).declareVariables(...$,w)}
        ${_.mainStart()}
        let output_indices = ${w.offsetToIndices("global_idx")};
        var indices_indices = ${b.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${w.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${b.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${w.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${f.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${w.indicesGet("output_indices","i")};
          ${f.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${b.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[n]};
        }
        ${f.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${a.length}; i++) {
          let index = ${w.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${f.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${f.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${f.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${A.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${A.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${A.getByIndices("scale_indices")};
        ${g?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${g.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${g.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${qr(c)}(quantized_data - zero_point) * scale;
        ${w.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((_,f)=>f!==1).map(_=>_.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(_,f)=>"rank")},getRunData:()=>({outputs:[{dims:a,dataType:c}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:u}},h0=(e,r)=>{let t=e.inputs;nw(t,r),e.compute(iw(e.inputs,r))},m0=e=>Wt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),ow,aw,f0,_0,sT=Ve(()=>{wt(),Pt(),pr(),Ct(),ow=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},aw=(e,r)=>{let t=e[0].dims,s=e[0].dataType,i=t.length,n=e[1].dims,o=e[1].dataType,a=ve.normalizeAxis(r.axis,i),l=t[a],c=n.slice(0),p=ve.size(c),d=Ae("input",s,i),u=Ae("indicesInput",o,n.length),_=at("output",s,c.length),f=[{type:12,data:p},{type:6,data:l},{type:12,data:a}];return f.push(...ct(t,n,c)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:f}),getShaderSource:b=>`
      ${b.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(d,u,_)}
      ${b.mainStart()}
      ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${_.offsetToIndices("global_idx")};

      var idx = ${u.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${d.type.indices}(outputIndices);
      ${d.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${d.getByIndices("inputIndices")};

      ${_.setByOffset("global_idx","value")};
  }`}},f0=e=>Wt({axis:e.axis}),_0=(e,r)=>{let t=e.inputs;ow(t),e.compute(aw(e.inputs,r))}}),lw,cw,g0,w0,nT=Ve(()=>{wt(),Pt(),Ct(),lw=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},cw=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[i,n,o]=fM.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),a=[i,n];if(!a)throw new Error("Can't use gemm on the given tensors");let l=16,c=Math.ceil(n/l),p=Math.ceil(i/l),d=!0,u=ve.size(a),_=[{type:12,data:d?c:u},{type:12,data:i},{type:12,data:n},{type:12,data:o},{type:1,data:r.alpha},{type:1,data:r.beta}],f=["type","type"];e.length===3&&(_.push(...ct(e[2].dims)),f.push("rank")),_.push(...ct(a));let b=g=>{let w="";r.transA&&r.transB?w="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?w="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?w="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(w="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let $=r.alpha===1?"":"value *= uniforms.alpha;",y=Ae("a",e[0].dataType,e[0].dims),v=Ae("b",e[1].dataType,e[1].dims),T=y.type.value,x=null,P=[y,v];e.length===3&&(x=Ae("c",e[2].dataType,e[2].dims.length),P.push(x));let D=at("output",e[0].dataType,a.length);P.push(D);let L=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${g.registerUniforms(L).declareVariables(...P)}

  ${g.mainStart()}
    ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${T}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${w}
    }

    ${$}
    ${x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",D)}; value += ${T}(uniforms.beta) * ${x.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},A=g=>{let w=Ae("a",e[0].dataType,e[0].dims),$=Ae("b",e[1].dataType,e[1].dims),y=null,v=[w,$];e.length===3&&(y=Ae("c",e[2].dataType,e[2].dims.length),v.push(y));let T=at("output",e[0].dataType,a.length);v.push(T);let x=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],P="",D="";r.transA&&r.transB?(D=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${w.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(D=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${w.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,P="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(D=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${w.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!r.transA&&!r.transB&&(D=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${w.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,P="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let L=r.alpha===1?"":"value *= uniforms.alpha;";return`
  ${g.registerUniforms(x).declareVariables(...v)}
  var<workgroup> tile_a: array<array<${w.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${$.type.storage}, ${l}>, ${l}>;
  ${g.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${T.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${D}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${P}
      }
      workgroupBarrier();
    }

    ${L}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${y!=null?`let cOffset = ${y.broadcastedIndicesToOffset("vec2(m, n)",T)}; value += ${T.type.value}(uniforms.beta) * ${y.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return d?{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:c*p},programUniforms:_}),getShaderSource:A}:{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:_}),getShaderSource:b}},g0=e=>{let r=e.transA,t=e.transB,s=e.alpha,i=e.beta;return{transA:r,transB:t,alpha:s,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},w0=(e,r)=>{lw(e.inputs),e.compute(cw(e.inputs,r))}}),Os,Vs,$n,Sn,uw,dw,pw,hw,mw,fw,_w,gw,b0,M0,iT=Ve(()=>{wt(),Pt(),pr(),Ct(),[Os,Vs,$n,Sn]=[0,1,2,3],uw=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},dw=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,pw=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,hw=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,mw=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,fw=(e,r,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${Os}] = batch;
     indices[${Vs}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${$n}] = u32(r);
            indices[${Sn}] = u32(c);
          } else {
            return ${r}(0);
          }
        `;case"border":return`
          indices[${$n}] = u32(clamp(r, 0, H - 1));
          indices[${Sn}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${$n}] = gs_reflect(r, border[1], border[3]);
          indices[${Sn}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,_w=(e,r,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Os}], indices[${Vs}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Os}], indices[${Vs}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Os}], indices[${Vs}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Os}], indices[${Vs}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Os}], indices[${Vs}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Os}], indices[${Vs}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,gw=(e,r)=>{let t=Ae("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],i=Ae("grid",e[1].dataType,s.length,2),n=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];r.format==="NHWC"&&(n=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Os,Vs,$n,Sn]=[0,3,1,2]);let o=at("output",e[0].dataType,n.length),a=t.type.value,l=ve.size(n),c=[{type:12,data:l},...ct(e[0].dims,s,n)],p=d=>`
  ${d.registerUniform("output_size","u32").declareVariables(t,i,o)}
  ${dw}
  ${pw(a)}
  ${hw(r)}
  ${mw(r)}
  ${fw(t,a,r)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${$n}]);
      let W_in = i32(uniforms.x_shape[${Sn}]);

      ${r.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${o.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Os}], indices[${$n}], indices[${Sn}]);
      let nxy = ${i.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${_w(o,a,r)}
  }`;return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:d=>{let u=ve.size(n);return{outputs:[{dims:n,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:c}},getShaderSource:p}},b0=(e,r)=>{uw(e.inputs),e.compute(gw(e.inputs,r))},M0=e=>Wt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Zr,ww,y0,vc,bw,Yi,v0,x0=Ve(()=>{wt(),Pt(),pr(),Tu(),Cu(),Ct(),un(),Zr=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,ww=(e,r)=>{let t=e[0],s=Zr(e,1),i=Zr(e,2),n=Zr(e,3),o=Zr(e,4),a=Zr(e,5),l=Zr(e,6),c=Zr(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=t.dims[0],d=t.dims[1],u=t.dims.length===3?t.dims[2]:r.numHeads*t.dims[4],_=d,f=0,b=0,A=Math.floor(u/r.numHeads);if(l&&c&&ve.size(l.dims)&&ve.size(c.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==p||l.dims[1]!==r.numHeads||l.dims[3]!==A)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==A)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==c.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],b=l.dims[2]}else if(l&&ve.size(l.dims)||c&&ve.size(c.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let g;if(s&&ve.size(s.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');g=2,_=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==A)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');g=5,_=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==A)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');g=0,_=s.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==r.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');g=3}if(n&&ve.size(n.dims)>0){if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let w=f+_,$=0;if(o&&ve.size(o.dims)>0){$=8;let x=o.dims;throw x.length===1?x[0]===p?$=1:x[0]===3*p+2&&($=3):x.length===2&&x[0]===p&&x[1]===w&&($=5),$===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let y=!1,v=u;if(i&&ve.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(_!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=i.dims[2]}else{if(_!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=i.dims[1]*i.dims[3],y=!0}}let T=!1;if(o&&ve.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(a&&ve.size(a.dims)>0){if(a.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(a.dims[0]!==p||a.dims[1]!==r.numHeads||a.dims[2]!==d||a.dims[3]!==w)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:d,pastSequenceLength:f,kvSequenceLength:_,totalSequenceLength:w,maxSequenceLength:b,inputHiddenSize:0,hiddenSize:u,vHiddenSize:v,headSize:A,vHeadSize:Math.floor(v/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:$,scale:r.scale,broadcastResPosBias:T,passPastInKv:y,qkvFormat:g}},y0=e=>Wt({...e}),vc=Wt({perm:[0,2,1,3]}),bw=(e,r,t,s,i,n,o)=>{let a=[s,i,n],l=ve.size(a),c=[{type:12,data:l},{type:12,data:o},{type:12,data:n}],p=d=>{let u=at("qkv_with_bias",r.dataType,a),_=Ae("qkv",r.dataType,a),f=Ae("bias",t.dataType,a),b=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${d.registerUniforms(b).declareVariables(_,f,u)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:p},{inputs:[r,t],outputs:[-1]})[0]},Yi=(e,r,t,s,i,n,o,a)=>{let l=n;if(o&&ve.size(o.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=bw(e,n,o,r,s,t*i,a),l=l.reshape([r,s,t,i]),t===1||s===1?l:e.compute(os(l,vc.perm),{inputs:[l],outputs:[-1]})[0]}else return n.dims.length===3&&(l=n.reshape([r,s,t,i])),t===1||s===1?l:e.compute(os(l,vc.perm),{inputs:[l],outputs:[-1]})[0]},v0=(e,r)=>{let t=ww(e.inputs,r),s=e.inputs[0],i=Zr(e.inputs,1),n=Zr(e.inputs,2),o=Zr(e.inputs,3),a=Zr(e.inputs,4),l=Zr(e.inputs,5),c=Zr(e.inputs,6),p=Zr(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if((i==null?void 0:i.dims.length)===5)throw new Error("Packed KV is not implemented");let d=i&&n&&i.dims.length===4&&n.dims.length===4,u=Yi(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s,o,0);if(d)return to(e,u,i,n,a,void 0,c,p,l,t);if(!i||!n)throw new Error("key and value must be provided");let _=Yi(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,i,o,t.hiddenSize),f=Yi(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,n,o,2*t.hiddenSize);to(e,u,_,f,a,void 0,c,p,l,t)}}),Mw,yw,vw,xw,iu,T0,E0,P0=Ve(()=>{wt(),Pt(),pr(),Ct(),Mw=e=>{if(!e||e.length<1)throw new Error("too few inputs")},yw=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>t.push(Number(i))),s=t.length),Wt({numOutputs:s,axis:r.axis,splitSizes:t})},vw=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${lt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,xw=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let i=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(i):s===0?t.push(`if (output_number == ${s}u) { ${i} }`):s===r-1?t.push(`else { ${i} }`):t.push(`else if (output_number == ${s}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},iu=(e,r)=>{let t=e[0].dims,s=ve.size(t),i=e[0].dataType,n=ve.normalizeAxis(r.axis,t.length),o=new Array(r.numOutputs),a=Ae("input",i,t.length),l=new Array(r.numOutputs),c=[],p=[],d=0,u=[{type:12,data:s}];for(let f=0;f<r.numOutputs;f++){d+=r.splitSizes[f],l[f]=d;let b=t.slice();b[n]=r.splitSizes[f],p.push(b),o[f]=at(`output${f}`,i,b.length),c.push({dims:p[f],dataType:e[0].dataType})}u.push({type:12,data:l},...ct(t,...p));let _=f=>`
  ${f.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(a,...o)}
  ${vw(l.length)}
  ${xw(o)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",n)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${lt("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${a.indicesSet("indices",n,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},T0=(e,r)=>{Mw(e.inputs);let t=e.inputs.length===1?r:yw(e.inputs,r);e.compute(iu(e.inputs,t),{inputs:[0]})},E0=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Wt({axis:r,numOutputs:s,splitSizes:t})}}),Tw,ya,C0,$0=Ve(()=>{wt(),Pt(),pr(),Ct(),Tw=(e,r)=>{let[t,s,i,n]=e,{numHeads:o,rotaryEmbeddingDim:a}=r;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!ve.areEqual(s.dims,[])&&!ve.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(!ve.areEqual(i.dims,n.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],c=t.dims[t.dims.length-2],p=i.dims[0],d=ve.sizeFromDimension(t.dims,1)/c,u=a===0?i.dims[1]*2:d/o;if(a>u)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(l!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(c!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(u/2!==i.dims[1]&&a/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(c>p)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},ya=(e,r)=>{let{interleaved:t,numHeads:s,rotaryEmbeddingDim:i,scale:n}=r,o=e[0].dims[0],a=ve.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],c=a/l,p=e[2].dims[1],d=i===0?p*2:c/s,u=new Array(o,l,c/d,d-p),_=ve.computeStrides(u),f=[{type:1,data:n},{type:12,data:u},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[a,c,d,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[a,d,l*d,1]}):[],...ct(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],b=A=>{let g=Ae("input",e[0].dataType,e[0].dims.length),w=Ae("position_ids",e[1].dataType,e[1].dims.length),$=Ae("cos_cache",e[2].dataType,e[2].dims.length),y=Ae("sin_cache",e[3].dataType,e[3].dims.length),v=at("output",e[0].dataType,e[0].dims.length);return A.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:u.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`
        ${A.declareVariables(g,w,$,y,v)}

        ${A.mainStart(ci)}
          let half_rotary_emb_dim = uniforms.${$.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${A.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${w.broadcastedIndicesToOffset("bsnh.xy",at("",w.type.tensor,2))};
            let position_id =
                u32(${w.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${g.getByOffset("i")} * ${$.get("position_id","bsnh[3]")} -
                ${g.getByOffset("j")} * ${y.get("position_id","bsnh[3]")};
            ${v.setByOffset("i","re")}
            let im = ${g.getByOffset("i")} * ${y.get("position_id","bsnh[3]")} +
                ${g.getByOffset("j")} * ${$.get("position_id","bsnh[3]")};
            ${v.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${v.setByOffset("k",g.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Wt({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:b,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ve.size(u)/ci)},programUniforms:f})}},C0=(e,r)=>{Tw(e.inputs,r),e.compute(ya(e.inputs,r))}}),Ew,Pw,xc,Cw,S0,oT=Ve(()=>{pr(),wt(),Cu(),x0(),P0(),un(),$0(),Ct(),Ew=(e,r)=>{if(r.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],s=e[1],i=e[2],n=e[3],o=e[4];if(r.doRotary!==0&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(r.localWindowSize!==-1)throw new Error("Local attention is not supported");if(r.softcap!==0)throw new Error("Softcap is not supported");if(r.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let a=!1,l=t.dims[0],c=t.dims[1],p=t.dims.length===3?a?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],d=c,u=0,_=!s||s.dims.length===0,f=Math.floor(_?p/(r.numHeads+2*r.kvNumHeads):p/r.numHeads);_&&(p=f*r.numHeads);let b=n&&n.dims.length!==0,A=o&&o.dims.length!==0;if(b&&n.dims.length===4&&n.dims[0]===l&&n.dims[1]!==r.kvNumHeads&&n.dims[2]===r.kvNumHeads&&n.dims[3]===f)throw new Error("BSNH pastKey/pastValue is not supported");if(b&&A){if(n.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');u=n.dims[2]}else if(b||A)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let g=1;if(s&&s.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(t.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');d=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==f)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');d=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==f)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');g=3}let w=0,$=!1,y=r.kvNumHeads?f*r.kvNumHeads:p;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(d!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');y=i.dims[2]}else{if(d!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');y=i.dims[1]*i.dims[3],$=!0}}let v=e.length>4?e[5]:void 0;if(v&&v.dims.length!==1&&v.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:c,pastSequenceLength:u,kvSequenceLength:d,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:p,vHiddenSize:y,headSize:f,vHeadSize:Math.floor(y/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:w,scale:r.scale,broadcastResPosBias:!1,passPastInKv:$,qkvFormat:g}},Pw=Wt({perm:[0,2,1,3]}),xc=(e,r,t)=>{let s=r,i=t.kvNumHeads;return r.dims.length===3&&t.kvSequenceLength!==0&&(s=r.reshape([t.batchSize,t.kvSequenceLength,i,t.headSize]),s=e.compute(os(s,Pw.perm),{inputs:[s],outputs:[-1]})[0]),s},Cw=(e,r,t,s)=>{let i=7,n=["type","type"],o=[e*r],a=e*r,l=[{type:12,data:a},{type:12,data:r},{type:12,data:e}],c=p=>{let d=Ae("seq_lens",t.dataType,t.dims),u=Ae("total_seq_lens",s.dataType,s.dims),_=at("pos_ids",i,o),f=[{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}];return`
  ${p.registerUniforms(f).declareVariables(d,u,_)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${u.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${d.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${_.setByOffset("global_idx","seqlen")}
    };
  }
  `};return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${r}`,inputDependencies:n},getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:l}),getShaderSource:c}},S0=(e,r)=>{var y;let t=Ew(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((y=e.inputs[1])==null?void 0:y.dims.length)===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,n=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,o=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,a=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,c=e.inputs.length>5?e.inputs[6]:void 0,p=t.kvNumHeads?t.kvNumHeads:t.numHeads,d=Wt({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,p*t.headSize,p*t.headSize]}),[u,_,f]=!i&&!n?e.compute(iu([s],d),{inputs:[s],outputs:[-1,-1,-1]}):[s,i,n],b,A;if(r.doRotary){let v=e.compute(Cw(t.batchSize,t.sequenceLength,l,c),{inputs:[l,c],outputs:[-1]})[0],T=e.inputs[7],x=e.inputs[8],P=Wt({interleaved:r.rotaryInterleaved!==0,numHeads:t.numHeads,rotaryEmbeddingDim:0,scale:r.scale}),D=[u,v,T,x],L=[-1];b=e.compute(ya(D,P),{inputs:D,outputs:L})[0],D.splice(0,1,_);let G=Wt({interleaved:r.rotaryInterleaved!==0,numHeads:t.kvNumHeads,rotaryEmbeddingDim:0,scale:r.scale});A=e.compute(ya(D,G),{inputs:D,outputs:L})[0]}let g=Yi(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,r.doRotary?b:u,void 0,0),w=xc(e,r.doRotary?A:_,t),$=xc(e,f,t);to(e,g,w,$,void 0,void 0,o,a,void 0,t,l,c)}}),Tc,$w,Sw,A0,aT=Ve(()=>{wt(),Pt(),un(),Ct(),Tc=(e,r,t,s,i,n,o,a)=>{let l=cr(n),c=l===1?"f32":`vec${l}f`,p=l===1?"vec2f":`mat2x${l}f`,d=i*o,u=64;d===1&&(u=256);let _=[i,o,n/l],f=[i,o,2],b=["rank","type","type"],A=[];A.push(...ct(_,f));let g=w=>{let $=Ae("x",r.dataType,3,l),y=Ae("scale",t.dataType,t.dims),v=Ae("bias",s.dataType,s.dims),T=at("output",1,3,2),x=[$,y,v,T];return`
  var<workgroup> workgroup_shared : array<${p}, ${u}>;
  const workgroup_size = ${u}u;
  ${w.declareVariables(...x)}
  ${w.mainStart(u)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${c}(0);
    var squared_sum = ${c}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${c}(${$.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${p}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${cn("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${cn("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${a}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${a};${u}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:d},programUniforms:A}),getShaderSource:g},{inputs:[r,t,s],outputs:[-1]})[0]},$w=(e,r,t)=>{let s=r[0].dims,i=s,n=2,o=s[0],a=s[1],l=ve.sizeFromDimension(s,n),c=cr(l),p=ve.size(i)/c,d=Tc(e,r[0],r[1],r[2],o,l,a,t.epsilon),u=[o,a,l/c],_=[o,a],f=["type","none"],b=A=>{let g=Ae("x",r[0].dataType,u.length,c),w=Ae("scale_shift",1,_.length,2),$=at("output",r[0].dataType,u.length,c),y=[g,w,$];return`
  ${A.registerUniform("output_size","u32").declareVariables(...y)}
  ${A.mainStart()}
  ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${$.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${w.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${g.getByOffset("global_idx")} * ${$.type.value}(scale_shift.x) + ${$.type.value}(scale_shift.y);
      ${$.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${c}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...ct(u,_,u)]}),getShaderSource:b},{inputs:[r[0],d]})},Sw=(e,r,t)=>{let s=r[0].dims,i=s,n=s[0],o=s[s.length-1],a=ve.sizeFromDimension(s,1)/o,l=cr(o),c=ve.size(i)/l,p=[{type:12,data:a},{type:12,data:Math.floor(o/l)}],d=["type","type"],u=!1,_=[0,s.length-1];for(let g=0;g<s.length-2;g++)u=u||s[g+1]!==1,_.push(g+1);u=u&&s[s.length-1]!==1;let f=u?e.compute(os(e.inputs[0],_),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(g,w)=>s[_[w]])),b=Tc(e,f,r[1],r[2],n,a,o,t.epsilon),A=g=>{let w=Dr(r[0].dataType),$=l===1?"vec2f":`mat${l}x2f`,y=x=>{let P=x===0?"x":"y",D=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${w}(${D}(scale.${P}))`;case 2:return`vec2<${w}>(${D}(scale[0].${P}, scale[1].${P}))`;case 4:return`vec4<${w}>(${D}(scale[0].${P}, scale[1].${P}, scale[2].${P}, scale[3].${P}))`;default:throw new Error(`Not supported compoents ${l}`)}},v=Ae("input",r[0].dataType,r[0].dims,l),T=at("output",r[0].dataType,i,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${v.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${$}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${T.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${g.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${y(0)}, ${y(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:i,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:A},{inputs:[r[0],b]})},A0=(e,r)=>{r.format==="NHWC"?Sw(e,e.inputs,r):$w(e,e.inputs,r)}}),Aw,kw,k0,lT=Ve(()=>{wt(),Pt(),Ct(),Aw=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},kw=(e,r,t)=>{let s=r.simplified,i=e[0].dims,n=e[1],o=!s&&e[2],a=i,l=ve.normalizeAxis(r.axis,i.length),c=ve.sizeToDimension(i,l),p=ve.sizeFromDimension(i,l),d=ve.size(n.dims),u=o?ve.size(o.dims):0;if(d!==p||o&&u!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${u}`);let _=[];for(let v=0;v<i.length;++v)v<l?_.push(i[v]):_.push(1);let f=cr(p),b=["type","type"],A=[{type:12,data:c},{type:1,data:p},{type:12,data:Math.floor(p/f)},{type:1,data:r.epsilon}];o&&b.push("type");let g=t>1,w=t>2,$=v=>{let T=Dr(e[0].dataType),x=[Ae("x",e[0].dataType,e[0].dims,f),Ae("scale",n.dataType,n.dims,f)];o&&x.push(Ae("bias",o.dataType,o.dims,f)),x.push(at("output",e[0].dataType,a,f)),g&&x.push(at("mean_data_output",1,_)),w&&x.push(at("inv_std_output",1,_));let P=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${v.registerUniforms(P).declareVariables(...x)}
  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Xc("f32",f)};
    var mean_square_vector = ${Xc("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${ai(T,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${cn("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${cn("mean_square_vector",f)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${ai(T,f,"x[j + offset]")};
      let f32scale = ${ai(T,f,"scale[j]")};
      output[j + offset] = ${x[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${ai(T,f,"bias[j]")}`:""}
      );
    }

    ${g?"mean_data_output[global_idx] = mean":""};
    ${w?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},y=[{dims:a,dataType:e[0].dataType}];return g&&y.push({dims:_,dataType:1}),w&&y.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${t};${s}`,inputDependencies:b},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:A}),getShaderSource:$}},k0=(e,r)=>{Aw(e.inputs),e.compute(kw(e.inputs,r,e.outputCount))}}),Iw,I0,cT=Ve(()=>{Pt(),Iu(),Fu(),Iw=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},I0=e=>{Iw(e.inputs);let r=li.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&s<8)e.compute(ku(e.inputs,{activation:""},r));else{let i=r[r.length-2],n=ve.size(e.inputs[0].dims.slice(0,-2)),o=ve.size(e.inputs[1].dims.slice(0,-2));if(n!==1&&i===1&&o===1){let a=e.inputs[0].reshape([1,n,s]),l=e.inputs[1].reshape([1,s,t]),c=[1,n,t],p=[a,l];e.compute(Ma(p,{activation:""},r,c),{inputs:p})}else e.compute(Ma(e.inputs,{activation:""},r))}}}),Fw,Dw,Ow,F0,D0,uT=Ve(()=>{wt(),Pt(),pr(),Ct(),Fw=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((r.k+r.blockSize-1)/r.blockSize),n=r.blockSize/8*r.bits,o=e[1];if(!ve.areEqual(o.dims,[r.n,i,n]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(ve.size(a)!==r.n*i)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,c=r.bits>4?r.n*i:r.n*Math.floor((i+1)/2);if(ve.size(l)!==c)throw new Error("zeroPoints input size error.")}},Dw=(e,r)=>{let t=e[0].dims,s=t.length,i=t[s-2],n=r.k,o=r.n,a=t.slice(0,s-2),l=ve.size(a),c=e[1].dims[2]/4,p=e[0].dataType,d=cr(r.k),u=cr(c),_=cr(o),f=a.concat([i,o]),b=i>1&&o/_%2===0?2:1,A=ve.size(f)/_/b,g=64,w=[],$=[l,i,n/d],y=ve.convertShape(e[1].dims).slice();y.splice(-1,1,c/u),w.push(...ct($)),w.push(...ct(y)),w.push(...ct(e[2].dims)),e.length===4&&w.push(...ct(ve.convertShape(e[3].dims)));let v=[l,i,o/_];w.push(...ct(v));let T=x=>{let P=$.length,D=Ae("a",e[0].dataType,P,d),L=Ae("b",12,y.length,u),G=Ae("scales",e[2].dataType,e[2].dims.length),K=[D,L,G],R=e.length===4?Ae("zero_points",12,e[3].dims.length):void 0;R&&K.push(R);let te=v.length,H=at("output",e[0].dataType,te,_),ee=Dr(e[0].dataType),Z=(()=>{switch(d){case 1:return`array<${ee}, 8>`;case 2:return`mat4x2<${ee}>`;case 4:return`mat2x4<${ee}>`;default:throw new Error(`${d}-component is not supported.`)}})(),ne=()=>{let j=`
          // reuse a data
            var input_offset = ${D.indicesToOffset(`${D.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Z};
            for (var j: u32 = 0; j < ${8/d}; j++) {
              a_data[j] = ${D.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let F=0;F<_*b;F++)j+=`
            b_value = ${u===1?`b${F}_data`:`b${F}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Z}(${Array.from({length:4},(U,se)=>`${ee}(b_value_lower[${se}]), ${ee}(b_value_upper[${se}])`).join(", ")});
            b_dequantized_values = ${d===1?`${Z}(${Array.from({length:8},(U,se)=>`(b_quantized_values[${se}] - ${R?`zero_point${F}`:"zero_point"}) * scale${F}`).join(", ")});`:`(b_quantized_values - ${Z}(${Array(8).fill(`${R?`zero_point${F}`:"zero_point"}`).join(",")})) * scale${F};`};
            workgroup_shared[local_id.x * ${b} + ${Math.floor(F/_)}]${_>1?`[${F%_}]`:""} += ${Array.from({length:8/d},(U,se)=>`${d===1?`a_data[${se}] * b_dequantized_values[${se}]`:`dot(a_data[${se}], b_dequantized_values[${se}])`}`).join(" + ")};
          `;return j},me=()=>{let j=`
            var col_index = col * ${_};
            ${R?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${ee}(8);`}
            `;for(let F=0;F<_*b;F++)j+=`
            let scale${F} = ${G.getByOffset("col_index * nBlocksPerCol + block")};
            ${R?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${R.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${F} = ${ee}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return j},ue=()=>{let j=`col_index = col * ${_};`;for(let F=0;F<_*b;F++)j+=`
            let b${F}_data = ${L.getByIndices(`${L.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return j+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Z};
            var b_dequantized_values: ${Z};`,j};return`
        var<workgroup> workgroup_shared: array<${H.type.value}, ${b*g}>;
        ${x.declareVariables(...K,H)}
        ${x.mainStart([g,1,1])}
          let output_indices = ${H.offsetToIndices(`(global_idx / ${g}) * ${b}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${g}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/d};
            ${me()}
            for (var word: u32 = 0; word < ${c}; word += ${u}) {
              ${ue()}
              for (var i: u32 = 0; i < ${u}; i++) {
                ${ne()}
                word_offset += ${8/d};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${b}) {
            var output_value: ${H.type.value} = ${H.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${g}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${b};
            }
            ${H.setByIndices(`${H.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${d};${u};${_};${b};${g}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:p}],dispatchGroup:{x:A},programUniforms:w}),getShaderSource:T}},Ow=(e,r)=>{let t=e[0].dims,s=t.length,i=t[s-2],n=r.k,o=r.n,a=t.slice(0,s-2),l=ve.size(a),c=e[1].dims[2]/4,p=e[0].dataType,d=cr(r.k),u=cr(c),_=a.concat([i,o]),f=128,b=o%8===0?8:o%4===0?4:1,A=f/b,g=A*u*8,w=g/d,$=g/r.blockSize,y=ve.size(_)/b,v=[],T=[l,i,n/d],x=ve.convertShape(e[1].dims).slice();x.splice(-1,1,c/u),v.push(...ct(T)),v.push(...ct(x)),v.push(...ct(e[2].dims)),e.length===4&&v.push(...ct(ve.convertShape(e[3].dims)));let P=[l,i,o];v.push(...ct(P));let D=L=>{let G=T.length,K=Ae("a",e[0].dataType,G,d),R=Ae("b",12,x.length,u),te=Ae("scales",e[2].dataType,e[2].dims.length),H=[K,R,te],ee=e.length===4?Ae("zero_points",12,e[3].dims.length):void 0;ee&&H.push(ee);let Z=P.length,ne=at("output",e[0].dataType,Z),me=Dr(e[0].dataType),ue=()=>{switch(d){case 1:return`
          let a_data0 = vec4<${me}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${me}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${me}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${me}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${d}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${K.type.value}, ${w}>;
        var<workgroup> inter_results: array<array<${ne.type.value}, ${A}>, ${b}>;
        ${L.declareVariables(...H,ne)}
        ${L.mainStart([A,b,1])}
          let output_indices = ${ne.offsetToIndices(`workgroup_index * ${b}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${$} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${w};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${w}; a_offset += ${f})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${K.getByIndices(`${K.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${K.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${$} + local_id.x;
            ${ee?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${ee.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${me}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${me}(8);`}
            let scale = ${te.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${R.getByIndices(`${R.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/d};
            for (var i: u32 = 0; i < ${u}; i++) {
              ${ue()}
              let b_value = ${u===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${me}>(${Array.from({length:4},(j,F)=>`${me}(b_value_lower[${F}]), ${me}(b_value_upper[${F}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${me}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(j,F)=>`${`dot(a_data${F}, b_dequantized_values[${F}])`}`).join(" + ")};
              word_offset += ${8/d};
            }
            workgroupBarrier();
          }

          if (local_idx < ${b}) {
            var output_value: ${ne.type.value} = ${ne.type.value}(0);
            for (var b = 0u; b < ${A}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${ne.setByIndices(`${ne.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${d};${u};${A};${b}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:_,dataType:p}],dispatchGroup:{x:y},programUniforms:v}),getShaderSource:D}},F0=(e,r)=>{Fw(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Ow(e.inputs,r)):e.compute(Dw(e.inputs,r))},D0=e=>Wt(e)}),Lw,zw,Bw,Rw,jw,Nw,Vw,Uw,O0,dT=Ve(()=>{wt(),Pt(),Ct(),Lw=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},zw=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
            k = i32(${e.indicesGet("indices",i)}) - ${lt("uniforms.pads",i,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${lt("uniforms.x_shape",i,r)})) {
              break;
            }
            offset += k * i32(${lt("uniforms.x_strides",i,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},Bw=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${lt("uniforms.pads",i,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${lt("uniforms.x_shape",i,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${lt("uniforms.x_shape",i,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${lt("uniforms.x_strides",i,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Rw=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${lt("uniforms.pads",i,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${lt("uniforms.x_shape",i,r)})) {
                  k = i32(${lt("uniforms.x_shape",i,r)}) - 1;
                }
                offset += k * i32(${lt("uniforms.x_strides",i,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},jw=(e,r,t)=>{let s="";for(let i=r-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${lt("uniforms.pads",i,t)};
                if (k < 0)  {
                  k += i32(${lt("uniforms.x_shape",i,r)}]);
                }
                if (k >= i32(${lt("uniforms.x_shape",i,r)})) {
                  k -= i32(${lt("uniforms.x_shape",i,r)});
                }
                offset += k * i32(${lt("uniforms.x_strides",i,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},Nw=(e,r,t)=>{switch(t.mode){case 0:return zw(e,r,t.pads.length);case 1:return Bw(e,r,t.pads.length);case 2:return Rw(e,r,t.pads.length);case 3:return jw(e,r,t.pads.length);default:throw new Error("Invalid mode")}},Vw=(e,r)=>{let t=ve.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,i=ve.size(t),n=[{type:12,data:i},{type:6,data:r.pads}],o=e.length>=3&&e[2].data;r.mode===0&&n.push({type:o?e[2].dataType:1,data:r.value}),n.push(...ct(e[0].dims,t));let a=["rank"],l=c=>{let p=at("output",e[0].dataType,t.length),d=Ae("x",e[0].dataType,s.length),u=d.type.value,_=Nw(p,s.length,r),f=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&f.push({name:"constant_value",type:o?u:"f32"}),`
            ${c.registerUniforms(f).declareVariables(d,p)}
            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${u}(0);
            ${_}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${o}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ve.size(t)/64)},programUniforms:n}),getShaderSource:l}},Uw=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,n=new Int32Array(2*i).fill(0);if(e.length>=4){let a=e[3].getBigInt64Array();for(let l=0;l<a.length;l++)n[Number(a[l])]=Number(t[l]),n[Number(a[l])+i]=Number(t[l+a.length])}else t.forEach((a,l)=>n[Number(l)]=Number(a));let o=[];return n.forEach(a=>o.push(a)),{mode:r.mode,value:s,pads:o}}else return r},O0=(e,r)=>{Lw(e.inputs);let t=Uw(e.inputs,r);e.compute(Vw(e.inputs,t),{inputs:[0]})}}),Wi,Ec,Pc,Cc,$c,Ww,Gw,Sc,Ac,L0,z0,kc,B0,R0,Ic,j0,N0,V0,U0,pT=Ve(()=>{Ss(),wt(),Pt(),Ct(),Wi=e=>{if(er.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Ec=(e,r,t)=>{let s=r.format==="NHWC",i=e.dims.slice();s&&i.splice(1,0,i.pop());let n=Object.hasOwnProperty.call(r,"dilations"),o=r.kernelShape.slice(),a=r.strides.slice(),l=n?r.dilations.slice():[],c=r.pads.slice();wa.adjustPoolAttributes(t,i,o,a,l,c);let p=wa.computePoolOutputShape(t,i,a,l,o,c,r.autoPad),d=Object.assign({},r);n?Object.assign(d,{kernelShape:o,strides:a,pads:c,dilations:l,cacheKey:r.cacheKey}):Object.assign(d,{kernelShape:o,strides:a,pads:c,cacheKey:r.cacheKey});let u=p.slice();return u.push(u.splice(1,1)[0]),[d,s?u:p]},Pc=(e,r)=>{let t=r.format==="NHWC",s=ve.size(e),i=ve.size(r.kernelShape),n=[{type:12,data:s},{type:12,data:i}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let a=r.kernelShape[r.kernelShape.length-1],l=r.strides[r.strides.length-1],c=r.pads[r.pads.length/2-1],p=r.pads[r.pads.length-1],d=!!(c+p);n.push({type:12,data:a},{type:12,data:l},{type:12,data:c},{type:12,data:p}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(r.kernelShape.length===2){let _=r.kernelShape[r.kernelShape.length-2],f=r.strides[r.strides.length-2],b=r.pads[r.pads.length/2-2],A=r.pads[r.pads.length-2];u=!!(b+A),n.push({type:12,data:_},{type:12,data:f},{type:12,data:b},{type:12,data:A}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[n,o,!0,d,u]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=ve.computeStrides(r.kernelShape);n.push({type:12,data:a},{type:12,data:r.pads},{type:12,data:r.strides}),o.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let l=r.pads.reduce((c,p)=>c+p);return[n,o,!!l,!1,!1]}},Cc=(e,r,t,s,i,n,o,a,l,c,p,d)=>{let u=i.format==="NHWC",_=r.type.value,f=at("output",r.type.tensor,s);if(i.kernelShape.length<=2){let b="",A="",g="",w=t-(u?2:1);if(p?b=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${w}] = indices[${w}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${w}] < 0 || xIndices[${w}]
                      >= uniforms.x_shape[${w}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`:b=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${w}] = indices[${w}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${n}
                }`,i.kernelShape.length===2){let $=t-(u?3:2);d?A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${$}] < 0 || xIndices[${$}] >= uniforms.x_shape[${$}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:A=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sh - uniforms.phStart + j;
                `,g=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${_}(${a});
              var pad = 0;
              ${A}
              ${b}
              ${g}
              ${o}

              output[global_idx] = value;
            }`}else{if(u)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let b=i.kernelShape.length,A=i.pads.length,g="";return c?g=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${n}
              }`:g=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${n}
            `,`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${b}>;

              var value = ${_}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${b-1}u; j++) {
                  offsets[j] = offset / ${lt("uniforms.kernelStrides","j",b)};
                  offset -= offsets[j] * ${lt("uniforms.kernelStrides","j",b)};
                }
                offsets[${b-1}] = offset;

                isPad = false;
                for (var j = ${t-b}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${lt("uniforms.strides",`j - ${t-b}u`,b)}
                    + offsets[j - ${t-b}u] - ${lt("uniforms.pads","j - 2u",A)};
                  ${g}
              }
              ${o}

              output[global_idx] = value;
            }`}},$c=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Ww=e=>`${$c(e)};${e.countIncludePad}`,Gw=e=>`${$c(e)};${e.storageOrder};${e.dilations}`,Sc=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Ac=(e,r,t,s)=>{let[i,n]=Ec(r,s,t),o=Ae("x",r.dataType,r.dims.length),a=o.type.value,l="value += x_val;",c="";i.countIncludePad?c+=`value /= ${a}(uniforms.kernelSize);`:c+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[p,d,u,_,f]=Pc(n,i);p.push(...ct(r.dims,n));let b=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${u};${_};${f}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ve.size(n)/64)},programUniforms:p}),getShaderSource:A=>Cc(A,o,r.dims.length,n.length,i,l,c,0,d,u,_,f)}},L0=e=>{let r=e.count_include_pad!==0,t=Sc(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:Ww(s)}},z0=(e,r)=>{Wi(e.inputs),e.compute(Ac("AveragePool",e.inputs[0],!1,r))},kc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},B0=e=>{let r=e.format;return{format:r,...kc,cacheKey:r}},R0=(e,r)=>{Wi(e.inputs),e.compute(Ac("GlobalAveragePool",e.inputs[0],!0,r))},Ic=(e,r,t,s)=>{let[i,n]=Ec(r,s,t),o=`
      value = max(x_val, value);
    `,a="",l=Ae("x",r.dataType,r.dims.length),c=["rank"],[p,d,u,_,f]=Pc(n,i);return p.push(...ct(r.dims,n)),{name:e,shaderCache:{hint:`${s.cacheKey};${u};${_};${f}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ve.size(n)/64)},programUniforms:p}),getShaderSource:b=>Cc(b,l,r.dims.length,n.length,i,o,a,r.dataType===10?-65504:-1e5,d,u,_,f)}},j0=(e,r)=>{Wi(e.inputs),e.compute(Ic("MaxPool",e.inputs[0],!1,r))},N0=e=>{let r=e.storage_order,t=e.dilations,s=Sc(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:r,dilations:t,...s,cacheKey:""};return{...i,cacheKey:Gw(i)}},V0=e=>{let r=e.format;return{format:r,...kc,cacheKey:r}},U0=(e,r)=>{Wi(e.inputs),e.compute(Ic("GlobalMaxPool",e.inputs[0],!0,r))}}),Kw,Hw,W0,G0,hT=Ve(()=>{wt(),Pt(),pr(),Ct(),Kw=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,s)=>t===e[2].dims[s]).reduce((t,s)=>t&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,n)=>n===r.axis||i===e[0].dims[n]).reduce((i,n)=>i&&n,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[r.axis],s=e[1].dims[r.axis];if(r.blockSize<Math.ceil(t/s)||r.blockSize>Math.ceil(t/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Hw=(e,r)=>{let t=ve.normalizeAxis(r.axis,e[0].dims.length),s=e[0].dataType,i=s===3,n=e[0].dims,o=e[1].dataType,a=ve.size(n),l=s===3||s===2,c=l?[Math.ceil(ve.size(e[0].dims)/4)]:e[0].dims,p=e[1].dims,d=e.length>2?e[2]:void 0,u=d?l?[Math.ceil(ve.size(d.dims)/4)]:d.dims:void 0,_=p.length===0||p.length===1&&p[0]===1,f=_===!1&&p.length===1,b=cr(a),A=_&&(!l||b===4),g=A?b:1,w=A&&!l?b:1,$=Ae("input",l?12:s,c.length,w),y=Ae("scale",o,p.length),v=d?Ae("zero_point",l?12:s,u.length):void 0,T=at("output",o,n.length,g),x=[$,y];v&&x.push(v);let P=[c,p];d&&P.push(u);let D=[{type:12,data:a/g},{type:12,data:t},{type:12,data:r.blockSize},...ct(...P,n)],L=G=>{let K=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${G.registerUniforms(K).declareVariables(...x,T)}
      ${G.mainStart()}
          ${G.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${T.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${$.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${g===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${$.getByOffset("global_idx")};`};

          // Set scale input
          ${_?`let scale_value= ${y.getByOffset("0")}`:f?`
            let scale_index = ${T.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${y.getByOffset("scale_index")};`:`
            var scale_indices: ${y.type.indices} = output_indices;
            let index = ${y.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${y.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${y.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${v?_?l?`
                let zero_point_input = ${v.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${v.getByOffset("0")}`:f?l?`
                let zero_point_index = ${T.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${v.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${T.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${v.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${y.indicesToOffset("scale_indices")};
                let zero_point_input = ${v.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${v.getByIndices("scale_indices")};`:`let zero_point_value = ${l?i?"i32":"u32":$.type.value}(0);`};
      // Compute and write output
      ${T.setByOffset("global_idx",`${T.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getShaderSource:L,getRunData:()=>({outputs:[{dims:n,dataType:o}],dispatchGroup:{x:Math.ceil(a/g/64),y:1,z:1},programUniforms:D})}},W0=(e,r)=>{Kw(e.inputs,r),e.compute(Hw(e.inputs,r))},G0=e=>Wt({axis:e.axis,blockSize:e.blockSize})}),qw,Qw,K0,mT=Ve(()=>{Ss(),wt(),Ct(),qw=(e,r,t)=>{let s=e===r,i=e<r&&t<0,n=e>r&&t>0;if(s||i||n)throw new Error("Range these inputs' contents are invalid.")},Qw=(e,r,t,s)=>{let i=Math.abs(Math.ceil((r-e)/t)),n=[i],o=i,a=[{type:12,data:o},{type:s,data:e},{type:s,data:t},...ct(n)],l=c=>{let p=at("output",s,n.length),d=p.type.value,u=[{name:"outputSize",type:"u32"},{name:"start",type:d},{name:"delta",type:d}];return`
        ${c.registerUniforms(u).declareVariables(p)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${d}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:n,dataType:s}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:a})}},K0=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),er.webgpu.validateInputContent&&qw(r,t,s),e.compute(Qw(r,t,s,e.inputs[0].dataType),{inputs:[]})}}),Xw,Fc,Dc,Yw,H0,q0,fT=Ve(()=>{wt(),Pt(),pr(),Ct(),Xw=(e,r,t,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let i=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,n=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${r}=${t};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${r}, bitcast<${s}>(${t}));`:`
              ${i}bitcast<${s}>(oldValue) + (${t})${n}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${r}, bitcast<${s}>(${t}));`:`
                ${i}max(bitcast<f32>(oldValue), (${t}))${n}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${r}, bitcast<${s}>(${t}));`:`${i}min(bitcast<${s}>(oldValue), (${t}))${n}`;case"mul":return`${i}(bitcast<${s}>(oldValue) * (${t}))${n}`;default:throw new Error(`Reduction ${e} is not supported.`)}},Fc=(e,r)=>`${e===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${r?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${r?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,Dc=(e,r,t)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${t?"global_idx":"idx"} + i];
        ${Xw(e.reduction,"output[data_offset + i]","value",r)}
      }`,Yw=(e,r)=>{let t=e[0].dims,s=e[1].dims,i=t,n=1,o=Math.ceil(ve.size(s)/n),a=s[s.length-1],l=ve.sizeFromDimension(t,a),c=ve.sizeFromDimension(s,0)/a,p=[{type:12,data:o},{type:12,data:a},{type:12,data:l},...ct(e[1].dims,e[2].dims,i)],d=u=>{let _=Ae("indices",e[1].dataType,e[1].dims.length),f=Ae("updates",e[2].dataType,e[2].dims.length,n),b=r.reduction!=="none"&&r.reduction!==""?vM("output",e[0].dataType,i.length):at("output",e[0].dataType,i.length,n);return`
      ${u.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(_,f,b)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${r.reduction==="none"}) {
    for (var i = 0; i < ${c}; i = i + 1) {
      for (var j = i + 1; j < ${c}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${r.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${c}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${Fc(t.length,!1)}
      }
      ${Dc(r,b.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${Fc(t.length,!0)}
  }
  ${Dc(r,b.type.value,!0)}
  }`};return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:p}),getShaderSource:d}},H0=e=>Wt({reduction:e.reduction}),q0=(e,r)=>{e.compute(Yw(e.inputs,r),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),Jw,Zw,eb,Oc,tb,rb,sb,nb,ib,ob,ab,lb,Lc,cb,ub,db,pb,hb,Q0,X0,_T=Ve(()=>{wt(),Pt(),pr(),Ct(),Jw=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Zw=(e,r,t)=>{r.every(i=>i>=0&&i<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((i,n)=>s[i]=e[n]),s},eb=(e,r,t,s,i,n)=>{let[o,a,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(p=>n.push(p));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&e.length>a&&e[a].dims.length===1&&e[a].dims[0]>0){if(e[a].getFloat32Array().forEach(p=>s.push(p)),s.length!==0&&s.length!==c&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Jw(s,r),r.axes.length>0&&Zw(s,r.axes,c).forEach((p,d)=>s[d]=p)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(p=>i.push(Number(p))),i.length!==0&&i.length!==c&&t>=18&&i.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==0&&s.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof i<"u"&&s.length>0&&i.length>c)throw new Error("Resize requires only of scales or sizes to be specified")},Oc=(e,r,t,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${r});
  let whole = ${s}(big / (${t}));
  let fract = ${s}(big % (${t})) / ${s}(${t});
  return whole + fract;
`,tb=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${Oc("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Oc("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",rb=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",sb=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),i=e.length===0?s:e.slice();return r.length>0?(r.forEach((n,o)=>{s[n]=i[o],s[o+t]=i[r.length+o]}),s):i},nb=(e,r,t,s)=>{let i=[];if(t.length>0)if(s.length>0){if(e.forEach(n=>i.push(n)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((n,o)=>i[n]=t[o])}else t.forEach(n=>i.push(n));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((n,o)=>Math.round(n*r[o]))}return i},ib=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(n=>r[n]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(n=>r[n]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let i=e.slice();return t.axes.length>0?(t.axes.forEach(n=>r[n]=s),t.axes.forEach(n=>i[n]=Math.round(e[n]*r[n]))):(r.fill(s,0,r.length),i.forEach((n,o)=>i[o]=Math.round(n*r[o]))),i},ob=(e,r,t,s,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${lt("uniforms.scales","i",s)};
        var roi_low = ${lt("uniforms.roi","i",i)};
        var roi_hi = ${lt("uniforms.roi",`i + ${r.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${lt("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${lt("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,ab=(e,r,t,s,i,n,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${lt("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${lt("uniforms.roi","i",n)};
          var roi_hi = ${lt("uniforms.roi",`i + ${t.length}`,n)};
          var input_shape_i = ${lt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${lt("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,lb=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${lt("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,Lc=(e,r,t,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",cb=(e,r,t,s,i)=>{let[n,o,a,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${t[o]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(col, ${t[a]} - 1))`)};
      ${Lc(e,l,n,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${c} = originalIndices[${o}];
      var col:${c} = originalIndices[${a}];
      ${s?`if (row < 0 || row > (${t[o]} - 1) || col < 0 || col > (${t[a]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${t[o]} - 1));
      col = max(0, min(col, ${t[a]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${n}])`:"0"};
      var x11: ${c} = getInputValue(batch, channel, row1, col1);
      var x12: ${c} = getInputValue(batch, channel, row1, col2);
      var x21: ${c} = getInputValue(batch, channel, row2, col1);
      var x22: ${c} = getInputValue(batch, channel, row2, col2);
      var dx1: ${c} = abs(row - ${c}(row1));
      var dx2: ${c} = abs(${c}(row2) - row);
      var dy1: ${c} = abs(col - ${c}(col1));
      var dy2: ${c} = abs(${c}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},ub=(e,r,t,s,i,n,o,a,l,c)=>{let p=t.length===2,[d,u]=p?[0,1]:[2,3],_=e.type.value,f=b=>{let A=b===d?"row":"col";return`
      fn ${A}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${_} {
        var output_index = ${r.indicesGet("output_indices",b)};
        var originalIdx: ${_} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[b]},
        ${s[b]}, ${t[b]}, ${n[b]}, ${n[b]} + ${t.length});
        var fractOriginalIdx: ${_} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${t[b]} - 1))) {
          return ${l};
        }
        var data: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${A}: ${_} = originalIdx + ${_}(i);
          if (${A} < 0 || ${A} >= ${t[b]}) {
            ${c?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${l};`:`${A} = max(0, min(${A}, ${t[b]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",b,`u32(${A})`)};
          data[i + 1] = ${b===d?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(d)};
    ${f(u)};
  fn getCubicInterpolationCoefs(s: ${_}) -> array<${_}, 4> {
    var absS = abs(s);
    var coeffs: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${_} = 1.0 - absS;
    var twoMinusAbsS: ${_} = 2.0 - absS;
    var onePlusAbsS: ${_} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${_}, 4>, coefs: array<${_}, 4>) -> ${_} {
    var coefsSum: ${_} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${_} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},db=(e,r,t,s,i)=>{let[n,o,a,l,c]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${t[o]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(height, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${Lc(e,c,n,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${o}];
      var height:${p} = originalIndices[${a}];
      var width:${p} = originalIndices[${l}];
      ${s?`if (depth < 0 || depth > (${t[o]} - 1) || height < 0 || height > (${t[a]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${t[o]} - 1));
      height = max(0, min(height, ${t[a]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${n}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},pb=(e,r,t,s,i,n)=>{let o=e.dims,a=sb(n,r.axes,o.length),l=nb(o,s,i,r.axes),c=s.slice();s.length===0&&(c=o.map((w,$)=>w===0?1:l[$]/w),r.keepAspectRatioPolicy!=="stretch"&&(l=ib(o,c,r)));let p=at("output",e.dataType,l.length),d=Ae("input",e.dataType,o.length),u=ve.size(l),_=o.length===l.length&&o.every((w,$)=>w===l[$]),f=r.coordinateTransformMode==="tf_crop_and_resize",b=r.extrapolationValue,A=d.type.value,g=w=>`
      ${_?"":`
      ${tb(r.coordinateTransformMode,A)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${lb(d,o)};
              ${rb(r.nearestMode,t,A)};
              ${ab(d,p,o,l,c.length,a.length,f)};
              `;case"linear":return`
              ${ob(p,o,l,c.length,a.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${cb(d,p,o,f,b)}`;if(o.length===3||o.length===5)return`${db(d,p,o,f,b)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${ub(d,p,o,l,c,a,r.cubicCoeffA,f,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${w.registerUniform("output_size","u32").registerUniform("scales","f32",c.length).registerUniform("roi","f32",a.length).declareVariables(d,p)}
      ${w.mainStart()}
        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${_?"output[global_idx] = input[global_idx];":`
        let output_indices = ${p.offsetToIndices("global_idx")};
        var input_indices: ${d.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${d.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${c.length>0?r.mode==="cubic"?c:c.length:""}|${i.length>0?i:""}|${a.length>0?a:""}|${_}|${r.mode==="nearest"?o.length:o}`,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},{type:1,data:c},{type:1,data:a},...ct(o,l)]})}},hb=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},Q0=(e,r)=>{let t=[],s=[],i=[],n=hb(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");eb(e.inputs,r,n,t,s,i),e.compute(pb(e.inputs[0],r,n,t,s,i),{inputs:[0]})},X0=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,i=e.cubicCoeffA,n=e.excludeOutside!==0,o=e.extrapolationValue,a=e.keepAspectRatioPolicy,l=e.mode,c=e.nearestMode===""?"simple":e.nearestMode;return Wt({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:i,excludeOutside:n,extrapolationValue:o,keepAspectRatioPolicy:a,mode:l,nearestMode:c})}}),mb,fb,Y0,gT=Ve(()=>{wt(),Pt(),Ct(),mb=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=r.dims[r.dims.length-1],n=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==n)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},fb=(e,r,t,s)=>{let i=r.simplified,n=e[0].dims,o=ve.size(n),a=n,l=o,c=n.slice(-1)[0],p=s?n.slice(0,-1).concat(1):[],d=!i&&e.length>3,u=e.length>4,_=s&&t>1,f=s&&t>2,b=t>3,A=64,g=cr(c),w=[{type:12,data:l},{type:12,data:g},{type:12,data:c},{type:1,data:r.epsilon}],$=v=>{let T=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],x=[Ae("x",e[0].dataType,e[0].dims,g),Ae("skip",e[1].dataType,e[1].dims,g),Ae("gamma",e[2].dataType,e[2].dims,g)];d&&x.push(Ae("beta",e[3].dataType,e[3].dims,g)),u&&x.push(Ae("bias",e[4].dataType,e[4].dims,g)),x.push(at("output",e[0].dataType,a,g)),_&&x.push(at("mean_output",1,p)),f&&x.push(at("inv_std_output",1,p)),b&&x.push(at("input_skip_bias_sum",e[0].dataType,a,g));let P=Dr(e[0].dataType),D=Dr(1,g);return`

      ${v.registerUniforms(T).declareVariables(...x)}
      var<workgroup> sum_shared : array<${D}, ${A}>;
      var<workgroup> sum_squared_shared : array<${D}, ${A}>;

      ${v.mainStart([A,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${A};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${A};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${A-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${u?"bias[offset1d + i]":P+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${b?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${ai(P,g,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${A};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${cn("sum",g)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${cn("square_sum",g)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${_?"mean_output[global_idx] = mean;":""}
        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${P}(mean)`}) *
            ${P}(inv_std_dev) * gamma[offset1d + i]
            ${d?"+ beta[offset1d + i]":""};
        }
      }`},y=[{dims:a,dataType:e[0].dataType}];return t>1&&y.push({dims:p,dataType:1}),t>2&&y.push({dims:p,dataType:1}),t>3&&y.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${g};${_};${f};${b}`,inputDependencies:e.map((v,T)=>"type")},getShaderSource:$,getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(l/c)},programUniforms:w})}},Y0=(e,r)=>{mb(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute(fb(e.inputs,r,e.outputCount,!1),{outputs:t})}}),_b,Gi,gb,zc,wb,bb,J0,Z0,wT=Ve(()=>{wt(),Pt(),pr(),Ct(),_b=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},Gi=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},gb=(e,r)=>{if(e.length>1){let t=Gi(e,1),s=Gi(e,2),i=Gi(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),Wt({starts:t,ends:s,axes:i})}else return r},zc=(e,r,t,s,i)=>{let n=e;return e<0&&(n+=t[s[r]]),i[r]<0?Math.max(0,Math.min(n,t[s[r]]-1)):Math.max(0,Math.min(n,t[s[r]]))},wb=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${lt("uniforms.input_shape","i",t.length)};
            let steps_i = ${lt("uniforms.steps","i",t.length)};
            let signs_i = ${lt("uniforms.signs","i",t.length)};
            let starts_i = ${lt("uniforms.starts","i",t.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,bb=(e,r)=>{let t=e[0].dims,s=ve.size(t),i=r.axes.length>0?ve.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],n=Gi(e,4);n.forEach(g=>g!==0||(()=>{throw new Error("step cannot be 0")})),n.length===0&&(n=Array(i.length).fill(1));let o=r.starts.map((g,w)=>zc(g,w,t,i,n)),a=r.ends.map((g,w)=>zc(g,w,t,i,n));if(i.length!==o.length||i.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==t.length)for(let g=0;g<t.length;++g)i.includes(g)||(o.splice(g,0,0),a.splice(g,0,t[g]),n.splice(g,0,1));let l=n.map(g=>Math.sign(g));n.forEach((g,w,$)=>{if(g<0){let y=(a[w]-o[w])/g,v=o[w],T=v+y*n[w];o[w]=T,a[w]=v,$[w]=-g}});let c=t.slice(0);i.forEach((g,w)=>{c[g]=Math.ceil((a[g]-o[g])/n[g])});let p={dims:c,dataType:e[0].dataType},d=at("output",e[0].dataType,c.length),u=Ae("input",e[0].dataType,e[0].dims.length),_=ve.size(c),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:n.length}],b=[{type:12,data:_},{type:12,data:o},{type:6,data:l},{type:12,data:n},...ct(e[0].dims,c)],A=g=>`
      ${g.registerUniforms(f).declareVariables(u,d)}
        ${wb(u,d,t)}
        ${g.mainStart()}
          ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${d.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${d.setByOffset("global_idx",u.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${o.length}_${n.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[p],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:b})}},J0=(e,r)=>{_b(e.inputs,r);let t=gb(e.inputs,r);e.compute(bb(e.inputs,t),{inputs:[0]})},Z0=e=>{let r=e.starts,t=e.ends,s=e.axes;return Wt({starts:r,ends:t,axes:s})}}),Mb,yb,ev,tv,bT=Ve(()=>{wt(),Pt(),pr(),un(),Ct(),Mb=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},yb=(e,r)=>{let t=e.inputs[0],s=t.dims,i=ve.size(s),n=s.length,o=ve.normalizeAxis(r.axis,n),a=o<s.length-1,l,c=[];a?(c=Array.from({length:n},(x,P)=>P),c[o]=n-1,c[n-1]=o,l=e.compute(os(t,c),{inputs:[t],outputs:[-1]})[0]):l=t;let p=l.dims,d=p[n-1],u=i/d,_=cr(d),f=d/_,b=64;u===1&&(b=256);let A=(x,P)=>P===4?`max(max(${x}.x, ${x}.y), max(${x}.z, ${x}.w))`:P===2?`max(${x}.x, ${x}.y)`:P===3?`max(max(${x}.x, ${x}.y), ${x}.z)`:x,g=Ae("x",l.dataType,l.dims,_),w=at("result",l.dataType,l.dims,_),$=g.type.value,y=Dr(l.dataType)==="f32"?`var threadMax = ${$}(-3.402823e+38f);`:`var threadMax = ${$}(-65504.0h);`,v=x=>`
      var<workgroup> rowMaxShared : ${$};
      var<workgroup> rowSumShared : ${$};
      var<workgroup> threadShared : array<${$}, ${b}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${$} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${$}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${x.registerUniform("packedCols","i32").declareVariables(g,w)}
      ${x.mainStart(b)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${b};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${y}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${$}(${A("threadShared[0]",_)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${$}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${$}(${cn("threadShared[0]",_)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,T=e.compute({name:"Softmax",shaderCache:{hint:`${_};${b}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:p,dataType:l.dataType}],dispatchGroup:{x:u},programUniforms:[{type:6,data:f}]}),getShaderSource:v},{inputs:[l],outputs:[a?-1:0]})[0];a&&e.compute(os(T,c),{inputs:[T]})},ev=(e,r)=>{Mb(e.inputs),yb(e,r)},tv=e=>Wt({axis:e.axis})}),Bc,vb,xb,Tb,rv,MT=Ve(()=>{wt(),Pt(),Ct(),Bc=e=>Array.from(e.getBigInt64Array(),Number),vb=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Bc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},xb=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},Tb=(e,r)=>{let t=e[0].dims,s=r??Bc(e[1]),i=xb(t,s),n=ve.size(i),o=e[0].dataType,a=Ae("input",o,t.length),l=at("output",o,i.length),c=p=>`
      const inputShape = ${a.indices(...t)};
      ${p.registerUniform("output_size","u32").declareVariables(a,l)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${a.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${a.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",a.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},...ct(e[0].dims,i)]}),getShaderSource:c}},rv=e=>{vb(e.inputs),e.compute(Tb(e.inputs),{inputs:[0]})}}),Eb,Pb,sv,yT=Ve(()=>{wt(),Pt(),Ct(),Eb=(e,r,t,s,i)=>{let n=at("output_data",i,t.length,4),o=Ae("a_data",r[1].dataType,r[1].dims.length,4),a=Ae("b_data",r[2].dataType,r[2].dims.length,4),l=Ae("c_data",r[0].dataType,r[0].dims.length,4),c,p=(d,u,_)=>`select(${u}, ${d}, ${_})`;if(!s)c=n.setByOffset("global_idx",p(o.getByOffset("global_idx"),a.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let d=(u,_,f="")=>{let b=`a_data[index_a${_}][component_a${_}]`,A=`b_data[index_b${_}][component_b${_}]`,g=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`
            let output_indices${_} = ${n.offsetToIndices(`global_idx * 4u + ${_}u`)};
            let offset_a${_} = ${o.broadcastedIndicesToOffset(`output_indices${_}`,n)};
            let offset_b${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,n)};
            let offset_c${_} = ${l.broadcastedIndicesToOffset(`output_indices${_}`,n)};
            let index_a${_} = offset_a${_} / 4u;
            let index_b${_} = offset_b${_} / 4u;
            let index_c${_} = offset_c${_} / 4u;
            let component_a${_} = offset_a${_} % 4u;
            let component_b${_} = offset_b${_} % 4u;
            let component_c${_} = offset_c${_} % 4u;
            ${u}[${_}] = ${f}(${p(b,A,g)});
          `};i===9?c=`
            var data = vec4<u32>(0);
            ${d("data",0,"u32")}
            ${d("data",1,"u32")}
            ${d("data",2,"u32")}
            ${d("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`
            ${d("output_data[global_idx]",0)}
            ${d("output_data[global_idx]",1)}
            ${d("output_data[global_idx]",2)}
            ${d("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,o,a,n)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${c}
      }`},Pb=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,i=e[1].dataType,n=!(ve.areEqual(r,t)&&ve.areEqual(t,s)),o=r,a=ve.size(r);if(n){let c=li.calcShape(li.calcShape(r,t,!1),s,!1);if(!c)throw new Error("Can't perform where op on the given tensors");o=c,a=ve.size(o)}let l=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:c=>Eb(c,e,o,n,i),getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:l},...ct(s,r,t,o)]})}},sv=e=>{e.compute(Pb(e.inputs))}}),nv,vT=Ve(()=>{Lx(),Cu(),zx(),Bx(),Rx(),jx(),Nx(),Kx(),qx(),Qx(),Xx(),Yx(),Jx(),Zx(),eT(),tT(),rT(),sT(),nT(),iT(),oT(),aT(),lT(),cT(),uT(),x0(),dT(),pT(),hT(),mT(),fT(),Pu(),_T(),$0(),gT(),wT(),bT(),P0(),MT(),un(),$u(),yT(),nv=new Map([["Abs",[YM]],["Acos",[JM]],["Acosh",[ZM]],["Add",[Fy]],["ArgMax",[HM,Jc]],["ArgMin",[KM,Jc]],["Asin",[ey]],["Asinh",[ty]],["Atan",[ry]],["Atanh",[sy]],["Attention",[qM]],["AveragePool",[z0,L0]],["BatchNormalization",[QM]],["BiasAdd",[XM]],["BiasSplitGelu",[Iy]],["Cast",[iy,ny]],["Ceil",[ay]],["Clip",[oy]],["Concat",[Uy,Wy]],["Conv",[nu,su]],["ConvTranspose",[e0,Zy]],["Cos",[ly]],["Cosh",[cy]],["CumSum",[t0,r0]],["DepthToSpace",[s0,n0]],["DequantizeLinear",[W0,G0]],["Div",[Dy]],["Einsum",[i0,o0]],["Elu",[uy,Xi]],["Equal",[Oy]],["Erf",[dy]],["Exp",[py]],["Expand",[a0]],["FastGelu",[l0]],["Floor",[hy]],["FusedConv",[nu,su]],["Gather",[u0,c0]],["GatherElements",[_0,f0]],["GatherBlockQuantized",[h0,m0]],["GatherND",[d0,p0]],["Gelu",[my]],["Gemm",[w0,g0]],["GlobalAveragePool",[R0,B0]],["GlobalMaxPool",[U0,V0]],["Greater",[Ry]],["GreaterOrEqual",[Ny]],["GridSample",[b0,M0]],["GroupQueryAttention",[S0]],["HardSigmoid",[vy,yy]],["InstanceNormalization",[A0]],["LayerNormalization",[k0]],["LeakyRelu",[fy,Xi]],["Less",[jy]],["LessOrEqual",[Vy]],["Log",[Ay]],["MatMul",[I0]],["MatMulNBits",[F0,D0]],["MaxPool",[j0,N0]],["Mul",[Ly]],["MultiHeadAttention",[v0,y0]],["Neg",[gy]],["Not",[_y]],["Pad",[O0]],["Pow",[zy]],["QuickGelu",[ky,Xi]],["Range",[K0]],["Reciprocal",[wy]],["ReduceMin",[NM]],["ReduceMean",[LM]],["ReduceMax",[jM]],["ReduceSum",[UM]],["ReduceProd",[VM]],["ReduceL1",[zM]],["ReduceL2",[BM]],["ReduceLogSum",[GM]],["ReduceLogSumExp",[RM]],["ReduceSumSquare",[WM]],["Relu",[by]],["Resize",[Q0,X0]],["RotaryEmbedding",[C0]],["ScatterND",[q0,H0]],["Sigmoid",[My]],["Sin",[xy]],["Sinh",[Ty]],["Slice",[J0,Z0]],["SkipLayerNormalization",[Y0]],["Split",[T0,E0]],["Sqrt",[Ey]],["Softmax",[ev,tv]],["Sub",[By]],["Tan",[Py]],["Tanh",[Cy]],["ThresholdedRelu",[Sy,Xi]],["Tile",[rv]],["Transpose",[TM,EM]],["Where",[sv]]])}),iv,xT=Ve(()=>{Ss(),Ks(),Ct(),iv=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,s,i){$s(e.programInfo.name);let n=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let c of r)a.push({binding:a.length,resource:{buffer:c.buffer}});for(let c of t)a.push({binding:a.length,resource:{buffer:c.buffer}});i&&a.push({binding:a.length,resource:i});let l=n.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:a,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}o.setPipeline(e.computePipeline),o.setBindGroup(0,l),o.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),hs(e.programInfo.name)}dispose(){}build(e,r){$s(e.name);let t=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(c=>{t.features.has(c.feature)&&s.push(`enable ${c.extension};`)});let i=xM(r,this.backend.device.limits),n=e.getShaderSource(i),o=`${s.join(`
`)}
${i.additionalImplementations}
${n}`,a=t.createShaderModule({code:o,label:e.name});zt("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let l=t.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:e.name});return hs(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=i&&t<=i&&s<=i)return[r,t,s];let n=r*t*s,o=Math.ceil(Math.sqrt(n));if(o>i){if(o=Math.ceil(Math.cbrt(n)),o>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),ov={};ui(ov,{WebGpuBackend:()=>av});var Cb,$b,Sb,av,TT=Ve(()=>{Ss(),wt(),Ks(),wM(),Dx(),vT(),xT(),Cb=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let i=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${i}`);break}case"rank":{let n=e[s].dims.length;t.push(`${i};${n}`);break}case"dims":{let n=e[s].dims.join(",");t.push(`${i};${n}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},$b=(e,r,t)=>{var i,n;let s=e.name;return(i=e.shaderCache)!=null&&i.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${Cb(r,((n=e.shaderCache)==null?void 0:n.inputDependencies)??new Array(r.length).fill("dims"))}`,s},Sb=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},av=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let t=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},i=n=>r.features.has(n)&&t.push(n)&&!0;i("chromium-experimental-timestamp-query-inside-passes")||i("timestamp-query"),i("shader-f16"),i("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new Sb(r.info||await r.requestAdapterInfo()),this.gpuDataManager=yM(this),this.programManager=new iv(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,vu(e.logLevel,!!e.debug),this.device.onuncapturederror=n=>{n.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${n.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;$s(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var s;let r=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let i=0;i<r.length/2;i++){let n=t[i],o=n.kernelId,a=this.kernels.get(o),l=a.kernelType,c=a.kernelName,p=n.programName,d=n.inputTensorViews,u=n.outputTensorViews,_=r[i*2],f=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let b=Number(_-this.queryTimeBase),A=Number(f-this.queryTimeBase);if(!Number.isSafeInteger(b)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if((s=this.env.webgpu.profiling)!=null&&s.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(g=>({dims:g.dims,dataType:Gs(g.dataType)})),outputsMetadata:u.map(g=>({dims:g.dims,dataType:Gs(g.dataType)})),kernelId:o,kernelType:l,kernelName:c,programName:p,startTime:b,endTime:A});else{let g="";d.forEach(($,y)=>{g+=`input[${y}]: [${$.dims}] | ${Gs($.dataType)}, `});let w="";u.forEach(($,y)=>{w+=`output[${y}]: [${$.dims}] | ${Gs($.dataType)}, `}),console.log(`[profiling] kernel "${o}|${l}|${c}|${p}" ${g}${w}execution time: ${A-b} ns`)}eo("GPU",`${p}::${_}::${f}`)}e.unmap(),this.pendingQueries.delete(e)}),hs()}run(e,r,t,s,i,n){$s(e.name);let o=[];for(let w=0;w<r.length;++w){let $=r[w].data;if($===0)continue;let y=this.gpuDataManager.get($);if(!y)throw new Error(`no GPU data for input: ${$}`);o.push(y)}let{outputs:a,dispatchGroup:l,programUniforms:c}=e.getRunData(r),p=t.length===0?a.map((w,$)=>$):t;if(p.length!==a.length)throw new Error(`Output size ${p.length} must be equal to ${a.length}.`);let d=[],u=[];for(let w=0;w<a.length;++w){if(!Number.isInteger(p[w])||p[w]<-3||p[w]>=n)throw new Error(`Invalid output index: ${p[w]}`);if(p[w]===-3)continue;let $=p[w]===-1,y=p[w]===-2,v=$||y?i(a[w].dataType,a[w].dims):s(p[w],a[w].dataType,a[w].dims);if(d.push(v),v.data===0)continue;let T=this.gpuDataManager.get(v.data);if(!T)throw new Error(`no GPU data for output: ${v.data}`);if($&&this.temporaryData.push(T),y){let x=this.kernelPersistentData.get(this.currentKernelId);x||(x=[],this.kernelPersistentData.set(this.currentKernelId,x)),x.push(T)}u.push(T)}if(o.length!==r.length||u.length!==d.length){if(u.length===0)return hs(e.name),d;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let _;if(c){let w=0,$=[];c.forEach(x=>{let P=typeof x.data=="number"?[x.data]:x.data;if(P.length===0)return;let D=x.type===10?2:4,L,G;x.type===10?(G=P.length>4?16:P.length>2?8:P.length*D,L=P.length>4?16:D*P.length):(G=P.length<=2?P.length*D:16,L=16),w=Math.ceil(w/G)*G,$.push(w);let K=x.type===10?8:4;w+=P.length>4?Math.ceil(P.length/K)*L:P.length*D});let y=16;w=Math.ceil(w/y)*y;let v=new ArrayBuffer(w);c.forEach((x,P)=>{let D=$[P],L=typeof x.data=="number"?[x.data]:x.data;if(x.type===6)new Int32Array(v,D,L.length).set(L);else if(x.type===12)new Uint32Array(v,D,L.length).set(L);else if(x.type===10)new Uint16Array(v,D,L.length).set(L);else if(x.type===1)new Float32Array(v,D,L.length).set(L);else throw new Error(`Unsupported uniform type: ${Gs(x.type)}`)});let T=this.gpuDataManager.create(w,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(T.buffer,0,v,0,w),this.gpuDataManager.release(T.id),_={offset:0,size:w,buffer:T.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),b=f[1]===1&&f[2]===1,A=$b(e,r,b),g=this.programManager.getArtifact(A);if(g||(g=this.programManager.build(e,f),this.programManager.setArtifact(A,g),zt("info",()=>`[artifact] key: ${A}, programName: ${e.name}`)),c&&g.uniformVariablesInfo){if(c.length!==g.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${g.uniformVariablesInfo.length}, got ${c.length} in program "${g.programInfo.name}".`);for(let w=0;w<c.length;w++){let $=c[w],y=$.type,v=typeof $.data=="number"?1:$.data.length,[T,x]=g.uniformVariablesInfo[w];if(y!==T||v!==x)throw new Error(`Uniform variable ${w} mismatch: expect type ${T} with size ${x}, got type ${y} with size ${v} in program "${g.programInfo.name}".`)}}if(zt("info",()=>`[ProgramManager] run "${e.name}" (key=${A}) with ${f[0]}x${f[1]}x${f[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let w={kernelId:this.currentKernelId,programName:g.programInfo.name,inputTensorViews:r,outputTensorViews:d};this.pendingKernels.push(w),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(w)}return this.programManager.run(g,o,u,f,_),hs(e.name),d}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,s){let i=nv.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let n={kernelType:e,kernelName:s,kernelEntry:i[0],attributes:[i[1],t]};this.kernels.set(r,n)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let i=s.kernelType,n=s.kernelName,o=s.kernelEntry,a=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${n}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),zt("info",()=>`[WebGPU] Start to run kernel "[${i}] ${n}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),o(r,a[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${n}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${i}] ${n}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,s){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let n=i.get(r),o=this.gpuDataManager.registerExternalBuffer(t,s,n);return i.set(r,[o,t]),o}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let s=await Qc(this,e,r);return xu(s.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){zt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){zt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){zt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let s=0;s<t;s++){let i=this.getComputePassEncoder(),n=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(n.computePipeline),i.setBindGroup(0,n.bindGroup),i.dispatchWorkgroups(...n.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),lv={};ui(lv,{init:()=>cv});var la,Ab,cv,ET=Ve(()=>{wt(),Ks(),Pt(),Fx(),la=class uv{constructor(r,t,s,i){this.module=r,this.dataType=t,this.data=s,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=ve.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=ve.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=ve.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=ve.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(ve.size(r)!==ve.size(this.dims))throw new Error("Invalid new shape");return new uv(this.module,this.dataType,this.data,r)}},Ab=class{constructor(e,r,t){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=e.PTR_SIZE,i=t/e.PTR_SIZE,n=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*i++,n));let o=Number(e.getValue(s*i++,n));this.outputCount=Number(e.getValue(s*i++,n)),this.customDataOffset=Number(e.getValue(s*i++,"*")),this.customDataSize=Number(e.getValue(s*i++,n));let a=[];for(let l=0;l<o;l++){let c=Number(e.getValue(s*i++,n)),p=Number(e.getValue(s*i++,"*")),d=Number(e.getValue(s*i++,n)),u=[];for(let _=0;_<d;_++)u.push(Number(e.getValue(s*i++,n)));a.push(new la(e,c,p,u))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){var o;let t=((o=r==null?void 0:r.inputs)==null?void 0:o.map(a=>typeof a=="number"?this.inputs[a]:a))??this.inputs,s=(r==null?void 0:r.outputs)??[],i=(a,l,c)=>new la(this.module,l,this.output(a,c),c),n=(a,l)=>{let c=Dn(a,l);if(!c)throw new Error(`Unsupported data type: ${a}`);let p=c>0?this.backend.gpuDataManager.create(c).id:0;return new la(this.module,a,p,l)};return this.backend.run(e,t,s,i,n,this.outputCount)}output(e,r){let t=this.module.stackSave();try{let s=this.module.PTR_SIZE,i=s===4?"i32":"i64",n=this.module.stackAlloc((1+r.length)*s);this.module.setValue(n,r.length,i);for(let o=0;o<r.length;o++)this.module.setValue(n+s*(o+1),r[o],i);return this.module._JsepOutput(this.opKernelContext,e,n)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(t)}}},cv=async(e,r,t,s)=>{let i=r.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let n=(TT(),Zi(ov)).WebGpuBackend,o=new n;await o.initialize(t,s),i("webgpu",[o,a=>o.alloc(Number(a)),a=>o.free(a),(a,l,c,p=!1)=>{if(p)zt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(a)}, dst=${Number(l)}, size=${Number(c)}`),o.memcpy(Number(a),Number(l));else{zt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(a)}, gpuDataId=${Number(l)}, size=${Number(c)}`);let d=r.HEAPU8.subarray(Number(a>>>0),Number(a>>>0)+Number(c));o.upload(Number(l),d)}},async(a,l,c)=>{zt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${l}, size=${c}`),await o.download(Number(a),()=>r.HEAPU8.subarray(Number(l)>>>0,Number(l+c)>>>0))},(a,l,c)=>o.createKernel(a,Number(l),c,r.UTF8ToString(r._JsepGetNodeName(Number(l)))),a=>o.releaseKernel(a),(a,l,c,p)=>{zt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${a}, contextDataOffset=${l}`);let d=new Ab(r,o,Number(l));return o.computeKernel(Number(a),d,p)},()=>o.captureBegin(),()=>o.captureEnd(),()=>o.replay()])}else{let n=new MM(t);i("webnn",[n,()=>n.reserveTensorId(),o=>n.releaseTensorId(o),async(o,a,l,c,p)=>n.ensureTensor(o,a,l,c,p),(o,a)=>{n.uploadTensor(o,a)},async(o,a)=>n.downloadTensor(o,a)])}}}),kb,Du,Ou,an,Ib,Rc,va,Lu,zu,jc,Bu,Ru,ju,dv=Ve(()=>{Ax(),kx(),wt(),jn(),gu(),mM(),kb=(e,r)=>{Jt()._OrtInit(e,r)!==0&&qt("Can't initialize onnxruntime.")},Du=async e=>{kb(e.wasm.numThreads,ga(e.logLevel))},Ou=async(e,r)=>{var t,s;(s=(t=Jt()).asyncInit)==null||s.call(t);{let i=(ET(),Zi(lv)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=e.webgpu.adapter;if(n){if(typeof n.limits!="object"||typeof n.features!="object"||typeof n.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let o=e.webgpu.powerPreference;if(o!==void 0&&o!=="low-power"&&o!=="high-performance")throw new Error(`Invalid powerPreference setting: "${o}"`);let a=e.webgpu.forceFallbackAdapter;if(a!==void 0&&typeof a!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${a}"`);if(n=await navigator.gpu.requestAdapter({powerPreference:o,forceFallbackAdapter:a}),!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await i("webgpu",Jt(),e,n)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await i("webnn",Jt(),e)}}},an=new Map,Ib=e=>{let r=Jt(),t=r.stackSave();try{let s=r.PTR_SIZE,i=r.stackAlloc(2*s);r._OrtGetInputOutputCount(e,i,i+s)!==0&&qt("Can't get session input/output count.");let n=s===4?"i32":"i64";return[Number(r.getValue(i,n)),Number(r.getValue(i+s,n))]}finally{r.stackRestore(t)}},Rc=(e,r)=>{let t=Jt(),s=t.stackSave(),i=0;try{let n=t.PTR_SIZE,o=t.stackAlloc(2*n);t._OrtGetInputOutputMetadata(e,r,o,o+n)!==0&&qt("Can't get session input/output metadata.");let a=Number(t.getValue(o,"*"));i=Number(t.getValue(o+n,"*"));let l=t.HEAP32[i/4];if(l===0)return[a,0];let c=t.HEAPU32[i/4+1],p=[];for(let d=0;d<c;d++){let u=Number(t.getValue(i+8+d*n,"*"));p.push(u!==0?t.UTF8ToString(u):Number(t.getValue(i+8+(d+c)*n,"*")))}return[a,l,p]}finally{t.stackRestore(s),i!==0&&t._OrtFree(i)}},va=e=>{let r=Jt(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},Lu=async(e,r)=>{var d,u,_,f;let t,s,i=Jt();Array.isArray(e)?[t,s]=e:e.buffer===i.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=va(e);let n=0,o=0,a=0,l=[],c=[],p=[];try{if([o,l]=await hM(r),(r==null?void 0:r.externalData)&&i.mountExternalData){let P=[];for(let D of r.externalData){let L=typeof D=="string"?D:D.path;P.push(yu(typeof D=="string"?D:D.data).then(G=>{i.mountExternalData(L,G)}))}await Promise.all(P)}for(let P of(r==null?void 0:r.executionProviders)??[])if((typeof P=="string"?P:P.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,typeof P!="string"){let D=P,L=D==null?void 0:D.context,G=D==null?void 0:D.gpuDevice,K=D==null?void 0:D.deviceType,R=D==null?void 0:D.powerPreference;L?i.currentContext=L:G?i.currentContext=await i.webnnCreateMLContext(G):i.currentContext=await i.webnnCreateMLContext({deviceType:K,powerPreference:R})}else i.currentContext=await i.webnnCreateMLContext();break}n=await i._OrtCreateSession(t,s,o),(d=i.webgpuOnCreateSession)==null||d.call(i,n),n===0&&qt("Can't create a session."),(u=i.jsepOnCreateSession)==null||u.call(i),i.currentContext&&(i.webnnRegisterMLContext(n,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[b,A]=Ib(n),g=!!(r!=null&&r.enableGraphCapture),w=[],$=[],y=[],v=[],T=[];for(let P=0;P<b;P++){let[D,L,G]=Rc(n,P);D===0&&qt("Can't get an input name."),c.push(D);let K=i.UTF8ToString(D);w.push(K),y.push(L===0?{name:K,isTensor:!1}:{name:K,isTensor:!0,type:Gs(L),shape:G})}for(let P=0;P<A;P++){let[D,L,G]=Rc(n,P+b);D===0&&qt("Can't get an output name."),p.push(D);let K=i.UTF8ToString(D);$.push(K),v.push(L===0?{name:K,isTensor:!1}:{name:K,isTensor:!0,type:Gs(L),shape:G});{if(g&&(r==null?void 0:r.preferredOutputLocation)===void 0){T.push("gpu-buffer");continue}let R=typeof(r==null?void 0:r.preferredOutputLocation)=="string"?r.preferredOutputLocation:((_=r==null?void 0:r.preferredOutputLocation)==null?void 0:_[K])??"cpu";if(R!=="cpu"&&R!=="cpu-pinned"&&R!=="gpu-buffer"&&R!=="ml-tensor")throw new Error(`Not supported preferred output location: ${R}.`);if(g&&R!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${R}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);T.push(R)}}let x=null;return T.some(P=>P==="gpu-buffer"||P==="ml-tensor")&&(a=i._OrtCreateBinding(n),a===0&&qt("Can't create IO binding."),x={handle:a,outputPreferredLocations:T,outputPreferredLocationsEncoded:T.map(P=>Hc(P))}),an.set(n,[n,c,p,x,g,!1]),[n,w,$,y,v]}catch(b){throw c.forEach(A=>i._OrtFree(A)),p.forEach(A=>i._OrtFree(A)),a!==0&&i._OrtReleaseBinding(a)!==0&&qt("Can't release IO binding."),n!==0&&i._OrtReleaseSession(n)!==0&&qt("Can't release session."),b}finally{i._free(t),o!==0&&i._OrtReleaseSessionOptions(o)!==0&&qt("Can't release session options."),l.forEach(b=>i._free(b)),(f=i.unmountExternalData)==null||f.call(i)}},zu=e=>{var l,c,p;let r=Jt(),t=an.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,i,n,o,a]=t;o&&(a&&r._OrtClearBoundOutputs(o.handle)!==0&&qt("Can't clear bound outputs."),r._OrtReleaseBinding(o.handle)!==0&&qt("Can't release IO binding.")),(l=r.jsepOnReleaseSession)==null||l.call(r,e),(c=r.webnnOnReleaseSession)==null||c.call(r,e),(p=r.webgpuOnReleaseSession)==null||p.call(r,e),i.forEach(d=>r._OrtFree(d)),n.forEach(d=>r._OrtFree(d)),r._OrtReleaseSession(s)!==0&&qt("Can't release session."),an.delete(e)},jc=async(e,r,t,s,i,n,o=!1)=>{if(!e){r.push(0);return}let a=Jt(),l=a.PTR_SIZE,c=e[0],p=e[1],d=e[3],u=d,_,f;if(c==="string"&&(d==="gpu-buffer"||d==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(o&&d!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if(d==="gpu-buffer"){let g=e[2].gpuBuffer;f=Dn(ii(c),p);{let w=a.jsepRegisterBuffer;if(!w)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');_=w(s,n,g,f)}}else if(d==="ml-tensor"){let g=e[2].mlTensor;f=Dn(ii(c),p);let w=a.webnnRegisterMLTensor;if(!w)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');_=w(s,g,ii(c),p)}else{let g=e[2];if(Array.isArray(g)){f=l*g.length,_=a._malloc(f),t.push(_);for(let w=0;w<g.length;w++){if(typeof g[w]!="string")throw new TypeError(`tensor data at index ${w} is not a string`);a.setValue(_+w*l,Es(g[w],t),"*")}}else{let w=a.webnnIsGraphInput;if(c!=="string"&&w){let $=a.UTF8ToString(i);if(w(s,$)){let y=ii(c);f=Dn(y,p),u="ml-tensor";let v=a.webnnCreateTemporaryTensor,T=a.webnnUploadTensor;if(!v||!T)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let x=await v(s,y,p);T(x,new Uint8Array(g.buffer,g.byteOffset,g.byteLength)),_=x}else f=g.byteLength,_=a._malloc(f),t.push(_),a.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,f),_)}else f=g.byteLength,_=a._malloc(f),t.push(_),a.HEAPU8.set(new Uint8Array(g.buffer,g.byteOffset,f),_)}}let b=a.stackSave(),A=a.stackAlloc(4*p.length);try{p.forEach((w,$)=>a.setValue(A+$*l,w,l===4?"i32":"i64"));let g=a._OrtCreateTensor(ii(c),_,f,A,p.length,Hc(u));g===0&&qt(`Can't create tensor for input/output. session=${s}, index=${n}.`),r.push(g)}finally{a.stackRestore(b)}},Bu=async(e,r,t,s,i,n)=>{var G,K,R,te;let o=Jt(),a=o.PTR_SIZE,l=an.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=l[0],p=l[1],d=l[2],u=l[3],_=l[4],f=l[5],b=r.length,A=s.length,g=0,w=[],$=[],y=[],v=[],T=o.stackSave(),x=o.stackAlloc(b*a),P=o.stackAlloc(b*a),D=o.stackAlloc(A*a),L=o.stackAlloc(A*a);try{[g,w]=pM(n);for(let Z=0;Z<b;Z++)await jc(t[Z],$,v,e,p[r[Z]],r[Z],_);for(let Z=0;Z<A;Z++)await jc(i[Z],y,v,e,d[s[Z]],b+s[Z],_);for(let Z=0;Z<b;Z++)o.setValue(x+Z*a,$[Z],"*"),o.setValue(P+Z*a,p[r[Z]],"*");for(let Z=0;Z<A;Z++)o.setValue(D+Z*a,y[Z],"*"),o.setValue(L+Z*a,d[s[Z]],"*");if(u&&!f){let{handle:Z,outputPreferredLocations:ne,outputPreferredLocationsEncoded:me}=u;if(p.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model's input count (${p.length}).`);for(let ue=0;ue<b;ue++){let j=r[ue];await o._OrtBindInput(Z,p[j],$[ue])!==0&&qt(`Can't bind input[${ue}] for session=${e}.`)}for(let ue=0;ue<A;ue++){let j=s[ue];(G=i[ue])!=null&&G[3]?o._OrtBindOutput(Z,d[j],y[ue],0)!==0&&qt(`Can't bind pre-allocated output[${ue}] for session=${e}.`):o._OrtBindOutput(Z,d[j],0,me[j])!==0&&qt(`Can't bind output[${ue}] to ${ne[ue]} for session=${e}.`)}an.set(e,[c,p,d,u,_,!0])}(K=o.jsepOnRunStart)==null||K.call(o,c),(R=o.webnnOnRunStart)==null||R.call(o,c);let H;u?H=await o._OrtRunWithBinding(c,u.handle,A,D,g):H=await o._OrtRun(c,P,x,b,L,A,D,g),H!==0&&qt("failed to call OrtRun().");let ee=[];for(let Z=0;Z<A;Z++){let ne=Number(o.getValue(D+Z*a,"*"));if(ne===y[Z]){ee.push(i[Z]);continue}let me=o.stackSave(),ue=o.stackAlloc(4*a),j=!1,F,U=0;try{o._OrtGetTensorData(ne,ue,ue+a,ue+2*a,ue+3*a)!==0&&qt(`Can't access output tensor data on index ${Z}.`);let se=a===4?"i32":"i64",fe=Number(o.getValue(ue,se));U=o.getValue(ue+a,"*");let oe=o.getValue(ue+a*2,"*"),Te=Number(o.getValue(ue+a*3,se)),Re=[];for(let X=0;X<Te;X++)Re.push(Number(o.getValue(oe+X*a,se)));o._OrtFree(oe)!==0&&qt("Can't free memory for tensor dims.");let He=Re.reduce((X,le)=>X*le,1);F=Gs(fe);let Me=u==null?void 0:u.outputPreferredLocations[s[Z]];if(F==="string"){if(Me==="gpu-buffer"||Me==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let X=[];for(let le=0;le<He;le++){let W=o.getValue(U+le*a,"*"),ye=o.getValue(U+(le+1)*a,"*"),ke=le===He-1?void 0:ye-W;X.push(o.UTF8ToString(W,ke))}ee.push([F,Re,X,"cpu"])}else if(Me==="gpu-buffer"&&He>0){let X=o.jsepGetBuffer;if(!X)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let le=X(U),W=Dn(fe,He);if(W===void 0||!bu(F))throw new Error(`Unsupported data type: ${F}`);j=!0,ee.push([F,Re,{gpuBuffer:le,download:o.jsepCreateDownloader(le,W,F),dispose:()=>{o._OrtReleaseTensor(ne)!==0&&qt("Can't release tensor.")}},"gpu-buffer"])}else if(Me==="ml-tensor"&&He>0){let X=o.webnnEnsureTensor,le=o.webnnIsInt64Supported;if(!X||!le)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Dn(fe,He)===void 0||!Mu(F))throw new Error(`Unsupported data type: ${F}`);if(F==="int64"&&!le(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let W=await X(e,U,fe,Re,!1);j=!0,ee.push([F,Re,{mlTensor:W,download:o.webnnCreateMLTensorDownloader(U,F),dispose:()=>{o.webnnReleaseTensorId(U),o._OrtReleaseTensor(ne)}},"ml-tensor"])}else{let X=wu(F),le=new X(He);new Uint8Array(le.buffer,le.byteOffset,le.byteLength).set(o.HEAPU8.subarray(U,U+le.byteLength)),ee.push([F,Re,le,"cpu"])}}finally{o.stackRestore(me),F==="string"&&U&&o._free(U),j||o._OrtReleaseTensor(ne),(te=o.webnnOnRunEnd)==null||te.call(o,c)}}return u&&!_&&(o._OrtClearBoundOutputs(u.handle)!==0&&qt("Can't clear bound outputs."),an.set(e,[c,p,d,u,_,!1])),ee}finally{o.stackRestore(T),$.forEach(H=>o._OrtReleaseTensor(H)),y.forEach(H=>o._OrtReleaseTensor(H)),v.forEach(H=>o._free(H)),g!==0&&o._OrtReleaseRunOptions(g),w.forEach(H=>o._free(H))}},Ru=e=>{let r=Jt(),t=an.get(e);if(!t)throw new Error("invalid session id");let s=t[0],i=r._OrtEndProfiling(s);i===0&&qt("Can't get an profile file name."),r._OrtFree(i)},ju=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r}}),ln,rs,si,Ki,Hi,ca,Nc,ua,An,kn,Fb,pv,hv,mv,fv,_v,gv,wv,bv=Ve(()=>{Ss(),dv(),jn(),fu(),ln=()=>!!er.wasm.proxy&&typeof document<"u",si=!1,Ki=!1,Hi=!1,ua=new Map,An=(e,r)=>{let t=ua.get(e);t?t.push(r):ua.set(e,[r])},kn=()=>{if(si||!Ki||Hi||!rs)throw new Error("worker not ready")},Fb=e=>{switch(e.data.type){case"init-wasm":si=!1,e.data.err?(Hi=!0,Nc[1](e.data.err)):(Ki=!0,Nc[0]()),ca&&(URL.revokeObjectURL(ca),ca=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=ua.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},pv=async()=>{if(!Ki){if(si)throw new Error("multiple calls to 'initWasm()' detected.");if(Hi)throw new Error("previous call to 'initWasm()' failed.");if(si=!0,ln())return new Promise((e,r)=>{rs==null||rs.terminate(),uM().then(([t,s])=>{try{rs=s,rs.onerror=n=>r(n),rs.onmessage=Fb,Nc=[e,r];let i={type:"init-wasm",in:er};!i.in.wasm.wasmPaths&&(t||Kc)&&(i.in.wasm.wasmPaths={wasm:new URL("/magic-eye-anything/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href}),rs.postMessage(i),ca=t}catch(i){r(i)}},r)});try{await _u(er.wasm),await Du(er),Ki=!0}catch(e){throw Hi=!0,e}finally{si=!1}}},hv=async e=>{if(ln())return kn(),new Promise((r,t)=>{An("init-ep",[r,t]);let s={type:"init-ep",in:{epName:e,env:er}};rs.postMessage(s)});await Ou(er,e)},mv=async e=>ln()?(kn(),new Promise((r,t)=>{An("copy-from",[r,t]);let s={type:"copy-from",in:{buffer:e}};rs.postMessage(s,[e.buffer])})):va(e),fv=async(e,r)=>{if(ln()){if(r!=null&&r.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return kn(),new Promise((t,s)=>{An("create",[t,s]);let i={type:"create",in:{model:e,options:{...r}}},n=[];e instanceof Uint8Array&&n.push(e.buffer),rs.postMessage(i,n)})}else return Lu(e,r)},_v=async e=>{if(ln())return kn(),new Promise((r,t)=>{An("release",[r,t]);let s={type:"release",in:e};rs.postMessage(s)});zu(e)},gv=async(e,r,t,s,i,n)=>{if(ln()){if(t.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return kn(),new Promise((o,a)=>{An("run",[o,a]);let l=t,c={type:"run",in:{sessionId:e,inputIndices:r,inputs:l,outputIndices:s,options:n}};rs.postMessage(c,ju(l))})}else return Bu(e,r,t,s,i,n)},wv=async e=>{if(ln())return kn(),new Promise((r,t)=>{An("end-profiling",[r,t]);let s={type:"end-profiling",in:e};rs.postMessage(s)});Ru(e)}}),Vc,Db,Mv,PT=Ve(()=>{Ss(),bv(),wt(),mu(),mM(),Vc=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},Db=e=>{switch(e[3]){case"cpu":return new Ps(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!bu(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:t,download:s,dispose:i}=e[2];return Ps.fromGpuBuffer(t,{dataType:r,dims:e[1],download:s,dispose:i})}case"ml-tensor":{let r=e[0];if(!Mu(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:t,download:s,dispose:i}=e[2];return Ps.fromMLTensor(t,{dataType:r,dims:e[1],download:s,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},Mv=class{async fetchModelAndCopyToWasmMemory(e){return mv(await yu(e))}async loadModel(e,r){$s();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await fv(t,r),hs()}async dispose(){return _v(this.sessionId)}async run(e,r,t){$s();let s=[],i=[];Object.entries(e).forEach(d=>{let u=d[0],_=d[1],f=this.inputNames.indexOf(u);if(f===-1)throw new Error(`invalid input '${u}'`);s.push(_),i.push(f)});let n=[],o=[];Object.entries(r).forEach(d=>{let u=d[0],_=d[1],f=this.outputNames.indexOf(u);if(f===-1)throw new Error(`invalid output '${u}'`);n.push(_),o.push(f)});let a=s.map((d,u)=>Vc(d,()=>`input "${this.inputNames[i[u]]}"`)),l=n.map((d,u)=>d?Vc(d,()=>`output "${this.outputNames[o[u]]}"`):null),c=await gv(this.sessionId,i,a,o,l,t),p={};for(let d=0;d<c.length;d++)p[this.outputNames[o[d]]]=n[d]??Db(c[d]);return hs(),p}startProfiling(){}endProfiling(){wv(this.sessionId)}}}),yv={};ui(yv,{OnnxruntimeWebAssemblyBackend:()=>au,initializeFlags:()=>ou,wasmBackend:()=>vv});var ou,au,vv,CT=Ve(()=>{Ss(),bv(),PT(),ou=()=>{(typeof er.wasm.initTimeout!="number"||er.wasm.initTimeout<0)&&(er.wasm.initTimeout=0);let e=er.wasm.simd;if(typeof e!="boolean"&&e!==void 0&&e!=="fixed"&&e!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),er.wasm.simd=!1),typeof er.wasm.proxy!="boolean"&&(er.wasm.proxy=!1),typeof er.wasm.trace!="boolean"&&(er.wasm.trace=!1),typeof er.wasm.numThreads!="number"||!Number.isInteger(er.wasm.numThreads)||er.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)er.wasm.numThreads=1;else{let r=typeof navigator>"u"?hx("node:os").cpus().length:navigator.hardwareConcurrency;er.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},au=class{async init(e){ou(),await pv(),await hv(e)}async createInferenceSessionHandler(e,r){let t=new Mv;return await t.loadModel(e,r),t}},vv=new au});Ss();Ss();Ss();var $T="1.22.0-dev.20250409-89f8206ba4",ST=nM;{let e=(CT(),Zi(yv)).wasmBackend;On("webgpu",e,5),On("webnn",e,5),On("cpu",e,10),On("wasm",e,10)}Object.defineProperty(er.versions,"web",{value:$T,enumerable:!0});/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AT=Object.freeze(Object.defineProperty({__proto__:null,get InferenceSession(){return hu},get TRACE(){return eo},get TRACE_FUNC_BEGIN(){return $s},get TRACE_FUNC_END(){return hs},get Tensor(){return Ps},default:ST,get env(){return er},get registerBackend(){return On}},Symbol.toStringTag,{value:"Module"}));var Us={},kT={"onnxruntime-common":e=>{e.exports=cx},"onnxruntime-web":e=>{e.exports=AT},"?2ce3":()=>{},"?7992":()=>{},"?5af5":()=>{},"?2b25":()=>{},"?db59":()=>{},"?383f":()=>{},"?fa4b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,r,t)=>{t.r(r),t.d(r,{Environment:()=>De,Interpreter:()=>it,Template:()=>Xt,parse:()=>oe,tokenize:()=>p});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Comment:"Comment"}),i=class{constructor(S,Q){this.value=S,this.type=Q}};function n(S){return/\w/.test(S)}function o(S){return/[0-9]/.test(S)}var a=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["~",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],l=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function c(S,Q={}){return S.endsWith(`
`)&&(S=S.slice(0,-1)),Q.lstrip_blocks&&(S=S.replace(/^[ \t]*({[#%-])/gm,"$1")),Q.trim_blocks&&(S=S.replace(/([#%-]})\n/g,"$1")),S.replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{").replace(/-#}\s*/g,"#}").replace(/\s*{#-/g,"{#").replace(/{%\s*(end)?generation\s*%}/gs,"")}function p(S,Q={}){var rt,gt;const B=[],q=c(S,Q);let re=0,ge=0;const Fe=mt=>{let xt="";for(;mt(q[re]);){if(q[re]==="\\"){if(++re,re>=q.length)throw new SyntaxError("Unexpected end of input");const st=q[re++],Bt=l.get(st);if(Bt===void 0)throw new SyntaxError(`Unexpected escaped character: ${st}`);xt+=Bt;continue}if(xt+=q[re++],re>=q.length)throw new SyntaxError("Unexpected end of input")}return xt};e:for(;re<q.length;){const mt=(rt=B.at(-1))==null?void 0:rt.type;if(mt===void 0||mt===s.CloseStatement||mt===s.CloseExpression||mt===s.Comment){let st="";for(;re<q.length&&!(q[re]==="{"&&(q[re+1]==="%"||q[re+1]==="{"||q[re+1]==="#"));)st+=q[re++];if(st.length>0){B.push(new i(st,s.Text));continue}}if(q[re]==="{"&&q[re+1]==="#"){re+=2;let st="";for(;q[re]!=="#"||q[re+1]!=="}";){if(re+2>=q.length)throw new SyntaxError("Missing end of comment tag");st+=q[re++]}B.push(new i(st,s.Comment)),re+=2;continue}Fe(st=>/\s/.test(st));const xt=q[re];if(xt==="-"||xt==="+"){const st=(gt=B.at(-1))==null?void 0:gt.type;if(st===s.Text||st===void 0)throw new SyntaxError(`Unexpected character: ${xt}`);switch(st){case s.Identifier:case s.NumericLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++re;const Bt=Fe(o);B.push(new i(`${xt}${Bt}`,Bt.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[st,Bt]of a){if(st==="}}"&&ge>0)continue;if(q.slice(re,re+st.length)===st){B.push(new i(st,Bt)),Bt===s.OpenExpression?ge=0:Bt===s.OpenCurlyBracket?++ge:Bt===s.CloseCurlyBracket&&--ge,re+=st.length;continue e}}if(xt==="'"||xt==='"'){++re;const st=Fe(Bt=>Bt!==xt);B.push(new i(st,s.StringLiteral)),++re;continue}if(o(xt)){let st=Fe(o);if(q[re]==="."&&o(q[re+1])){++re;const Bt=Fe(o);st=`${st}.${Bt}`}B.push(new i(st,s.NumericLiteral));continue}if(n(xt)){const st=Fe(n);B.push(new i(st,s.Identifier));continue}throw new SyntaxError(`Unexpected character: ${xt}`)}return B}var d=class{constructor(){Y(this,"type","Statement")}},u=class extends d{constructor(Q){super();Y(this,"type","Program");this.body=Q}},_=class extends d{constructor(Q,B,q){super();Y(this,"type","If");this.test=Q,this.body=B,this.alternate=q}},f=class extends d{constructor(Q,B,q,re){super();Y(this,"type","For");this.loopvar=Q,this.iterable=B,this.body=q,this.defaultBlock=re}},b=class extends d{constructor(){super(...arguments);Y(this,"type","Break")}},A=class extends d{constructor(){super(...arguments);Y(this,"type","Continue")}},g=class extends d{constructor(Q,B,q){super();Y(this,"type","Set");this.assignee=Q,this.value=B,this.body=q}},w=class extends d{constructor(Q,B,q){super();Y(this,"type","Macro");this.name=Q,this.args=B,this.body=q}},$=class extends d{constructor(Q){super();Y(this,"type","Comment");this.value=Q}},y=class extends d{constructor(){super(...arguments);Y(this,"type","Expression")}},v=class extends y{constructor(Q,B,q){super();Y(this,"type","MemberExpression");this.object=Q,this.property=B,this.computed=q}},T=class extends y{constructor(Q,B){super();Y(this,"type","CallExpression");this.callee=Q,this.args=B}},x=class extends y{constructor(Q){super();Y(this,"type","Identifier");this.value=Q}},P=class extends y{constructor(Q){super();Y(this,"type","Literal");this.value=Q}},D=class extends P{constructor(){super(...arguments);Y(this,"type","IntegerLiteral")}},L=class extends P{constructor(){super(...arguments);Y(this,"type","FloatLiteral")}},G=class extends P{constructor(){super(...arguments);Y(this,"type","StringLiteral")}},K=class extends P{constructor(){super(...arguments);Y(this,"type","ArrayLiteral")}},R=class extends P{constructor(){super(...arguments);Y(this,"type","TupleLiteral")}},te=class extends P{constructor(){super(...arguments);Y(this,"type","ObjectLiteral")}},H=class extends y{constructor(Q,B,q){super();Y(this,"type","BinaryExpression");this.operator=Q,this.left=B,this.right=q}},ee=class extends y{constructor(Q,B){super();Y(this,"type","FilterExpression");this.operand=Q,this.filter=B}},Z=class extends d{constructor(Q,B){super();Y(this,"type","FilterStatement");this.filter=Q,this.body=B}},ne=class extends y{constructor(Q,B){super();Y(this,"type","SelectExpression");this.lhs=Q,this.test=B}},me=class extends y{constructor(Q,B,q){super();Y(this,"type","TestExpression");this.operand=Q,this.negate=B,this.test=q}},ue=class extends y{constructor(Q,B){super();Y(this,"type","UnaryExpression");this.operator=Q,this.argument=B}},j=class extends y{constructor(Q=void 0,B=void 0,q=void 0){super();Y(this,"type","SliceExpression");this.start=Q,this.stop=B,this.step=q}},F=class extends y{constructor(Q,B){super();Y(this,"type","KeywordArgumentExpression");this.key=Q,this.value=B}},U=class extends y{constructor(Q){super();Y(this,"type","SpreadExpression");this.argument=Q}},se=class extends d{constructor(Q,B,q){super();Y(this,"type","CallStatement");this.call=Q,this.callerArgs=B,this.body=q}},fe=class extends y{constructor(Q,B,q){super();Y(this,"type","Ternary");this.condition=Q,this.trueExpr=B,this.falseExpr=q}};function oe(S){const Q=new u([]);let B=0;function q(Be,je){const et=S[B++];if(!et||et.type!==Be)throw new Error(`Parser Error: ${je}. ${et.type} !== ${Be}.`);return et}function re(Be){if(!gt(Be))throw new SyntaxError(`Expected ${Be}`);++B}function ge(){switch(S[B].type){case s.Comment:return new $(S[B++].value);case s.Text:return mt();case s.OpenStatement:return xt();case s.OpenExpression:return st();default:throw new SyntaxError(`Unexpected token type: ${S[B].type}`)}}function Fe(...Be){return B+Be.length<=S.length&&Be.every((je,et)=>je===S[B+et].type)}function rt(...Be){var je,et,Yt;return((je=S[B])==null?void 0:je.type)===s.OpenStatement&&((et=S[B+1])==null?void 0:et.type)===s.Identifier&&Be.includes((Yt=S[B+1])==null?void 0:Yt.value)}function gt(...Be){return B+Be.length<=S.length&&Be.every((je,et)=>S[B+et].type==="Identifier"&&je===S[B+et].value)}function mt(){return new G(q(s.Text,"Expected text token").value)}function xt(){if(q(s.OpenStatement,"Expected opening statement token"),S[B].type!==s.Identifier)throw new SyntaxError(`Unknown statement, got ${S[B].type}`);const Be=S[B].value;let je;switch(Be){case"set":++B,je=Bt();break;case"if":++B,je=Vt(),q(s.OpenStatement,"Expected {% token"),re("endif"),q(s.CloseStatement,"Expected %} token");break;case"macro":++B,je=Nr(),q(s.OpenStatement,"Expected {% token"),re("endmacro"),q(s.CloseStatement,"Expected %} token");break;case"for":++B,je=sr(),q(s.OpenStatement,"Expected {% token"),re("endfor"),q(s.CloseStatement,"Expected %} token");break;case"call":{++B;let et=null;Fe(s.OpenParen)&&(et=es());const Yt=Gr();if(Yt.type!=="Identifier")throw new SyntaxError("Expected identifier following call statement");const Rs=es();q(s.CloseStatement,"Expected closing statement token");const fs=[];for(;!rt("endcall");)fs.push(ge());q(s.OpenStatement,"Expected '{%'"),re("endcall"),q(s.CloseStatement,"Expected closing statement token");const js=new T(Yt,Rs);je=new se(js,et,fs);break}case"break":++B,q(s.CloseStatement,"Expected closing statement token"),je=new b;break;case"continue":++B,q(s.CloseStatement,"Expected closing statement token"),je=new A;break;case"filter":{++B;let et=Gr();et instanceof x&&Fe(s.OpenParen)&&(et=Wr(et)),q(s.CloseStatement,"Expected closing statement token");const Yt=[];for(;!rt("endfilter");)Yt.push(ge());q(s.OpenStatement,"Expected '{%'"),re("endfilter"),q(s.CloseStatement,"Expected '%}'"),je=new Z(et,Yt);break}default:throw new SyntaxError(`Unknown statement type: ${Be}`)}return je}function st(){q(s.OpenExpression,"Expected opening expression token");const Be=$r();return q(s.CloseExpression,"Expected closing expression token"),Be}function Bt(){const Be=Qr();let je=null;const et=[];if(Fe(s.Equals))++B,je=Qr();else{for(q(s.CloseStatement,"Expected %} token");!rt("endset");)et.push(ge());q(s.OpenStatement,"Expected {% token"),re("endset")}return q(s.CloseStatement,"Expected closing statement token"),new g(Be,je,et)}function Vt(){const Be=$r();q(s.CloseStatement,"Expected closing statement token");const je=[],et=[];for(;!rt("elif","else","endif");)je.push(ge());if(rt("elif")){++B,++B;const Yt=Vt();et.push(Yt)}else if(rt("else"))for(++B,++B,q(s.CloseStatement,"Expected closing statement token");!rt("endif");)et.push(ge());return new _(Be,je,et)}function Nr(){const Be=Gr();if(Be.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const je=es();q(s.CloseStatement,"Expected closing statement token");const et=[];for(;!rt("endmacro");)et.push(ge());return new w(Be,je,et)}function Qr(Be=!1){const je=Be?Gr:$r,et=[je()],Yt=Fe(s.Comma);for(;Yt&&(++B,et.push(je()),!!Fe(s.Comma)););return Yt?new R(et):et[0]}function sr(){const Be=Qr(!0);if(!(Be instanceof x||Be instanceof R))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Be.type} instead`);if(!gt("in"))throw new SyntaxError("Expected `in` keyword following loop variable");++B;const je=$r();q(s.CloseStatement,"Expected closing statement token");const et=[];for(;!rt("endfor","else");)et.push(ge());const Yt=[];if(rt("else"))for(++B,++B,q(s.CloseStatement,"Expected closing statement token");!rt("endfor");)Yt.push(ge());return new f(Be,je,et,Yt)}function $r(){return Sr()}function Sr(){const Be=Vr();if(gt("if")){++B;const je=Vr();if(gt("else")){++B;const et=Sr();return new fe(je,Be,et)}else return new ne(Be,je)}return Be}function Vr(){let Be=ls();for(;gt("or");){const je=S[B];++B;const et=ls();Be=new H(je,Be,et)}return Be}function ls(){let Be=Ar();for(;gt("and");){const je=S[B];++B;const et=Ar();Be=new H(je,Be,et)}return Be}function Ar(){let Be;for(;gt("not");){const je=S[B];++B;const et=Ar();Be=new ue(je,et)}return Be??Is()}function Is(){let Be=Fs();for(;;){let je;if(gt("not","in"))je=new i("not in",s.Identifier),B+=2;else if(gt("in"))je=S[B++];else if(Fe(s.ComparisonBinaryOperator))je=S[B++];else break;const et=Fs();Be=new H(je,Be,et)}return Be}function Fs(){let Be=fr();for(;Fe(s.AdditiveBinaryOperator);){const je=S[B];++B;const et=fr();Be=new H(je,Be,et)}return Be}function Ur(){const Be=hr(Gr());return Fe(s.OpenParen)?Wr(Be):Be}function Wr(Be){let je=new T(Be,es());return je=hr(je),Fe(s.OpenParen)&&(je=Wr(je)),je}function es(){q(s.OpenParen,"Expected opening parenthesis for arguments list");const Be=Or();return q(s.CloseParen,"Expected closing parenthesis for arguments list"),Be}function Or(){const Be=[];for(;!Fe(s.CloseParen);){let je;if(S[B].type===s.MultiplicativeBinaryOperator&&S[B].value==="*"){++B;const et=$r();je=new U(et)}else if(je=$r(),Fe(s.Equals)){if(++B,!(je instanceof x))throw new SyntaxError("Expected identifier for keyword argument");const et=$r();je=new F(je,et)}Be.push(je),Fe(s.Comma)&&++B}return Be}function ms(){const Be=[];let je=!1;for(;!Fe(s.CloseSquareBracket);)Fe(s.Colon)?(Be.push(void 0),++B,je=!0):(Be.push($r()),Fe(s.Colon)&&(++B,je=!0));if(Be.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(je){if(Be.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new j(...Be)}return Be[0]}function hr(Be){for(;Fe(s.Dot)||Fe(s.OpenSquareBracket);){const je=S[B];++B;let et;const Yt=je.type===s.OpenSquareBracket;if(Yt)et=ms(),q(s.CloseSquareBracket,"Expected closing square bracket");else if(et=Gr(),et.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Be=new v(Be,et,Yt)}return Be}function fr(){let Be=Xr();for(;Fe(s.MultiplicativeBinaryOperator);){const je=S[B++],et=Xr();Be=new H(je,Be,et)}return Be}function Xr(){let Be=Bs();for(;gt("is");){++B;const je=gt("not");je&&++B;const et=Gr();if(!(et instanceof x))throw new SyntaxError("Expected identifier for the test");Be=new me(Be,je,et)}return Be}function Bs(){let Be=Ur();for(;Fe(s.Pipe);){++B;let je=Gr();if(!(je instanceof x))throw new SyntaxError("Expected identifier for the filter");Fe(s.OpenParen)&&(je=Wr(je)),Be=new ee(Be,je)}return Be}function Gr(){const Be=S[B++];switch(Be.type){case s.NumericLiteral:{const je=Be.value;return je.includes(".")?new L(Number(je)):new D(Number(je))}case s.StringLiteral:{let je=Be.value;for(;Fe(s.StringLiteral);)je+=S[B++].value;return new G(je)}case s.Identifier:return new x(Be.value);case s.OpenParen:{const je=Qr();return q(s.CloseParen,"Expected closing parenthesis, got ${tokens[current].type} instead."),je}case s.OpenSquareBracket:{const je=[];for(;!Fe(s.CloseSquareBracket);)je.push($r()),Fe(s.Comma)&&++B;return++B,new K(je)}case s.OpenCurlyBracket:{const je=new Map;for(;!Fe(s.CloseCurlyBracket);){const et=$r();q(s.Colon,"Expected colon between key and value in object literal");const Yt=$r();je.set(et,Yt),Fe(s.Comma)&&++B}return++B,new te(je)}default:throw new SyntaxError(`Unexpected token: ${Be.type}`)}}for(;B<S.length;)Q.body.push(ge());return Q}function Te(S,Q,B=1){Q===void 0&&(Q=S,S=0);const q=[];for(let re=S;re<Q;re+=B)q.push(re);return q}function Re(S,Q,B,q=1){const re=Math.sign(q);re>=0?(Q=(Q??(Q=0))<0?Math.max(S.length+Q,0):Math.min(Q,S.length),B=(B??(B=S.length))<0?Math.max(S.length+B,0):Math.min(B,S.length)):(Q=(Q??(Q=S.length-1))<0?Math.max(S.length+Q,-1):Math.min(Q,S.length-1),B=(B??(B=-1))<-1?Math.max(S.length+B,-1):Math.min(B,S.length-1));const ge=[];for(let Fe=Q;re*Fe<re*B;Fe+=q)ge.push(S[Fe]);return ge}function He(S){return S.replace(/\b\w/g,Q=>Q.toUpperCase())}function Me(S){return X(new Date,S)}function X(S,Q){const B=new Intl.DateTimeFormat(void 0,{month:"long"}),q=new Intl.DateTimeFormat(void 0,{month:"short"}),re=ge=>ge<10?"0"+ge:ge.toString();return Q.replace(/%[YmdbBHM%]/g,ge=>{switch(ge){case"%Y":return S.getFullYear().toString();case"%m":return re(S.getMonth()+1);case"%d":return re(S.getDate());case"%b":return q.format(S);case"%B":return B.format(S);case"%H":return re(S.getHours());case"%M":return re(S.getMinutes());case"%%":return"%";default:return ge}})}function le(S){return S.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function W(S,Q,B,q){if(q===0)return S;let re=q==null||q<0?1/0:q;const ge=Q.length===0?new RegExp("(?=)","gu"):new RegExp(le(Q),"gu");return S.replaceAll(ge,Fe=>re>0?(--re,B):Fe)}var ye=class extends Error{},ke=class extends Error{},Pe=class{constructor(S=void 0){Y(this,"type","RuntimeValue");Y(this,"value");Y(this,"builtins",new Map);this.value=S}__bool__(){return new Ie(!!this.value)}toString(){return String(this.value)}},be=class extends Pe{constructor(){super(...arguments);Y(this,"type","IntegerValue")}},Se=class extends Pe{constructor(){super(...arguments);Y(this,"type","FloatValue")}toString(){return this.value%1===0?this.value.toFixed(1):this.value.toString()}},we=class extends Pe{constructor(){super(...arguments);Y(this,"type","StringValue");Y(this,"builtins",new Map([["upper",new Ge(()=>new we(this.value.toUpperCase()))],["lower",new Ge(()=>new we(this.value.toLowerCase()))],["strip",new Ge(()=>new we(this.value.trim()))],["title",new Ge(()=>new we(He(this.value)))],["capitalize",new Ge(()=>new we(this.value.charAt(0).toUpperCase()+this.value.slice(1)))],["length",new be(this.value.length)],["rstrip",new Ge(()=>new we(this.value.trimEnd()))],["lstrip",new Ge(()=>new we(this.value.trimStart()))],["startswith",new Ge(Q=>{if(Q.length===0)throw new Error("startswith() requires at least one argument");const B=Q[0];if(B instanceof we)return new Ie(this.value.startsWith(B.value));if(B instanceof xe){for(const q of B.value){if(!(q instanceof we))throw new Error("startswith() tuple elements must be strings");if(this.value.startsWith(q.value))return new Ie(!0)}return new Ie(!1)}throw new Error("startswith() argument must be a string or tuple of strings")})],["endswith",new Ge(Q=>{if(Q.length===0)throw new Error("endswith() requires at least one argument");const B=Q[0];if(B instanceof we)return new Ie(this.value.endsWith(B.value));if(B instanceof xe){for(const q of B.value){if(!(q instanceof we))throw new Error("endswith() tuple elements must be strings");if(this.value.endsWith(q.value))return new Ie(!0)}return new Ie(!1)}throw new Error("endswith() argument must be a string or tuple of strings")})],["split",new Ge(Q=>{const B=Q[0]??new nt;if(!(B instanceof we||B instanceof nt))throw new Error("sep argument must be a string or null");const q=Q[1]??new be(-1);if(!(q instanceof be))throw new Error("maxsplit argument must be a number");let re=[];if(B instanceof nt){const ge=this.value.trimStart();for(const{0:Fe,index:rt}of ge.matchAll(/\S+/g)){if(q.value!==-1&&re.length>=q.value&&rt!==void 0){re.push(Fe+ge.slice(rt+Fe.length));break}re.push(Fe)}}else{if(B.value==="")throw new Error("empty separator");re=this.value.split(B.value),q.value!==-1&&re.length>q.value&&re.push(re.splice(q.value).join(B.value))}return new xe(re.map(ge=>new we(ge)))})],["replace",new Ge(Q=>{if(Q.length<2)throw new Error("replace() requires at least two arguments");const B=Q[0],q=Q[1];if(!(B instanceof we&&q instanceof we))throw new Error("replace() arguments must be strings");let re;if(Q.length>2?Q[2].type==="KeywordArgumentsValue"?re=Q[2].value.get("count")??new nt:re=Q[2]:re=new nt,!(re instanceof be||re instanceof nt))throw new Error("replace() count argument must be a number or null");return new we(W(this.value,B.value,q.value,re.value))})]]))}},Ie=class extends Pe{constructor(){super(...arguments);Y(this,"type","BooleanValue")}},ze=class extends Pe{constructor(){super(...arguments);Y(this,"type","ObjectValue");Y(this,"builtins",new Map([["get",new Ge(([Q,B])=>{if(!(Q instanceof we))throw new Error(`Object key must be a string: got ${Q.type}`);return this.value.get(Q.value)??B??new nt})],["items",new Ge(()=>this.items())],["keys",new Ge(()=>this.keys())],["values",new Ge(()=>this.values())]]))}__bool__(){return new Ie(this.value.size>0)}items(){return new xe(Array.from(this.value.entries()).map(([Q,B])=>new xe([new we(Q),B])))}keys(){return new xe(Array.from(this.value.keys()).map(Q=>new we(Q)))}values(){return new xe(Array.from(this.value.values()))}},Qe=class extends ze{constructor(){super(...arguments);Y(this,"type","KeywordArgumentsValue")}},xe=class extends Pe{constructor(){super(...arguments);Y(this,"type","ArrayValue");Y(this,"builtins",new Map([["length",new be(this.value.length)]]))}__bool__(){return new Ie(this.value.length>0)}},Ze=class extends xe{constructor(){super(...arguments);Y(this,"type","TupleValue")}},Ge=class extends Pe{constructor(){super(...arguments);Y(this,"type","FunctionValue")}},nt=class extends Pe{constructor(){super(...arguments);Y(this,"type","NullValue")}},Ye=class extends Pe{constructor(){super(...arguments);Y(this,"type","UndefinedValue")}},De=class{constructor(S){Y(this,"variables",new Map([["namespace",new Ge(S=>{if(S.length===0)return new ze(new Map);if(S.length!==1||!(S[0]instanceof ze))throw new Error("`namespace` expects either zero arguments or a single object argument");return S[0]})]]));Y(this,"tests",new Map([["boolean",S=>S.type==="BooleanValue"],["callable",S=>S instanceof Ge],["odd",S=>{if(!(S instanceof be))throw new Error(`cannot odd on ${S.type}`);return S.value%2!==0}],["even",S=>{if(!(S instanceof be))throw new Error(`cannot even on ${S.type}`);return S.value%2===0}],["false",S=>S.type==="BooleanValue"&&!S.value],["true",S=>S.type==="BooleanValue"&&S.value],["none",S=>S.type==="NullValue"],["string",S=>S.type==="StringValue"],["number",S=>S instanceof be||S instanceof Se],["integer",S=>S instanceof be],["iterable",S=>S.type==="ArrayValue"||S.type==="StringValue"],["mapping",S=>S.type==="ObjectValue"],["lower",S=>{const Q=S.value;return S.type==="StringValue"&&Q===Q.toLowerCase()}],["upper",S=>{const Q=S.value;return S.type==="StringValue"&&Q===Q.toUpperCase()}],["none",S=>S.type==="NullValue"],["defined",S=>S.type!=="UndefinedValue"],["undefined",S=>S.type==="UndefinedValue"],["equalto",(S,Q)=>S.value===Q.value],["eq",(S,Q)=>S.value===Q.value]]));this.parent=S}set(S,Q){return this.declareVariable(S,It(Q))}declareVariable(S,Q){if(this.variables.has(S))throw new SyntaxError(`Variable already declared: ${S}`);return this.variables.set(S,Q),Q}setVariable(S,Q){return this.variables.set(S,Q),Q}resolve(S){if(this.variables.has(S))return this;if(this.parent)return this.parent.resolve(S);throw new Error(`Unknown variable: ${S}`)}lookupVariable(S){try{return this.resolve(S).variables.get(S)??new Ye}catch{return new Ye}}};function Je(S){S.set("false",!1),S.set("true",!0),S.set("none",null),S.set("raise_exception",Q=>{throw new Error(Q)}),S.set("range",Te),S.set("strftime_now",Me),S.set("True",!0),S.set("False",!1),S.set("None",null)}var it=class{constructor(S){Y(this,"global");this.global=S??new De}run(S){return this.evaluate(S,this.global)}evaluateBinaryExpression(S,Q){const B=this.evaluate(S.left,Q);switch(S.operator.value){case"and":return B.__bool__().value?this.evaluate(S.right,Q):B;case"or":return B.__bool__().value?B:this.evaluate(S.right,Q)}const q=this.evaluate(S.right,Q);switch(S.operator.value){case"==":return new Ie(B.value==q.value);case"!=":return new Ie(B.value!=q.value)}if(B instanceof Ye||q instanceof Ye){if(q instanceof Ye&&["in","not in"].includes(S.operator.value))return new Ie(S.operator.value==="not in");throw new Error(`Cannot perform operation ${S.operator.value} on undefined values`)}else{if(B instanceof nt||q instanceof nt)throw new Error("Cannot perform operation on null values");if(S.operator.value==="~")return new we(B.value.toString()+q.value.toString());if((B instanceof be||B instanceof Se)&&(q instanceof be||q instanceof Se)){const re=B.value,ge=q.value;switch(S.operator.value){case"+":case"-":case"*":{const Fe=S.operator.value==="+"?re+ge:S.operator.value==="-"?re-ge:re*ge;return B instanceof Se||q instanceof Se?new Se(Fe):new be(Fe)}case"/":return new Se(re/ge);case"%":{const Fe=re%ge;return B instanceof Se||q instanceof Se?new Se(Fe):new be(Fe)}case"<":return new Ie(re<ge);case">":return new Ie(re>ge);case">=":return new Ie(re>=ge);case"<=":return new Ie(re<=ge)}}else if(B instanceof xe&&q instanceof xe)switch(S.operator.value){case"+":return new xe(B.value.concat(q.value))}else if(q instanceof xe){const re=q.value.find(ge=>ge.value===B.value)!==void 0;switch(S.operator.value){case"in":return new Ie(re);case"not in":return new Ie(!re)}}}if(B instanceof we||q instanceof we)switch(S.operator.value){case"+":return new we(B.value.toString()+q.value.toString())}if(B instanceof we&&q instanceof we)switch(S.operator.value){case"in":return new Ie(q.value.includes(B.value));case"not in":return new Ie(!q.value.includes(B.value))}if(B instanceof we&&q instanceof ze)switch(S.operator.value){case"in":return new Ie(q.value.has(B.value));case"not in":return new Ie(!q.value.has(B.value))}throw new SyntaxError(`Unknown operator "${S.operator.value}" between ${B.type} and ${q.type}`)}evaluateArguments(S,Q){const B=[],q=new Map;for(const re of S)if(re.type==="SpreadExpression"){const ge=re,Fe=this.evaluate(ge.argument,Q);if(!(Fe instanceof xe))throw new Error(`Cannot unpack non-iterable type: ${Fe.type}`);for(const rt of Fe.value)B.push(rt)}else if(re.type==="KeywordArgumentExpression"){const ge=re;q.set(ge.key.value,this.evaluate(ge.value,Q))}else{if(q.size>0)throw new Error("Positional arguments must come before keyword arguments");B.push(this.evaluate(re,Q))}return[B,q]}applyFilter(S,Q,B){if(Q.type==="Identifier"){const q=Q;if(q.value==="tojson")return new we(St(S));if(S instanceof xe)switch(q.value){case"list":return S;case"first":return S.value[0];case"last":return S.value[S.value.length-1];case"length":return new be(S.value.length);case"reverse":return new xe(S.value.reverse());case"sort":return new xe(S.value.sort((re,ge)=>{if(re.type!==ge.type)throw new Error(`Cannot compare different types: ${re.type} and ${ge.type}`);switch(re.type){case"IntegerValue":case"FloatValue":return re.value-ge.value;case"StringValue":return re.value.localeCompare(ge.value);default:throw new Error(`Cannot compare type: ${re.type}`)}}));case"join":return new we(S.value.map(re=>re.value).join(""));case"string":return new we(St(S));case"unique":{const re=new Set,ge=[];for(const Fe of S.value)re.has(Fe.value)||(re.add(Fe.value),ge.push(Fe));return new xe(ge)}default:throw new Error(`Unknown ArrayValue filter: ${q.value}`)}else if(S instanceof we)switch(q.value){case"length":case"upper":case"lower":case"title":case"capitalize":{const re=S.builtins.get(q.value);if(re instanceof Ge)return re.value([],B);if(re instanceof be)return re;throw new Error(`Unknown StringValue filter: ${q.value}`)}case"trim":return new we(S.value.trim());case"indent":return new we(S.value.split(`
`).map((re,ge)=>ge===0||re.length===0?re:"    "+re).join(`
`));case"join":case"string":return S;case"int":{const re=parseInt(S.value,10);return new be(isNaN(re)?0:re)}case"float":{const re=parseFloat(S.value);return new Se(isNaN(re)?0:re)}default:throw new Error(`Unknown StringValue filter: ${q.value}`)}else if(S instanceof be||S instanceof Se)switch(q.value){case"abs":return S instanceof be?new be(Math.abs(S.value)):new Se(Math.abs(S.value));case"int":return new be(Math.floor(S.value));case"float":return new Se(S.value);default:throw new Error(`Unknown NumericValue filter: ${q.value}`)}else if(S instanceof ze)switch(q.value){case"items":return new xe(Array.from(S.value.entries()).map(([re,ge])=>new xe([new we(re),ge])));case"length":return new be(S.value.size);default:throw new Error(`Unknown ObjectValue filter: ${q.value}`)}else if(S instanceof Ie)switch(q.value){case"bool":return new Ie(S.value);case"int":return new be(S.value?1:0);case"float":return new Se(S.value?1:0);case"string":return new we(S.value?"true":"false");default:throw new Error(`Unknown BooleanValue filter: ${q.value}`)}throw new Error(`Cannot apply filter "${q.value}" to type: ${S.type}`)}else if(Q.type==="CallExpression"){const q=Q;if(q.callee.type!=="Identifier")throw new Error(`Unknown filter: ${q.callee.type}`);const re=q.callee.value;if(re==="tojson"){const[,ge]=this.evaluateArguments(q.args,B),Fe=ge.get("indent")??new nt;if(!(Fe instanceof be||Fe instanceof nt))throw new Error("If set, indent must be a number");return new we(St(S,Fe.value))}else if(re==="join"){let ge;if(S instanceof we)ge=Array.from(S.value);else if(S instanceof xe)ge=S.value.map(mt=>mt.value);else throw new Error(`Cannot apply filter "${re}" to type: ${S.type}`);const[Fe,rt]=this.evaluateArguments(q.args,B),gt=Fe.at(0)??rt.get("separator")??new we("");if(!(gt instanceof we))throw new Error("separator must be a string");return new we(ge.join(gt.value))}else if(re==="int"||re==="float"){const[ge,Fe]=this.evaluateArguments(q.args,B),rt=ge.at(0)??Fe.get("default")??(re==="int"?new be(0):new Se(0));if(S instanceof we){const gt=re==="int"?parseInt(S.value,10):parseFloat(S.value);return isNaN(gt)?rt:re==="int"?new be(gt):new Se(gt)}else{if(S instanceof be||S instanceof Se)return S;if(S instanceof Ie)return re==="int"?new be(S.value?1:0):new Se(S.value?1:0);throw new Error(`Cannot apply filter "${re}" to type: ${S.type}`)}}else if(re==="default"){const[ge,Fe]=this.evaluateArguments(q.args,B),rt=ge[0]??new we(""),gt=ge[1]??Fe.get("boolean")??new Ie(!1);if(!(gt instanceof Ie))throw new Error("`default` filter flag must be a boolean");return S instanceof Ye||gt.value&&!S.__bool__().value?rt:S}if(S instanceof xe){switch(re){case"selectattr":case"rejectattr":{const ge=re==="selectattr";if(S.value.some(st=>!(st instanceof ze)))throw new Error(`\`${re}\` can only be applied to array of objects`);if(q.args.some(st=>st.type!=="StringLiteral"))throw new Error(`arguments of \`${re}\` must be strings`);const[Fe,rt,gt]=q.args.map(st=>this.evaluate(st,B));let mt;if(rt){const st=B.tests.get(rt.value);if(!st)throw new Error(`Unknown test: ${rt.value}`);mt=st}else mt=(...st)=>st[0].__bool__().value;const xt=S.value.filter(st=>{const Bt=st.value.get(Fe.value),Vt=Bt?mt(Bt,gt):!1;return ge?Vt:!Vt});return new xe(xt)}case"map":{const[,ge]=this.evaluateArguments(q.args,B);if(ge.has("attribute")){const Fe=ge.get("attribute");if(!(Fe instanceof we))throw new Error("attribute must be a string");const rt=ge.get("default"),gt=S.value.map(mt=>{if(!(mt instanceof ze))throw new Error("items in map must be an object");return mt.value.get(Fe.value)??rt??new Ye});return new xe(gt)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${re}`)}else if(S instanceof we){switch(re){case"indent":{const[ge,Fe]=this.evaluateArguments(q.args,B),rt=ge.at(0)??Fe.get("width")??new be(4);if(!(rt instanceof be))throw new Error("width must be a number");const gt=ge.at(1)??Fe.get("first")??new Ie(!1),mt=ge.at(2)??Fe.get("blank")??new Ie(!1),xt=S.value.split(`
`),st=" ".repeat(rt.value),Bt=xt.map((Vt,Nr)=>!gt.value&&Nr===0||!mt.value&&Vt.length===0?Vt:st+Vt);return new we(Bt.join(`
`))}case"replace":{const ge=S.builtins.get("replace");if(!(ge instanceof Ge))throw new Error("replace filter not available");const[Fe,rt]=this.evaluateArguments(q.args,B);return ge.value([...Fe,new Qe(rt)],B)}}throw new Error(`Unknown StringValue filter: ${re}`)}else throw new Error(`Cannot apply filter "${re}" to type: ${S.type}`)}throw new Error(`Unknown filter: ${Q.type}`)}evaluateFilterExpression(S,Q){const B=this.evaluate(S.operand,Q);return this.applyFilter(B,S.filter,Q)}evaluateTestExpression(S,Q){const B=this.evaluate(S.operand,Q),q=Q.tests.get(S.test.value);if(!q)throw new Error(`Unknown test: ${S.test.value}`);const re=q(B);return new Ie(S.negate?!re:re)}evaluateSelectExpression(S,Q){return this.evaluate(S.test,Q).__bool__().value?this.evaluate(S.lhs,Q):new Ye}evaluateUnaryExpression(S,Q){const B=this.evaluate(S.argument,Q);switch(S.operator.value){case"not":return new Ie(!B.value);default:throw new SyntaxError(`Unknown operator: ${S.operator.value}`)}}evaluateTernaryExpression(S,Q){return this.evaluate(S.condition,Q).__bool__().value?this.evaluate(S.trueExpr,Q):this.evaluate(S.falseExpr,Q)}evalProgram(S,Q){return this.evaluateBlock(S.body,Q)}evaluateBlock(S,Q){let B="";for(const q of S){const re=this.evaluate(q,Q);re.type!=="NullValue"&&re.type!=="UndefinedValue"&&(B+=re.toString())}return new we(B)}evaluateIdentifier(S,Q){return Q.lookupVariable(S.value)}evaluateCallExpression(S,Q){const[B,q]=this.evaluateArguments(S.args,Q);q.size>0&&B.push(new Qe(q));const re=this.evaluate(S.callee,Q);if(re.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${re.type}`);return re.value(B,Q)}evaluateSliceExpression(S,Q,B){if(!(S instanceof xe||S instanceof we))throw new Error("Slice object must be an array or string");const q=this.evaluate(Q.start,B),re=this.evaluate(Q.stop,B),ge=this.evaluate(Q.step,B);if(!(q instanceof be||q instanceof Ye))throw new Error("Slice start must be numeric or undefined");if(!(re instanceof be||re instanceof Ye))throw new Error("Slice stop must be numeric or undefined");if(!(ge instanceof be||ge instanceof Ye))throw new Error("Slice step must be numeric or undefined");return S instanceof xe?new xe(Re(S.value,q.value,re.value,ge.value)):new we(Re(Array.from(S.value),q.value,re.value,ge.value).join(""))}evaluateMemberExpression(S,Q){const B=this.evaluate(S.object,Q);let q;if(S.computed){if(S.property.type==="SliceExpression")return this.evaluateSliceExpression(B,S.property,Q);q=this.evaluate(S.property,Q)}else q=new we(S.property.value);let re;if(B instanceof ze){if(!(q instanceof we))throw new Error(`Cannot access property with non-string: got ${q.type}`);re=B.value.get(q.value)??B.builtins.get(q.value)}else if(B instanceof xe||B instanceof we)if(q instanceof be)re=B.value.at(q.value),B instanceof we&&(re=new we(B.value.at(q.value)));else if(q instanceof we)re=B.builtins.get(q.value);else throw new Error(`Cannot access property with non-string/non-number: got ${q.type}`);else{if(!(q instanceof we))throw new Error(`Cannot access property with non-string: got ${q.type}`);re=B.builtins.get(q.value)}return re instanceof Pe?re:new Ye}evaluateSet(S,Q){const B=S.value?this.evaluate(S.value,Q):this.evaluateBlock(S.body,Q);if(S.assignee.type==="Identifier"){const q=S.assignee.value;Q.setVariable(q,B)}else if(S.assignee.type==="TupleLiteral"){const q=S.assignee;if(!(B instanceof xe))throw new Error(`Cannot unpack non-iterable type in set: ${B.type}`);const re=B.value;if(re.length!==q.value.length)throw new Error(`Too ${q.value.length>re.length?"few":"many"} items to unpack in set`);for(let ge=0;ge<q.value.length;++ge){const Fe=q.value[ge];if(Fe.type!=="Identifier")throw new Error(`Cannot unpack to non-identifier in set: ${Fe.type}`);Q.setVariable(Fe.value,re[ge])}}else if(S.assignee.type==="MemberExpression"){const q=S.assignee,re=this.evaluate(q.object,Q);if(!(re instanceof ze))throw new Error("Cannot assign to member of non-object");if(q.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");re.value.set(q.property.value,B)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(S.assignee)}`);return new nt}evaluateIf(S,Q){const B=this.evaluate(S.test,Q);return this.evaluateBlock(B.__bool__().value?S.body:S.alternate,Q)}evaluateFor(S,Q){const B=new De(Q);let q,re;if(S.iterable.type==="SelectExpression"){const mt=S.iterable;re=this.evaluate(mt.lhs,B),q=mt.test}else re=this.evaluate(S.iterable,B);if(!(re instanceof xe||re instanceof ze))throw new Error(`Expected iterable or object type in for loop: got ${re.type}`);re instanceof ze&&(re=re.keys());const ge=[],Fe=[];for(let mt=0;mt<re.value.length;++mt){const xt=new De(B),st=re.value[mt];let Bt;if(S.loopvar.type==="Identifier")Bt=Vt=>Vt.setVariable(S.loopvar.value,st);else if(S.loopvar.type==="TupleLiteral"){const Vt=S.loopvar;if(st.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${st.type}`);const Nr=st;if(Vt.value.length!==Nr.value.length)throw new Error(`Too ${Vt.value.length>Nr.value.length?"few":"many"} items to unpack`);Bt=Qr=>{for(let sr=0;sr<Vt.value.length;++sr){if(Vt.value[sr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Vt.value[sr].type}`);Qr.setVariable(Vt.value[sr].value,Nr.value[sr])}}}else throw new Error(`Invalid loop variable(s): ${S.loopvar.type}`);q&&(Bt(xt),!this.evaluate(q,xt).__bool__().value)||(ge.push(st),Fe.push(Bt))}let rt="",gt=!0;for(let mt=0;mt<ge.length;++mt){const xt=new Map([["index",new be(mt+1)],["index0",new be(mt)],["revindex",new be(ge.length-mt)],["revindex0",new be(ge.length-mt-1)],["first",new Ie(mt===0)],["last",new Ie(mt===ge.length-1)],["length",new be(ge.length)],["previtem",mt>0?ge[mt-1]:new Ye],["nextitem",mt<ge.length-1?ge[mt+1]:new Ye]]);B.setVariable("loop",new ze(xt)),Fe[mt](B);try{const st=this.evaluateBlock(S.body,B);rt+=st.value}catch(st){if(st instanceof ke)continue;if(st instanceof ye)break;throw st}gt=!1}if(gt){const mt=this.evaluateBlock(S.defaultBlock,B);rt+=mt.value}return new we(rt)}evaluateMacro(S,Q){return Q.setVariable(S.name.value,new Ge((B,q)=>{var Fe;const re=new De(q);B=B.slice();let ge;((Fe=B.at(-1))==null?void 0:Fe.type)==="KeywordArgumentsValue"&&(ge=B.pop());for(let rt=0;rt<S.args.length;++rt){const gt=S.args[rt],mt=B[rt];if(gt.type==="Identifier"){const xt=gt;if(!mt)throw new Error(`Missing positional argument: ${xt.value}`);re.setVariable(xt.value,mt)}else if(gt.type==="KeywordArgumentExpression"){const xt=gt,st=mt??(ge==null?void 0:ge.value.get(xt.key.value))??this.evaluate(xt.value,re);re.setVariable(xt.key.value,st)}else throw new Error(`Unknown argument type: ${gt.type}`)}return this.evaluateBlock(S.body,re)})),new nt}evaluateCallStatement(S,Q){const B=new Ge((rt,gt)=>{const mt=new De(gt);if(S.callerArgs)for(let xt=0;xt<S.callerArgs.length;++xt){const st=S.callerArgs[xt];if(st.type!=="Identifier")throw new Error(`Caller parameter must be an identifier, got ${st.type}`);mt.setVariable(st.value,rt[xt]??new Ye)}return this.evaluateBlock(S.body,mt)}),[q,re]=this.evaluateArguments(S.call.args,Q);q.push(new Qe(re));const ge=this.evaluate(S.call.callee,Q);if(ge.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ge.type}`);const Fe=new De(Q);return Fe.setVariable("caller",B),ge.value(q,Fe)}evaluateFilterStatement(S,Q){const B=this.evaluateBlock(S.body,Q);return this.applyFilter(B,S.filter,Q)}evaluate(S,Q){if(!S)return new Ye;switch(S.type){case"Program":return this.evalProgram(S,Q);case"Set":return this.evaluateSet(S,Q);case"If":return this.evaluateIf(S,Q);case"For":return this.evaluateFor(S,Q);case"Macro":return this.evaluateMacro(S,Q);case"CallStatement":return this.evaluateCallStatement(S,Q);case"Break":throw new ye;case"Continue":throw new ke;case"IntegerLiteral":return new be(S.value);case"FloatLiteral":return new Se(S.value);case"StringLiteral":return new we(S.value);case"ArrayLiteral":return new xe(S.value.map(B=>this.evaluate(B,Q)));case"TupleLiteral":return new Ze(S.value.map(B=>this.evaluate(B,Q)));case"ObjectLiteral":{const B=new Map;for(const[q,re]of S.value){const ge=this.evaluate(q,Q);if(!(ge instanceof we))throw new Error(`Object keys must be strings: got ${ge.type}`);B.set(ge.value,this.evaluate(re,Q))}return new ze(B)}case"Identifier":return this.evaluateIdentifier(S,Q);case"CallExpression":return this.evaluateCallExpression(S,Q);case"MemberExpression":return this.evaluateMemberExpression(S,Q);case"UnaryExpression":return this.evaluateUnaryExpression(S,Q);case"BinaryExpression":return this.evaluateBinaryExpression(S,Q);case"FilterExpression":return this.evaluateFilterExpression(S,Q);case"FilterStatement":return this.evaluateFilterStatement(S,Q);case"TestExpression":return this.evaluateTestExpression(S,Q);case"SelectExpression":return this.evaluateSelectExpression(S,Q);case"Ternary":return this.evaluateTernaryExpression(S,Q);case"Comment":return new nt;default:throw new SyntaxError(`Unknown node type: ${S.type}`)}}};function It(S){switch(typeof S){case"number":return Number.isInteger(S)?new be(S):new Se(S);case"string":return new we(S);case"boolean":return new Ie(S);case"undefined":return new Ye;case"object":return S===null?new nt:Array.isArray(S)?new xe(S.map(It)):new ze(new Map(Object.entries(S).map(([Q,B])=>[Q,It(B)])));case"function":return new Ge((Q,B)=>{const q=S(...Q.map(re=>re.value))??null;return It(q)});default:throw new Error(`Cannot convert to runtime value: ${S}`)}}function St(S,Q,B){const q=B??0;switch(S.type){case"NullValue":case"UndefinedValue":return"null";case"IntegerValue":case"FloatValue":case"StringValue":case"BooleanValue":return JSON.stringify(S.value);case"ArrayValue":case"ObjectValue":{const re=Q?" ".repeat(Q):"",ge=`
`+re.repeat(q),Fe=ge+re;if(S.type==="ArrayValue"){const rt=S.value.map(gt=>St(gt,Q,q+1));return Q?`[${Fe}${rt.join(`,${Fe}`)}${ge}]`:`[${rt.join(", ")}]`}else{const rt=Array.from(S.value.entries()).map(([gt,mt])=>{const xt=`"${gt}": ${St(mt,Q,q+1)}`;return Q?`${Fe}${xt}`:xt});return Q?`{${rt.join(",")}${ge}}`:`{${rt.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${S.type}`)}}var bt=`
`,Mr="{%- ",Pr=" -%}";function jr(S){switch(S.operator.type){case"MultiplicativeBinaryOperator":return 4;case"AdditiveBinaryOperator":return 3;case"ComparisonBinaryOperator":return 2;case"Identifier":return S.operator.value==="and"?1:S.operator.value==="in"||S.operator.value==="not in"?2:0}return 0}function as(S,Q="	"){const B=typeof Q=="number"?" ".repeat(Q):Q;return Cr(S.body,0,B).replace(/\n$/,"")}function Qt(...S){return Mr+S.join(" ")+Pr}function Cr(S,Q,B){return S.map(q=>Hs(q,Q,B)).join(bt)}function Hs(S,Q,B){const q=B.repeat(Q);switch(S.type){case"Program":return Cr(S.body,Q,B);case"If":return qs(S,Q,B);case"For":return Qs(S,Q,B);case"Set":return Xs(S,Q,B);case"Macro":return ht(S,Q,B);case"Break":return q+Qt("break");case"Continue":return q+Qt("continue");case"CallStatement":return As(S,Q,B);case"FilterStatement":return ks(S,Q,B);case"Comment":return q+"{# "+S.value+" #}";default:return q+"{{- "+$t(S)+" -}}"}}function qs(S,Q,B){const q=B.repeat(Q),re=[];let ge=S;for(;ge&&(re.push({test:ge.test,body:ge.body}),ge.alternate.length===1&&ge.alternate[0].type==="If");)ge=ge.alternate[0];let Fe=q+Qt("if",$t(re[0].test))+bt+Cr(re[0].body,Q+1,B);for(let rt=1;rt<re.length;++rt)Fe+=bt+q+Qt("elif",$t(re[rt].test))+bt+Cr(re[rt].body,Q+1,B);return ge&&ge.alternate.length>0&&(Fe+=bt+q+Qt("else")+bt+Cr(ge.alternate,Q+1,B)),Fe+=bt+q+Qt("endif"),Fe}function Qs(S,Q,B){const q=B.repeat(Q);let re="";if(S.iterable.type==="SelectExpression"){const Fe=S.iterable;re=`${$t(Fe.lhs)} if ${$t(Fe.test)}`}else re=$t(S.iterable);let ge=q+Qt("for",$t(S.loopvar),"in",re)+bt+Cr(S.body,Q+1,B);return S.defaultBlock.length>0&&(ge+=bt+q+Qt("else")+bt+Cr(S.defaultBlock,Q+1,B)),ge+=bt+q+Qt("endfor"),ge}function Xs(S,Q,B){const q=B.repeat(Q),re=$t(S.assignee),ge=S.value?$t(S.value):"",Fe=q+Qt("set",`${re}${S.value?" = "+ge:""}`);return S.body.length===0?Fe:Fe+bt+Cr(S.body,Q+1,B)+bt+q+Qt("endset")}function ht(S,Q,B){const q=B.repeat(Q),re=S.args.map($t).join(", ");return q+Qt("macro",`${S.name.value}(${re})`)+bt+Cr(S.body,Q+1,B)+bt+q+Qt("endmacro")}function As(S,Q,B){const q=B.repeat(Q),re=S.callerArgs&&S.callerArgs.length>0?`(${S.callerArgs.map($t).join(", ")})`:"",ge=$t(S.call);let Fe=q+Qt(`call${re}`,ge)+bt;return Fe+=Cr(S.body,Q+1,B)+bt,Fe+=q+Qt("endcall"),Fe}function ks(S,Q,B){const q=B.repeat(Q),re=S.filter.type==="Identifier"?S.filter.value:$t(S.filter);let ge=q+Qt("filter",re)+bt;return ge+=Cr(S.body,Q+1,B)+bt,ge+=q+Qt("endfilter"),ge}function $t(S,Q=-1){switch(S.type){case"SpreadExpression":return`*${$t(S.argument)}`;case"Identifier":return S.value;case"IntegerLiteral":return`${S.value}`;case"FloatLiteral":return`${S.value}`;case"StringLiteral":return JSON.stringify(S.value);case"BinaryExpression":{const B=S,q=jr(B),re=$t(B.left,q),ge=$t(B.right,q+1),Fe=`${re} ${B.operator.value} ${ge}`;return q<Q?`(${Fe})`:Fe}case"UnaryExpression":{const B=S;return B.operator.value+(B.operator.value==="not"?" ":"")+$t(B.argument,1/0)}case"CallExpression":{const B=S,q=B.args.map($t).join(", ");return`${$t(B.callee)}(${q})`}case"MemberExpression":{const B=S;let q=$t(B.object);["Identifier","MemberExpression","CallExpression","StringLiteral","IntegerLiteral","FloatLiteral","ArrayLiteral","TupleLiteral","ObjectLiteral"].includes(B.object.type)||(q=`(${q})`);let re=$t(B.property);return!B.computed&&B.property.type!=="Identifier"&&(re=`(${re})`),B.computed?`${q}[${re}]`:`${q}.${re}`}case"FilterExpression":{const B=S,q=$t(B.operand,1/0);return B.filter.type==="CallExpression"?`${q} | ${$t(B.filter)}`:`${q} | ${B.filter.value}`}case"SelectExpression":{const B=S;return`${$t(B.lhs)} if ${$t(B.test)}`}case"TestExpression":{const B=S;return`${$t(B.operand)} is${B.negate?" not":""} ${B.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const B=S.value.map($t),q=S.type==="ArrayLiteral"?"[]":"()";return`${q[0]}${B.join(", ")}${q[1]}`}case"ObjectLiteral":return`{${Array.from(S.value.entries()).map(([q,re])=>`${$t(q)}: ${$t(re)}`).join(", ")}}`;case"SliceExpression":{const B=S,q=B.start?$t(B.start):"",re=B.stop?$t(B.stop):"",ge=B.step?`:${$t(B.step)}`:"";return`${q}:${re}${ge}`}case"KeywordArgumentExpression":{const B=S;return`${B.key.value}=${$t(B.value)}`}case"Ternary":{const B=S,q=`${$t(B.trueExpr)} if ${$t(B.condition,0)} else ${$t(B.falseExpr)}`;return Q>-1?`(${q})`:q}default:throw new Error(`Unknown expression type: ${S.type}`)}}var Xt=class{constructor(S){Y(this,"parsed");const Q=p(S,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=oe(Q)}render(S){const Q=new De;if(Je(Q),S)for(const[re,ge]of Object.entries(S))Q.set(re,ge);return new it(Q).run(this.parsed).value}format(S){return as(this.parsed,(S==null?void 0:S.indent)||"	")}}},"./src/backends/onnx.js":(e,r,t)=>{var s;t.r(r),t.d(r,{Tensor:()=>a.Tensor,createInferenceSession:()=>A,deviceToExecutionProviders:()=>f,isONNXProxy:()=>$,isONNXTensor:()=>g});var i=t("./src/env.js"),n=t("?2ce3"),o=t("onnxruntime-web"),a=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let p,d;const u=Symbol.for("onnxruntime");if(u in globalThis)d=globalThis[u];else if(i.apis.IS_NODE_ENV){switch(d=n??(s||(s=t.t(n,2))),process.platform){case"win32":c.push("dml");break;case"linux":process.arch==="x64"&&c.push("cuda");break}c.push("cpu"),p=["cpu"]}else d=o,i.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),i.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),p=["wasm"];const _=d.InferenceSession;function f(y=null){if(!y)return p;switch(y){case"auto":return c;case"gpu":return c.filter(v=>["webgpu","cuda","dml","webnn-gpu"].includes(v))}if(c.includes(y))return[l[y]??y];throw new Error(`Unsupported device: "${y}". Should be one of: ${c.join(", ")}.`)}let b=null;async function A(y,v,T){b&&await b;const x=_.create(y,v);b??(b=x);const P=await x;return P.config=T,P}function g(y){return y instanceof d.Tensor}const w=d==null?void 0:d.env;w!=null&&w.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!w.wasm.wasmPaths&&(w.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${i.env.version}/dist/`),w.wasm.proxy=!1),w!=null&&w.webgpu&&(w.webgpu.powerPreference="high-performance");function $(){var y;return(y=w==null?void 0:w.wasm)==null?void 0:y.proxy}i.env.backends.onnx=w},"./src/base/feature_extraction_utils.js":(e,r,t)=>{t.r(r),t.d(r,{FeatureExtractor:()=>o,validate_audio_inputs:()=>a});var s=t("./src/utils/constants.js"),i=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class o extends i.Callable{constructor(c){super(),this.config=c}static async from_pretrained(c,p={}){const d=await(0,n.getModelJSON)(c,s.FEATURE_EXTRACTOR_NAME,!0,p);return new this(d)}}function a(l,c){var p;if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${c} expects input to be a Float32Array or a Float64Array, but got ${((p=l==null?void 0:l.constructor)==null?void 0:p.name)??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,r,t)=>{t.r(r),t.d(r,{ImageProcessor:()=>y,center_to_corners_format:()=>d,post_process_instance_segmentation:()=>$,post_process_object_detection:()=>u,post_process_panoptic_segmentation:()=>w,post_process_semantic_segmentation:()=>_});var s=t("./src/utils/generic.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/utils/image.js");var o=t("./src/utils/core.js"),a=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function c(v,T,x=0,P=null){const D=v/T;let L=(0,n.bankers_round)(D)*T;return P!==null&&L>P&&(L=Math.floor(D)*T),L<x&&(L=Math.ceil(D)*T),L}function p([v,T],x){return[Math.max(Math.floor(v/x),1)*x,Math.max(Math.floor(T/x),1)*x]}function d([v,T,x,P]){return[v-x/2,T-P/2,v+x/2,T+P/2]}function u(v,T=.5,x=null,P=!1){const D=v.logits,L=v.pred_boxes,[G,K,R]=D.dims;if(x!==null&&x.length!==G)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let te=[];for(let H=0;H<G;++H){let ee=x!==null?x[H]:null,Z={boxes:[],classes:[],scores:[]},ne=D[H],me=L[H];for(let ue=0;ue<K;++ue){let j=ne[ue],F=[],U;if(P){U=j.sigmoid().data;for(let se=0;se<U.length;++se)U[se]>T&&F.push(se)}else{let se=(0,n.max)(j.data)[1];if(se===R-1||(U=(0,n.softmax)(j.data),U[se]<T))continue;F.push(se)}for(const se of F){let fe=me[ue].data;fe=d(fe),ee!==null&&(fe=fe.map((oe,Te)=>oe*ee[(Te+1)%2])),Z.boxes.push(fe),Z.classes.push(se),Z.scores.push(U[se])}}te.push(Z)}return te}function _(v,T=null){const x=v.logits,P=x.dims[0];if(T!==null&&T.length!==P)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const D=[];for(let L=0;L<P;++L){const G=T!==null?T[L]:null;let K=x[L];G!==null&&(K=(0,i.interpolate)(K,G,"bilinear",!1));const[R,te]=G??K.dims.slice(-2),H=new i.Tensor("int32",new Int32Array(R*te),[R,te]),ee=K[0].data,Z=H.data;for(let ue=1;ue<K.dims[0];++ue){const j=K[ue].data;for(let F=0;F<j.length;++F)j[F]>ee[F]&&(ee[F]=j[F],Z[F]=ue)}const ne=new Array(K.dims[0]);for(let ue=0;ue<Z.length;++ue){const j=Z[ue];ne[j]=j}const me=ne.filter(ue=>ue!==void 0);D.push({segmentation:H,labels:me})}return D}function f(v,T,x,P){const D=[],L=[],G=[];for(let K=0;K<v.dims[0];++K){const R=v[K],te=T[K],H=(0,n.max)(R.data)[1];if(H===P)continue;const Z=(0,n.softmax)(R.data)[H];Z>x&&(D.push(te),L.push(Z),G.push(H))}return[D,L,G]}function b(v,T,x,P=.5,D=.8){const L=[];let G=0,K=0;const R=T[x].data;for(let H=0;H<v.length;++H)v[H]===x&&(L.push(H),++G),R[H]>=P&&++K;let te=G>0&&K>0;return te&&(te=G/K>D),[te,L]}function A(v,T,x,P,D,L=null,G=null){const[K,R]=G??v[0].dims,te=new i.Tensor("int32",new Int32Array(K*R),[K,R]),H=[];if(G!==null)for(let ue=0;ue<v.length;++ue)v[ue]=(0,i.interpolate)(v[ue],G,"bilinear",!1);const ee=new Int32Array(v[0].data.length),Z=new Float32Array(v[0].data.length);for(let ue=0;ue<v.length;++ue){let j=T[ue];const F=v[ue].data;for(let U=0;U<F.length;++U)F[U]*=j,F[U]>Z[U]&&(ee[U]=ue,Z[U]=F[U])}let ne=0;const me=te.data;for(let ue=0;ue<x.length;++ue){const j=x[ue],[F,U]=b(ee,v,ue,P,D);if(F){++ne;for(const se of U)me[se]=ne;H.push({id:ne,label_id:j,score:T[ue]})}}return[te,H]}function g(v,T,x=28,P=56*56,D=14*14*4*1280){if(v<x||T<x)throw new Error(`height:${v} or width:${T} must be larger than factor:${x}`);if(Math.max(v,T)/Math.min(v,T)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(v,T)/Math.min(v,T)}`);let L=Math.round(v/x)*x,G=Math.round(T/x)*x;if(L*G>D){const K=Math.sqrt(v*T/D);L=Math.floor(v/K/x)*x,G=Math.floor(T/K/x)*x}else if(L*G<P){const K=Math.sqrt(P/(v*T));L=Math.ceil(v*K/x)*x,G=Math.ceil(T*K/x)*x}return[L,G]}function w(v,T=.5,x=.5,P=.8,D=null,L=null){D===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),D=new Set);const G=v.class_queries_logits??v.logits,R=(v.masks_queries_logits??v.pred_masks).sigmoid();let[te,H,ee]=G.dims;if(ee-=1,L!==null&&L.length!==te)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Z=[];for(let ne=0;ne<te;++ne){let me=L!==null?L[ne]:null,ue=G[ne],j=R[ne],[F,U,se]=f(ue,j,T,ee);if(se.length===0){let[Te,Re]=me??j.dims.slice(-2),He=new i.Tensor("int32",new Int32Array(Te*Re).fill(-1),[Te,Re]);Z.push({segmentation:He,segments_info:[]});continue}let[fe,oe]=A(F,U,se,x,P,D,me);Z.push({segmentation:fe,segments_info:oe})}return Z}function $(v,T=.5,x=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class y extends s.Callable{constructor(T){super(),this.image_mean=T.image_mean??T.mean,this.image_std=T.image_std??T.std,this.resample=T.resample??2,this.do_rescale=T.do_rescale??!0,this.rescale_factor=T.rescale_factor??1/255,this.do_normalize=T.do_normalize,this.do_thumbnail=T.do_thumbnail,this.size=T.size??T.image_size,this.do_resize=T.do_resize??this.size!==void 0,this.size_divisibility=T.size_divisibility??T.size_divisor,this.do_center_crop=T.do_center_crop,this.crop_size=T.crop_size,this.do_convert_rgb=T.do_convert_rgb??!0,this.do_crop_margin=T.do_crop_margin,this.pad_size=T.pad_size,this.do_pad=T.do_pad,this.min_pixels=T.min_pixels,this.max_pixels=T.max_pixels,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=T.do_flip_channel_order??!1,this.config=T}async thumbnail(T,x,P=2){const D=T.height,L=T.width,G=x.height,K=x.width;let R=Math.min(D,G),te=Math.min(L,K);return R===D&&te===L?T:(D>L?te=Math.floor(L*R/D):L>D&&(R=Math.floor(D*te/L)),await T.resize(te,R,{resample:P}))}async crop_margin(T,x=200){const P=T.clone().grayscale(),D=(0,n.min)(P.data)[0],G=(0,n.max)(P.data)[0]-D;if(G===0)return T;const K=x/255;let R=P.width,te=P.height,H=0,ee=0;const Z=P.data;for(let ne=0;ne<P.height;++ne){const me=ne*P.width;for(let ue=0;ue<P.width;++ue)(Z[me+ue]-D)/G<K&&(R=Math.min(R,ue),te=Math.min(te,ne),H=Math.max(H,ue),ee=Math.max(ee,ne))}return T=await T.crop([R,te,H,ee]),T}pad_image(T,x,P,{mode:D="constant",center:L=!1,constant_values:G=0}={}){const[K,R,te]=x;let H,ee;if(typeof P=="number"?(H=P,ee=P):P==="square"?H=ee=Math.max(K,R):(H=P.width,ee=P.height),H!==R||ee!==K){const Z=new Float32Array(H*ee*te);if(Array.isArray(G))for(let ue=0;ue<Z.length;++ue)Z[ue]=G[ue%te];else G!==0&&Z.fill(G);const[ne,me]=L?[Math.floor((H-R)/2),Math.floor((ee-K)/2)]:[0,0];for(let ue=0;ue<K;++ue){const j=(ue+me)*H,F=ue*R;for(let U=0;U<R;++U){const se=(j+U+ne)*te,fe=(F+U)*te;for(let oe=0;oe<te;++oe)Z[se+oe]=T[fe+oe]}}if(D==="symmetric"){if(L)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const ue=K-1,j=R-1;for(let F=0;F<ee;++F){const U=F*H,se=(0,o.calculateReflectOffset)(F,ue)*R;for(let fe=0;fe<H;++fe){if(F<K&&fe<R)continue;const oe=(U+fe)*te,Te=(se+(0,o.calculateReflectOffset)(fe,j))*te;for(let Re=0;Re<te;++Re)Z[oe+Re]=T[Te+Re]}}}T=Z,x=[ee,H,te]}return[T,x]}rescale(T){for(let x=0;x<T.length;++x)T[x]=this.rescale_factor*T[x]}get_resize_output_image_size(T,x){const[P,D]=T.size;let L,G;if(this.do_thumbnail){const{height:K,width:R}=x;L=Math.min(K,R)}else Number.isInteger(x)?(L=x,G=this.config.max_size??L):x!==void 0&&(L=x.shortest_edge,G=x.longest_edge);if(L!==void 0||G!==void 0){const K=L===void 0?1:Math.max(L/P,L/D),R=P*K,te=D*K,H=G===void 0?1:Math.min(G/R,G/te);let ee=Math.floor(Number((R*H).toFixed(2))),Z=Math.floor(Number((te*H).toFixed(2)));return this.size_divisibility!==void 0&&([ee,Z]=p([ee,Z],this.size_divisibility)),[ee,Z]}else if(x!==void 0&&x.width!==void 0&&x.height!==void 0){let K=x.width,R=x.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let te=R/D,H=K/P;Math.abs(1-H)<Math.abs(1-te)?te=H:H=te,R=c(te*D,this.config.ensure_multiple_of),K=c(H*P,this.config.ensure_multiple_of)}return[K,R]}else{if(this.size_divisibility!==void 0)return p([P,D],this.size_divisibility);if(this.min_pixels!==void 0&&this.max_pixels!==void 0){const K=this.config.patch_size*this.config.merge_size;return g(D,P,K,this.min_pixels,this.max_pixels)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(x)}`)}}async resize(T){const[x,P]=this.get_resize_output_image_size(T,this.size);return await T.resize(x,P,{resample:this.resample})}async preprocess(T,{do_normalize:x=null,do_pad:P=null,do_convert_rgb:D=null,do_convert_grayscale:L=null,do_flip_channel_order:G=null}={}){this.do_crop_margin&&(T=await this.crop_margin(T));const[K,R]=T.size;if(D??this.do_convert_rgb?T=T.rgb():L&&(T=T.grayscale()),this.do_resize&&(T=await this.resize(T)),this.do_thumbnail&&(T=await this.thumbnail(T,this.size,this.resample)),this.do_center_crop){let ne,me;Number.isInteger(this.crop_size)?(ne=this.crop_size,me=this.crop_size):(ne=this.crop_size.width,me=this.crop_size.height),T=await T.center_crop(ne,me)}const te=[T.height,T.width];let H=Float32Array.from(T.data),ee=[T.height,T.width,T.channels];if(this.do_rescale&&this.rescale(H),x??this.do_normalize){let ne=this.image_mean;Array.isArray(this.image_mean)||(ne=new Array(T.channels).fill(ne));let me=this.image_std;if(Array.isArray(this.image_std)||(me=new Array(T.channels).fill(ne)),ne.length!==T.channels||me.length!==T.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${ne.length}) and \`image_std\` (${me.length}) must match the number of channels in the image (${T.channels}).`);for(let ue=0;ue<H.length;ue+=T.channels)for(let j=0;j<T.channels;++j)H[ue+j]=(H[ue+j]-ne[j])/me[j]}if(P??this.do_pad){if(this.pad_size)[H,ee]=this.pad_image(H,[T.height,T.width,T.channels],this.pad_size);else if(this.size_divisibility){const[ne,me]=p([ee[1],ee[0]],this.size_divisibility);[H,ee]=this.pad_image(H,ee,{width:ne,height:me})}}if(G??this.do_flip_channel_order){if(ee[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let ne=0;ne<H.length;ne+=3){const me=H[ne];H[ne]=H[ne+2],H[ne+2]=me}}const Z=new i.Tensor("float32",H,ee).permute(2,0,1);return{original_size:[R,K],reshaped_input_size:te,pixel_values:Z}}async _call(T,...x){Array.isArray(T)||(T=[T]);const P=await Promise.all(T.map(L=>this.preprocess(L)));return{pixel_values:(0,i.stack)(P.map(L=>L.pixel_values),0),original_sizes:P.map(L=>L.original_size),reshaped_input_sizes:P.map(L=>L.reshaped_input_size)}}static async from_pretrained(T,x={}){const P=await(0,a.getModelJSON)(T,l.IMAGE_PROCESSOR_NAME,!0,x);return new this(P)}}},"./src/base/processing_utils.js":(e,r,t)=>{t.r(r),t.d(r,{Processor:()=>o});var s=t("./src/utils/constants.js"),i=t("./src/utils/generic.js"),n=t("./src/utils/hub.js");class o extends i.Callable{constructor(l,c,p){super(),this.config=l,this.components=c,this.chat_template=p}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,c={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,chat_template:this.chat_template??void 0,...c})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...c){for(const p of[this.image_processor,this.feature_extractor,this.tokenizer])if(p)return p(l,...c);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,c={}){const[p,d,u]=await Promise.all([this.uses_processor_config?(0,n.getModelJSON)(l,s.PROCESSOR_NAME,!0,c):{},Promise.all(this.classes.filter(_=>_ in this).map(async _=>{const f=await this[_].from_pretrained(l,c);return[_.replace(/_class$/,""),f]})).then(Object.fromEntries),this.uses_chat_template_file?(0,n.getModelText)(l,s.CHAT_TEMPLATE_NAME,!0,c):null]);return new this(p,d,u)}}Y(o,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),Y(o,"uses_processor_config",!1),Y(o,"uses_chat_template_file",!1)},"./src/configs.js":(e,r,t)=>{t.r(r),t.d(r,{AutoConfig:()=>p,PretrainedConfig:()=>c,getCacheShapes:()=>a});var s=t("./src/utils/core.js"),i=t("./src/utils/hub.js");async function n(d,u){return await(0,i.getModelJSON)(d,"config.json",!0,u)}function o(d){const u={};let _={};switch(d.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"voxtral":case"smolvlm":case"gemma3n":_=o(d.text_config);break;case"moondream1":_=o(d.phi_config);break;case"musicgen":_=o(d.decoder);break;case"multi_modality":_=o(d.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":case"modernbert-decoder":u.num_heads="num_attention_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size";break;case"llama":case"lfm2":case"smollm3":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size",u.num_attention_heads="num_attention_heads",u.dim_kv="head_dim";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":case"ernie4_5":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.dim_kv="head_dim";break;case"openelm":u.num_heads="num_kv_heads",u.num_layers="num_transformer_layers",u.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":u.num_heads="num_heads",u.num_layers="num_layers",u.hidden_size="hidden_size";break;case"bloom":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="hidden_size";break;case"mpt":u.num_heads="n_heads",u.num_layers="n_layers",u.hidden_size="d_model";break;case"exaone":u.num_heads="num_key_value_heads",u.num_layers="num_layers",u.dim_kv="head_dim",u.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":u.num_decoder_layers="num_decoder_layers",u.num_decoder_heads="num_heads",u.decoder_dim_kv="d_kv",u.num_encoder_layers="num_layers",u.num_encoder_heads="num_heads",u.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="d_model",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="d_model";break;case"speecht5":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="hidden_size",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="hidden_size";break;case"trocr":u.num_encoder_layers=u.num_decoder_layers="decoder_layers",u.num_encoder_heads=u.num_decoder_heads="decoder_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="d_model";break;case"musicgen_decoder":u.num_encoder_layers=u.num_decoder_layers="num_hidden_layers",u.num_encoder_heads=u.num_decoder_heads="num_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"moonshine":u.num_decoder_layers="decoder_num_hidden_layers",u.num_decoder_heads="decoder_num_key_value_heads",u.num_encoder_layers="encoder_num_hidden_layers",u.num_encoder_heads="encoder_num_key_value_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const b=o(d.decoder),A="num_decoder_layers"in b,g=(0,s.pick)(d,["model_type","is_encoder_decoder"]);return A?(g.num_decoder_layers=b.num_decoder_layers,g.num_decoder_heads=b.num_decoder_heads,g.decoder_hidden_size=b.decoder_hidden_size,g.num_encoder_layers=b.num_encoder_layers,g.num_encoder_heads=b.num_encoder_heads,g.encoder_hidden_size=b.encoder_hidden_size):(g.num_layers=b.num_layers,g.num_heads=b.num_heads,g.hidden_size=b.hidden_size),g}const f={..._,...(0,s.pick)(d,["model_type","multi_query","is_encoder_decoder"])};for(const b in u)f[b]=d[u[b]];return f}function a(d,u){if(d.model_type==="lfm2"){const _=(u==null?void 0:u.prefix)??"past_key_values",f=_==="present"?"present":"past",b={},{layer_types:A,num_attention_heads:g,num_key_value_heads:w,hidden_size:$,conv_L_cache:y}=d,v=$/g,T=(u==null?void 0:u.batch_size)??1;for(let x=0;x<A.length;++x)if(A[x]==="full_attention")for(const P of["key","value"])b[`${_}.${x}.${P}`]=[T,w,0,v];else if(A[x]==="conv")b[`${f}_conv.${x}`]=[T,$,y];else throw new Error(`Unsupported layer type: ${A[x]}`);return b}return l(d,u)}function l(d,{prefix:u="past_key_values",batch_size:_=1}={}){const f={},b=d.normalized_config;if(b.is_encoder_decoder&&"num_encoder_heads"in b&&"num_decoder_heads"in b){const A=b.encoder_dim_kv??b.encoder_hidden_size/b.num_encoder_heads,g=b.decoder_dim_kv??b.decoder_hidden_size/b.num_decoder_heads,w=[_,b.num_encoder_heads,0,A],$=[_,b.num_decoder_heads,0,g];for(let y=0;y<b.num_decoder_layers;++y)f[`${u}.${y}.encoder.key`]=w,f[`${u}.${y}.encoder.value`]=w,f[`${u}.${y}.decoder.key`]=$,f[`${u}.${y}.decoder.value`]=$}else{const A=b.num_heads,g=b.num_layers,w=b.dim_kv??b.hidden_size/(b.num_attention_heads??A);if(b.model_type==="falcon"){const $=[_*A,0,w];for(let y=0;y<g;++y)f[`${u}.${y}.key`]=$,f[`${u}.${y}.value`]=$}else if(b.multi_query){const $=[_*A,0,2*w];for(let y=0;y<g;++y)f[`${u}.${y}.key_value`]=$}else if(b.model_type==="bloom"){const $=[_*A,w,0],y=[_*A,0,w];for(let v=0;v<g;++v)f[`${u}.${v}.key`]=$,f[`${u}.${v}.value`]=y}else if(b.model_type==="openelm")for(let $=0;$<g;++$){const y=[_,A[$],0,w];f[`${u}.${$}.key`]=y,f[`${u}.${$}.value`]=y}else{const $=[_,A,0,w];for(let y=0;y<g;++y)f[`${u}.${y}.key`]=$,f[`${u}.${y}.value`]=$}}return f}class c{constructor(u){Y(this,"model_type",null);Y(this,"is_encoder_decoder",!1);Y(this,"max_position_embeddings");Y(this,"transformers.js_config");Object.assign(this,u),this.normalized_config=o(this)}static async from_pretrained(u,{progress_callback:_=null,config:f=null,cache_dir:b=null,local_files_only:A=!1,revision:g="main"}={}){f&&!(f instanceof c)&&(f=new c(f));const w=f??await n(u,{progress_callback:_,config:f,cache_dir:b,local_files_only:A,revision:g});return new this(w)}}class p{static async from_pretrained(...u){return c.from_pretrained(...u)}}},"./src/env.js":(e,r,t)=>{var D,L;t.r(r),t.d(r,{apis:()=>g,env:()=>x});var s=t("?db59"),i=t("?383f"),n=t("?fa4b");const o="3.7.0",a=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes((D=self.constructor)==null?void 0:D.name),c=typeof self<"u"&&"caches"in self,p=typeof navigator<"u"&&"gpu"in navigator,d=typeof navigator<"u"&&"ml"in navigator,u=typeof process<"u",_=u&&((L=process==null?void 0:process.release)==null?void 0:L.name)==="node",f=!P(s),b=!P(i),A=typeof globalThis.Deno<"u",g=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:c,IS_WEBGPU_AVAILABLE:p,IS_WEBNN_AVAILABLE:d,IS_PROCESS_AVAILABLE:u,IS_NODE_ENV:_,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:b}),w=f&&b;let $="./";if(w){const G=Object(import.meta).url;G?$=i.dirname(i.dirname(n.fileURLToPath(G))):typeof __dirname<"u"&&($=i.dirname(__dirname))}const y=w?i.join($,"/.cache/"):null,v="/models/",T=w?i.join($,v):v,x={version:o,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||l),localModelPath:T,useFS:f,useBrowserCache:c&&!A,useFSCache:f,cacheDir:y,useCustomCache:!1,customCache:null};function P(G){return Object.keys(G).length===0}},"./src/generation/configuration_utils.js":(e,r,t)=>{t.r(r),t.d(r,{GenerationConfig:()=>i});var s=t("./src/utils/core.js");class i{constructor(o){Y(this,"max_length",20);Y(this,"max_new_tokens",null);Y(this,"min_length",0);Y(this,"min_new_tokens",null);Y(this,"early_stopping",!1);Y(this,"max_time",null);Y(this,"do_sample",!1);Y(this,"num_beams",1);Y(this,"num_beam_groups",1);Y(this,"penalty_alpha",null);Y(this,"use_cache",!0);Y(this,"temperature",1);Y(this,"top_k",50);Y(this,"top_p",1);Y(this,"typical_p",1);Y(this,"epsilon_cutoff",0);Y(this,"eta_cutoff",0);Y(this,"diversity_penalty",0);Y(this,"repetition_penalty",1);Y(this,"encoder_repetition_penalty",1);Y(this,"length_penalty",1);Y(this,"no_repeat_ngram_size",0);Y(this,"bad_words_ids",null);Y(this,"force_words_ids",null);Y(this,"renormalize_logits",!1);Y(this,"constraints",null);Y(this,"forced_bos_token_id",null);Y(this,"forced_eos_token_id",null);Y(this,"remove_invalid_values",!1);Y(this,"exponential_decay_length_penalty",null);Y(this,"suppress_tokens",null);Y(this,"streamer",null);Y(this,"begin_suppress_tokens",null);Y(this,"forced_decoder_ids",null);Y(this,"guidance_scale",null);Y(this,"num_return_sequences",1);Y(this,"output_attentions",!1);Y(this,"output_hidden_states",!1);Y(this,"output_scores",!1);Y(this,"return_dict_in_generate",!1);Y(this,"pad_token_id",null);Y(this,"bos_token_id",null);Y(this,"eos_token_id",null);Y(this,"encoder_no_repeat_ngram_size",0);Y(this,"decoder_start_token_id",null);Y(this,"generation_kwargs",{});Object.assign(this,(0,s.pick)(o,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,r,t)=>{t.r(r),t.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>g,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>n,LogitsProcessorList:()=>a,LogitsWarper:()=>o,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>b,NoBadWordsLogitsProcessor:()=>A,NoRepeatNGramLogitsProcessor:()=>u,RepetitionPenaltyLogitsProcessor:()=>_,SuppressTokensAtBeginLogitsProcessor:()=>p,TemperatureLogitsWarper:()=>w,TopKLogitsWarper:()=>y,TopPLogitsWarper:()=>$,WhisperTimeStampLogitsProcessor:()=>d});var s=t("./src/utils/generic.js");t("./src/utils/tensor.js");var i=t("./src/utils/maths.js");class n extends s.Callable{_call(T,x){throw Error("`_call` should be implemented in a subclass")}}class o extends s.Callable{_call(T,x){throw Error("`_call` should be implemented in a subclass")}}class a extends s.Callable{constructor(){super(),this.processors=[]}push(T){this.processors.push(T)}extend(T){this.processors.push(...T)}_call(T,x){let P=x;for(const D of this.processors)P=D(T,P);return P}[Symbol.iterator](){return this.processors.values()}}class l extends n{constructor(T){super(),this.bos_token_id=T}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length===1){const D=x[P].data;D.fill(-1/0),D[this.bos_token_id]=0}return x}}class c extends n{constructor(T,x){super(),this.max_length=T,this.eos_token_id=Array.isArray(x)?x:[x]}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length===this.max_length-1){const D=x[P].data;D.fill(-1/0);for(const L of this.eos_token_id)D[L]=0}return x}}class p extends n{constructor(T,x){super(),this.begin_suppress_tokens=T,this.begin_index=x}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length===this.begin_index){const D=x[P].data;for(const L of this.begin_suppress_tokens)D[L]=-1/0}return x}}class d extends n{constructor(T,x){super(),this.eos_token_id=Array.isArray(T.eos_token_id)?T.eos_token_id[0]:T.eos_token_id,this.no_timestamps_token_id=T.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=x.length,x.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=T.max_initial_timestamp_index}_call(T,x){for(let P=0;P<T.length;++P){const D=x[P].data;if(D[this.no_timestamps_token_id]=-1/0,T[P].length===this.begin_index-1){D.fill(-1/0),D[this.timestamp_begin]=0;continue}const L=T[P].slice(this.begin_index),G=L.length>=1&&L[L.length-1]>=this.timestamp_begin,K=L.length<2||L[L.length-2]>=this.timestamp_begin;if(G&&(K?D.subarray(this.timestamp_begin).fill(-1/0):D.subarray(0,this.eos_token_id).fill(-1/0)),T[P].length===this.begin_index&&this.max_initial_timestamp_index!==null){const ee=this.timestamp_begin+this.max_initial_timestamp_index;D.subarray(ee+1).fill(-1/0)}const R=(0,i.log_softmax)(D),te=Math.log(R.subarray(this.timestamp_begin).map(Math.exp).reduce((ee,Z)=>ee+Z)),H=(0,i.max)(R.subarray(0,this.timestamp_begin))[0];te>H&&D.subarray(0,this.timestamp_begin).fill(-1/0)}return x}}class u extends n{constructor(T){super(),this.no_repeat_ngram_size=T}getNgrams(T){const x=T.length,P=[];for(let L=0;L<x+1-this.no_repeat_ngram_size;++L){const G=[];for(let K=0;K<this.no_repeat_ngram_size;++K)G.push(T[L+K]);P.push(G.map(Number))}const D=new Map;for(const L of P){const G=L.slice(0,L.length-1),K=JSON.stringify(G),R=D.get(K)??[];R.push(L[L.length-1]),D.set(K,R)}return D}getGeneratedNgrams(T,x){const P=x.slice(x.length+1-this.no_repeat_ngram_size,x.length);return T.get(JSON.stringify(P.map(Number)))??[]}calcBannedNgramTokens(T){const x=[];if(T.length+1<this.no_repeat_ngram_size)return x;{const P=this.getNgrams(T);return this.getGeneratedNgrams(P,T)}}_call(T,x){for(let P=0;P<T.length;++P){const D=x[P].data,L=this.calcBannedNgramTokens(T[P]);for(const G of L)D[G]=-1/0}return x}}class _ extends n{constructor(T){super(),this.penalty=T}_call(T,x){for(let P=0;P<T.length;++P){const D=x[P].data;for(const L of new Set(T[P])){const G=Number(L);D[G]<0?D[G]*=this.penalty:D[G]/=this.penalty}}return x}}class f extends n{constructor(T,x){super(),this.min_length=T,this.eos_token_id=Array.isArray(x)?x:[x]}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length<this.min_length){const D=x[P].data;for(const L of this.eos_token_id)D[L]=-1/0}return x}}class b extends n{constructor(T,x,P){super(),this.prompt_length_to_skip=T,this.min_new_tokens=x,this.eos_token_id=Array.isArray(P)?P:[P]}_call(T,x){for(let P=0;P<T.length;++P)if(T[P].length-this.prompt_length_to_skip<this.min_new_tokens){const L=x[P].data;for(const G of this.eos_token_id)L[G]=-1/0}return x}}class A extends n{constructor(T,x){super(),this.bad_words_ids=T,this.eos_token_id=Array.isArray(x)?x:[x]}_call(T,x){for(let P=0;P<T.length;++P){const D=x[P].data,L=T[P];for(const G of this.bad_words_ids){if(L.length<G.length-1)continue;let K=!0;for(let R=1;R<=G.length-1;++R)if(G.at(-R-1)!=L.at(-R)){K=!1;break}K&&(D[G.at(-1)]=-1/0)}}return x}}class g extends n{constructor(T){if(super(),T<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${T}.`);this.guidance_scale=T}_call(T,x){if(x.dims[0]!==2*T.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${x.dims[0]} for the logits and ${T.length} for the input ids.`);const P=T.length,D=x.slice([0,P],null),L=x.slice([P,x.dims[0]],null);for(let G=0;G<L.data.length;++G)L.data[G]+=(D.data[G]-L.data[G])*this.guidance_scale;return L}}class w extends o{constructor(T){super(),this.temperature=T}_call(T,x){const P=x.data;for(let D=0;D<P.length;++D)P[D]/=this.temperature;return x}}class $ extends o{constructor(T,{filter_value:x=-1/0,min_tokens_to_keep:P=1}={}){if(super(),T<0||T>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${T}`);if(!Number.isInteger(P)||P<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${P}`);this.top_p=T,this.filter_value=x,this.min_tokens_to_keep=P}}class y extends o{constructor(T,{filter_value:x=-1/0,min_tokens_to_keep:P=1}={}){if(super(),!Number.isInteger(T)||T<0)throw new Error(`\`top_k\` must be a positive integer, but is ${T}`);this.top_k=Math.max(T,P),this.filter_value=x}}},"./src/generation/logits_sampler.js":(e,r,t)=>{t.r(r),t.d(r,{LogitsSampler:()=>o});var s=t("./src/utils/generic.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class o extends s.Callable{constructor(d){super(),this.generation_config=d}async _call(d){return this.sample(d)}async sample(d){throw Error("sample should be implemented in subclasses.")}getLogits(d,u){let _=d.dims.at(-1),f=d.data;if(u===-1)f=f.slice(-_);else{let b=u*_;f=f.slice(b,b+_)}return f}randomSelect(d){let u=0;for(let f=0;f<d.length;++f)u+=d[f];let _=Math.random()*u;for(let f=0;f<d.length;++f)if(_-=d[f],_<=0)return f;return 0}static getSampler(d){if(d.do_sample)return new l(d);if(d.num_beams>1)return new c(d);if(d.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${d.num_return_sequences}.`);return new a(d)}}class a extends o{async sample(d){const u=(0,n.max)(d.data)[1];return[[BigInt(u),0]]}}class l extends o{async sample(d){let u=d.dims.at(-1);this.generation_config.top_k>0&&(u=Math.min(this.generation_config.top_k,u));const[_,f]=await(0,i.topk)(d,u),b=(0,n.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},()=>{const A=this.randomSelect(b);return[f.data[A],Math.log(b[A])]})}}class c extends o{async sample(d){let u=d.dims.at(-1);this.generation_config.top_k>0&&(u=Math.min(this.generation_config.top_k,u));const[_,f]=await(0,i.topk)(d,u),b=(0,n.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},(A,g)=>[f.data[g],Math.log(b[g])])}}},"./src/generation/stopping_criteria.js":(e,r,t)=>{t.r(r),t.d(r,{EosTokenCriteria:()=>a,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>o,StoppingCriteria:()=>i,StoppingCriteriaList:()=>n});var s=t("./src/utils/generic.js");class i extends s.Callable{_call(p,d){throw Error("StoppingCriteria needs to be subclassed")}}class n extends s.Callable{constructor(){super(),this.criteria=[]}push(p){this.criteria.push(p)}extend(p){p instanceof n?p=p.criteria:p instanceof i&&(p=[p]),this.criteria.push(...p)}_call(p,d){const u=new Array(p.length).fill(!1);for(const _ of this.criteria){const f=_(p,d);for(let b=0;b<u.length;++b)u[b]||(u[b]=f[b])}return u}[Symbol.iterator](){return this.criteria.values()}}class o extends i{constructor(p,d=null){super(),this.max_length=p,this.max_position_embeddings=d}_call(p){return p.map(d=>d.length>=this.max_length)}}class a extends i{constructor(p){super(),Array.isArray(p)||(p=[p]),this.eos_token_id=p}_call(p,d){return p.map(u=>{const _=u.at(-1);return this.eos_token_id.some(f=>_==f)})}}class l extends i{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(p,d){return new Array(p.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,r,t)=>{t.r(r),t.d(r,{BaseStreamer:()=>o,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var s=t("./src/utils/core.js"),i=t("./src/tokenizers.js"),n=t("./src/env.js");class o{put(d){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const a=n.apis.IS_PROCESS_AVAILABLE?p=>process.stdout.write(p):p=>console.log(p);class l extends o{constructor(d,{skip_prompt:u=!1,callback_function:_=null,token_callback_function:f=null,skip_special_tokens:b=!0,decode_kwargs:A={},...g}={}){super(),this.tokenizer=d,this.skip_prompt=u,this.callback_function=_??a,this.token_callback_function=f,this.decode_kwargs={skip_special_tokens:b,...A,...g},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(d){var A;if(d.length>1)throw Error("TextStreamer only supports batch size of 1");const u=this.next_tokens_are_prompt;if(u&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const _=d[0];(A=this.token_callback_function)==null||A.call(this,_),this.token_cache=(0,s.mergeArrays)(this.token_cache,_);const f=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let b;u||f.endsWith(`
`)?(b=f.slice(this.print_len),this.token_cache=[],this.print_len=0):f.length>0&&(0,i.is_chinese_char)(f.charCodeAt(f.length-1))?(b=f.slice(this.print_len),this.print_len+=b.length):(b=f.slice(this.print_len,f.lastIndexOf(" ")+1),this.print_len+=b.length),this.on_finalized_text(b,!1)}end(){let d;this.token_cache.length>0?(d=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):d="",this.next_tokens_are_prompt=!0,this.on_finalized_text(d,!0)}on_finalized_text(d,u){var _,f;d.length>0&&((_=this.callback_function)==null||_.call(this,d)),u&&this.callback_function===a&&n.apis.IS_PROCESS_AVAILABLE&&((f=this.callback_function)==null||f.call(this,`
`))}}class c extends l{constructor(d,{skip_prompt:u=!1,callback_function:_=null,token_callback_function:f=null,on_chunk_start:b=null,on_chunk_end:A=null,on_finalize:g=null,time_precision:w=.02,skip_special_tokens:$=!0,decode_kwargs:y={}}={}){super(d,{skip_prompt:u,skip_special_tokens:$,callback_function:_,token_callback_function:f,decode_kwargs:y}),this.timestamp_begin=d.timestamp_begin,this.on_chunk_start=b,this.on_chunk_end=A,this.on_finalize=g,this.time_precision=w,this.waiting_for_timestamp=!1}put(d){var _,f,b;if(d.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const u=d[0];if(u.length===1){const A=Number(u[0])-this.timestamp_begin;if(A>=0){const g=A*this.time_precision;this.waiting_for_timestamp?(_=this.on_chunk_end)==null||_.call(this,g):(f=this.on_chunk_start)==null||f.call(this,g),this.waiting_for_timestamp=!this.waiting_for_timestamp,(b=this.token_callback_function)==null||b.call(this,u);return}}return super.put(d)}end(){var d;super.end(),(d=this.on_finalize)==null||d.call(this)}}},"./src/models.js":(e,r,t)=>{t.r(r),t.d(r,{ASTForAudioClassification:()=>_i,ASTModel:()=>fo,ASTPreTrainedModel:()=>fi,AlbertForMaskedLM:()=>Mt,AlbertForQuestionAnswering:()=>tt,AlbertForSequenceClassification:()=>We,AlbertModel:()=>qe,AlbertPreTrainedModel:()=>Ne,AutoModel:()=>Ll,AutoModelForAudioClassification:()=>Rf,AutoModelForAudioFrameClassification:()=>Nf,AutoModelForAudioTextToText:()=>Xf,AutoModelForCTC:()=>Bf,AutoModelForCausalLM:()=>Cf,AutoModelForDepthEstimation:()=>Gf,AutoModelForDocumentQuestionAnswering:()=>Vf,AutoModelForImageClassification:()=>kf,AutoModelForImageFeatureExtraction:()=>qf,AutoModelForImageMatting:()=>Uf,AutoModelForImageSegmentation:()=>If,AutoModelForImageTextToText:()=>Qf,AutoModelForImageToImage:()=>Wf,AutoModelForMaskGeneration:()=>zf,AutoModelForMaskedLM:()=>$f,AutoModelForNormalEstimation:()=>Kf,AutoModelForObjectDetection:()=>Of,AutoModelForPoseEstimation:()=>Hf,AutoModelForQuestionAnswering:()=>Sf,AutoModelForSemanticSegmentation:()=>Ff,AutoModelForSeq2SeqLM:()=>xf,AutoModelForSequenceClassification:()=>yf,AutoModelForSpeechSeq2Seq:()=>Tf,AutoModelForTextToSpectrogram:()=>Ef,AutoModelForTextToWaveform:()=>Pf,AutoModelForTokenClassification:()=>vf,AutoModelForUniversalSegmentation:()=>Df,AutoModelForVision2Seq:()=>Af,AutoModelForXVector:()=>jf,AutoModelForZeroShotObjectDetection:()=>Lf,BartForConditionalGeneration:()=>wr,BartForSequenceClassification:()=>Kr,BartModel:()=>Zt,BartPretrainedModel:()=>Yr,BaseModelOutput:()=>ke,BeitForImageClassification:()=>ep,BeitModel:()=>Zd,BeitPreTrainedModel:()=>Ya,BertForMaskedLM:()=>Se,BertForQuestionAnswering:()=>ze,BertForSequenceClassification:()=>we,BertForTokenClassification:()=>Ie,BertModel:()=>be,BertPreTrainedModel:()=>Pe,BlenderbotForConditionalGeneration:()=>ir,BlenderbotModel:()=>mr,BlenderbotPreTrainedModel:()=>ar,BlenderbotSmallForConditionalGeneration:()=>Vn,BlenderbotSmallModel:()=>Ns,BlenderbotSmallPreTrainedModel:()=>Hr,BloomForCausalLM:()=>vd,BloomModel:()=>yd,BloomPreTrainedModel:()=>Ra,CLIPModel:()=>yi,CLIPPreTrainedModel:()=>ws,CLIPSegForImageSegmentation:()=>qn,CLIPSegModel:()=>bn,CLIPSegPreTrainedModel:()=>ts,CLIPTextModel:()=>Po,CLIPTextModelWithProjection:()=>vi,CLIPVisionModel:()=>Co,CLIPVisionModelWithProjection:()=>xi,CamembertForMaskedLM:()=>mt,CamembertForQuestionAnswering:()=>Bt,CamembertForSequenceClassification:()=>xt,CamembertForTokenClassification:()=>st,CamembertModel:()=>gt,CamembertPreTrainedModel:()=>rt,CausalLMOutput:()=>xn,CausalLMOutputWithPast:()=>Rv,ChineseCLIPModel:()=>dt,ChineseCLIPPreTrainedModel:()=>gn,ClapAudioModelWithProjection:()=>rm,ClapModel:()=>em,ClapPreTrainedModel:()=>Lo,ClapTextModelWithProjection:()=>tm,CodeGenForCausalLM:()=>V,CodeGenModel:()=>z,CodeGenPreTrainedModel:()=>I,CohereForCausalLM:()=>rd,CohereModel:()=>td,CoherePreTrainedModel:()=>Aa,ConvBertForMaskedLM:()=>ks,ConvBertForQuestionAnswering:()=>S,ConvBertForSequenceClassification:()=>$t,ConvBertForTokenClassification:()=>Xt,ConvBertModel:()=>As,ConvBertPreTrainedModel:()=>ht,ConvNextForImageClassification:()=>qp,ConvNextModel:()=>Hp,ConvNextPreTrainedModel:()=>pl,ConvNextV2ForImageClassification:()=>Xp,ConvNextV2Model:()=>Qp,ConvNextV2PreTrainedModel:()=>hl,DFineForObjectDetection:()=>hp,DFineModel:()=>pp,DFinePreTrainedModel:()=>sl,DPTForDepthEstimation:()=>Sp,DPTModel:()=>$p,DPTPreTrainedModel:()=>cl,DacDecoderModel:()=>Wm,DacDecoderOutput:()=>Nm,DacEncoderModel:()=>Um,DacEncoderOutput:()=>jm,DacModel:()=>Vm,DacPreTrainedModel:()=>Uo,DebertaForMaskedLM:()=>Qr,DebertaForQuestionAnswering:()=>Sr,DebertaForSequenceClassification:()=>sr,DebertaForTokenClassification:()=>$r,DebertaModel:()=>Nr,DebertaPreTrainedModel:()=>Vt,DebertaV2ForMaskedLM:()=>Ar,DebertaV2ForQuestionAnswering:()=>Ur,DebertaV2ForSequenceClassification:()=>Is,DebertaV2ForTokenClassification:()=>Fs,DebertaV2Model:()=>ls,DebertaV2PreTrainedModel:()=>Vr,DecisionTransformerModel:()=>xm,DecisionTransformerPreTrainedModel:()=>vm,DeiTForImageClassification:()=>wp,DeiTModel:()=>gp,DeiTPreTrainedModel:()=>il,DepthAnythingForDepthEstimation:()=>kp,DepthAnythingPreTrainedModel:()=>Ap,DepthProForDepthEstimation:()=>Lp,DepthProPreTrainedModel:()=>Op,DetrForObjectDetection:()=>rp,DetrForSegmentation:()=>Ja,DetrModel:()=>tp,DetrObjectDetectionOutput:()=>Za,DetrPreTrainedModel:()=>Ao,DetrSegmentationOutput:()=>sp,Dinov2ForImageClassification:()=>Jp,Dinov2Model:()=>Yp,Dinov2PreTrainedModel:()=>ml,Dinov2WithRegistersForImageClassification:()=>eh,Dinov2WithRegistersModel:()=>Zp,Dinov2WithRegistersPreTrainedModel:()=>fl,DistilBertForMaskedLM:()=>fr,DistilBertForQuestionAnswering:()=>hr,DistilBertForSequenceClassification:()=>Or,DistilBertForTokenClassification:()=>ms,DistilBertModel:()=>es,DistilBertPreTrainedModel:()=>Wr,DonutSwinModel:()=>Kp,DonutSwinPreTrainedModel:()=>Gp,EfficientNetForImageClassification:()=>cm,EfficientNetModel:()=>lm,EfficientNetPreTrainedModel:()=>Pl,ElectraForMaskedLM:()=>q,ElectraForQuestionAnswering:()=>Fe,ElectraForSequenceClassification:()=>re,ElectraForTokenClassification:()=>ge,ElectraModel:()=>B,ElectraPreTrainedModel:()=>Q,Ernie4_5_ForCausalLM:()=>Qh,Ernie4_5_Model:()=>qh,Ernie4_5_PretrainedModel:()=>yl,EsmForMaskedLM:()=>Gr,EsmForSequenceClassification:()=>Be,EsmForTokenClassification:()=>je,EsmModel:()=>Bs,EsmPreTrainedModel:()=>Xr,ExaoneForCausalLM:()=>Ku,ExaoneModel:()=>Gu,ExaonePreTrainedModel:()=>Ea,FalconForCausalLM:()=>Zh,FalconModel:()=>Jh,FalconPreTrainedModel:()=>xl,FastViTForImageClassification:()=>Vd,FastViTModel:()=>Nd,FastViTPreTrainedModel:()=>Ka,Florence2ForConditionalGeneration:()=>Mo,Florence2PreTrainedModel:()=>bo,GLPNForDepthEstimation:()=>Wp,GLPNModel:()=>Up,GLPNPreTrainedModel:()=>dl,GPT2LMHeadModel:()=>Si,GPT2Model:()=>$i,GPT2PreTrainedModel:()=>Qn,GPTBigCodeForCausalLM:()=>E,GPTBigCodeModel:()=>h,GPTBigCodePreTrainedModel:()=>Zn,GPTJForCausalLM:()=>Oi,GPTJModel:()=>Di,GPTJPreTrainedModel:()=>Jn,GPTNeoForCausalLM:()=>Yn,GPTNeoModel:()=>yn,GPTNeoPreTrainedModel:()=>Xn,GPTNeoXForCausalLM:()=>Fi,GPTNeoXModel:()=>Ii,GPTNeoXPreTrainedModel:()=>vn,Gemma2ForCausalLM:()=>od,Gemma2Model:()=>id,Gemma2PreTrainedModel:()=>Ia,Gemma3ForCausalLM:()=>ld,Gemma3Model:()=>ad,Gemma3PreTrainedModel:()=>Fa,Gemma3nForConditionalGeneration:()=>tn,Gemma3nPreTrainedModel:()=>To,GemmaForCausalLM:()=>nd,GemmaModel:()=>sd,GemmaPreTrainedModel:()=>ka,GlmForCausalLM:()=>Wu,GlmModel:()=>Uu,GlmPreTrainedModel:()=>Ta,GraniteForCausalLM:()=>ed,GraniteModel:()=>Zu,GranitePreTrainedModel:()=>Sa,GroundingDinoForObjectDetection:()=>rh,GroundingDinoPreTrainedModel:()=>th,GroupViTModel:()=>jd,GroupViTPreTrainedModel:()=>Rd,HeliumForCausalLM:()=>Vu,HeliumModel:()=>So,HeliumPreTrainedModel:()=>Ds,HieraForImageClassification:()=>Mp,HieraModel:()=>bp,HieraPreTrainedModel:()=>ol,HubertForCTC:()=>Ih,HubertForSequenceClassification:()=>Fh,HubertModel:()=>kh,HubertPreTrainedModel:()=>Ev,IJepaForImageClassification:()=>Ad,IJepaModel:()=>Sd,IJepaPreTrainedModel:()=>Ua,Idefics3ForConditionalGeneration:()=>fn,Idefics3PreTrainedModel:()=>rn,ImageMattingOutput:()=>Jf,JAISLMHeadModel:()=>ki,JAISModel:()=>Ai,JAISPreTrainedModel:()=>Mn,JinaCLIPModel:()=>Pi,JinaCLIPPreTrainedModel:()=>Hn,JinaCLIPTextModel:()=>Ci,JinaCLIPVisionModel:()=>wn,Lfm2ForCausalLM:()=>Tt,Lfm2Model:()=>ot,Lfm2PreTrainedModel:()=>Ke,LiteWhisperForConditionalGeneration:()=>wi,LlamaForCausalLM:()=>Oe,LlamaModel:()=>Ce,LlamaPreTrainedModel:()=>ce,LlavaForConditionalGeneration:()=>Gn,LlavaOnevisionForConditionalGeneration:()=>go,LlavaPreTrainedModel:()=>Wn,LlavaQwen2ForCausalLM:()=>xo,LongT5ForConditionalGeneration:()=>yr,LongT5Model:()=>_r,LongT5PreTrainedModel:()=>Gt,M2M100ForConditionalGeneration:()=>ph,M2M100Model:()=>dh,M2M100PreTrainedModel:()=>wl,MBartForCausalLM:()=>ur,MBartForConditionalGeneration:()=>kr,MBartForSequenceClassification:()=>cs,MBartModel:()=>gs,MBartPreTrainedModel:()=>Br,MPNetForMaskedLM:()=>pn,MPNetForQuestionAnswering:()=>k,MPNetForSequenceClassification:()=>hn,MPNetForTokenClassification:()=>pe,MPNetModel:()=>dn,MPNetPreTrainedModel:()=>_s,MT5ForConditionalGeneration:()=>Lr,MT5Model:()=>gr,MT5PreTrainedModel:()=>or,MarianMTModel:()=>uh,MarianModel:()=>ch,MarianPreTrainedModel:()=>gl,MaskFormerForInstanceSegmentation:()=>Vp,MaskFormerModel:()=>Np,MaskFormerPreTrainedModel:()=>ul,MaskedLMOutput:()=>Ir,Metric3DForDepthEstimation:()=>Bp,Metric3DPreTrainedModel:()=>zp,Metric3Dv2ForDepthEstimation:()=>jp,Metric3Dv2PreTrainedModel:()=>Rp,MgpstrForSceneTextRecognition:()=>$m,MgpstrModelOutput:()=>Pm,MgpstrPreTrainedModel:()=>Cm,MimiDecoderModel:()=>Rm,MimiDecoderOutput:()=>Lm,MimiEncoderModel:()=>Bm,MimiEncoderOutput:()=>Om,MimiModel:()=>zm,MimiPreTrainedModel:()=>Vo,MistralForCausalLM:()=>Hh,MistralModel:()=>Kh,MistralPreTrainedModel:()=>Ml,MobileBertForMaskedLM:()=>Rs,MobileBertForQuestionAnswering:()=>js,MobileBertForSequenceClassification:()=>fs,MobileBertModel:()=>Yt,MobileBertPreTrainedModel:()=>et,MobileLLMForCausalLM:()=>qu,MobileLLMModel:()=>Hu,MobileLLMPreTrainedModel:()=>Pa,MobileNetV1ForImageClassification:()=>dm,MobileNetV1ForSemanticSegmentation:()=>pm,MobileNetV1Model:()=>um,MobileNetV1PreTrainedModel:()=>Bo,MobileNetV2ForImageClassification:()=>mm,MobileNetV2ForSemanticSegmentation:()=>fm,MobileNetV2Model:()=>hm,MobileNetV2PreTrainedModel:()=>Ro,MobileNetV3ForImageClassification:()=>gm,MobileNetV3ForSemanticSegmentation:()=>wm,MobileNetV3Model:()=>_m,MobileNetV3PreTrainedModel:()=>jo,MobileNetV4ForImageClassification:()=>Mm,MobileNetV4ForSemanticSegmentation:()=>ym,MobileNetV4Model:()=>bm,MobileNetV4PreTrainedModel:()=>No,MobileViTForImageClassification:()=>Kd,MobileViTModel:()=>Gd,MobileViTPreTrainedModel:()=>Ha,MobileViTV2ForImageClassification:()=>qd,MobileViTV2Model:()=>Hd,MobileViTV2PreTrainedModel:()=>qa,ModelOutput:()=>ye,ModernBertDecoderForCausalLM:()=>Pr,ModernBertDecoderModel:()=>Mr,ModernBertDecoderPreTrainedModel:()=>bt,ModernBertForMaskedLM:()=>it,ModernBertForSequenceClassification:()=>It,ModernBertForTokenClassification:()=>St,ModernBertModel:()=>Je,ModernBertPreTrainedModel:()=>De,Moondream1ForConditionalGeneration:()=>wo,MoonshineForConditionalGeneration:()=>_o,MoonshineModel:()=>xa,MoonshinePreTrainedModel:()=>bi,MptForCausalLM:()=>Td,MptModel:()=>xd,MptPreTrainedModel:()=>ja,MultiModalityCausalLM:()=>Em,MultiModalityPreTrainedModel:()=>Tm,MusicgenForCausalLM:()=>Sv,MusicgenForConditionalGeneration:()=>$l,MusicgenModel:()=>$v,MusicgenPreTrainedModel:()=>Cl,NeoBertForMaskedLM:()=>Ze,NeoBertForQuestionAnswering:()=>Ye,NeoBertForSequenceClassification:()=>Ge,NeoBertForTokenClassification:()=>nt,NeoBertModel:()=>xe,NeoBertPreTrainedModel:()=>Qe,NomicBertModel:()=>as,NomicBertPreTrainedModel:()=>jr,OPTForCausalLM:()=>Pd,OPTModel:()=>Ed,OPTPreTrainedModel:()=>Na,Olmo2ForCausalLM:()=>Ju,Olmo2Model:()=>Yu,Olmo2PreTrainedModel:()=>$a,OlmoForCausalLM:()=>Xu,OlmoModel:()=>Qu,OlmoPreTrainedModel:()=>Ca,OpenELMForCausalLM:()=>ud,OpenELMModel:()=>cd,OpenELMPreTrainedModel:()=>Da,OwlViTForObjectDetection:()=>Xd,OwlViTModel:()=>Qd,OwlViTPreTrainedModel:()=>Qa,Owlv2ForObjectDetection:()=>Jd,Owlv2Model:()=>Yd,Owlv2PreTrainedModel:()=>Xa,PaliGemmaForConditionalGeneration:()=>vo,PaliGemmaPreTrainedModel:()=>yo,PatchTSMixerForPrediction:()=>Im,PatchTSMixerModel:()=>km,PatchTSMixerPreTrainedModel:()=>Al,PatchTSTForPrediction:()=>Am,PatchTSTModel:()=>Sm,PatchTSTPreTrainedModel:()=>Sl,Phi3ForCausalLM:()=>Md,Phi3Model:()=>bd,Phi3PreTrainedModel:()=>Ba,Phi3VForCausalLM:()=>_n,Phi3VPreTrainedModel:()=>Eo,PhiForCausalLM:()=>wd,PhiModel:()=>gd,PhiPreTrainedModel:()=>za,PreTrainedModel:()=>W,PretrainedMixin:()=>jt,PvtForImageClassification:()=>Dd,PvtModel:()=>Fd,PvtPreTrainedModel:()=>Wa,PyAnnoteForAudioFrameClassification:()=>wh,PyAnnoteModel:()=>gh,PyAnnotePreTrainedModel:()=>bl,QuestionAnsweringModelOutput:()=>Rr,Qwen2ForCausalLM:()=>pd,Qwen2Model:()=>dd,Qwen2PreTrainedModel:()=>Oa,Qwen2VLForConditionalGeneration:()=>_d,Qwen2VLPreTrainedModel:()=>fd,Qwen3ForCausalLM:()=>md,Qwen3Model:()=>hd,Qwen3PreTrainedModel:()=>La,RFDetrForObjectDetection:()=>up,RFDetrModel:()=>cp,RFDetrObjectDetectionOutput:()=>dp,RFDetrPreTrainedModel:()=>rl,RTDetrForObjectDetection:()=>ip,RTDetrModel:()=>np,RTDetrObjectDetectionOutput:()=>Li,RTDetrPreTrainedModel:()=>el,RTDetrV2ForObjectDetection:()=>ap,RTDetrV2Model:()=>op,RTDetrV2ObjectDetectionOutput:()=>lp,RTDetrV2PreTrainedModel:()=>tl,ResNetForImageClassification:()=>vp,ResNetModel:()=>yp,ResNetPreTrainedModel:()=>al,RoFormerForMaskedLM:()=>Hs,RoFormerForQuestionAnswering:()=>Xs,RoFormerForSequenceClassification:()=>qs,RoFormerForTokenClassification:()=>Qs,RoFormerModel:()=>Cr,RoFormerPreTrainedModel:()=>Qt,RobertaForMaskedLM:()=>di,RobertaForQuestionAnswering:()=>oo,RobertaForSequenceClassification:()=>no,RobertaForTokenClassification:()=>io,RobertaModel:()=>so,RobertaPreTrainedModel:()=>Ys,SamImageSegmentationOutput:()=>lh,SamModel:()=>ah,SamPreTrainedModel:()=>oh,SapiensForDepthEstimation:()=>Fp,SapiensForNormalEstimation:()=>Dp,SapiensForSemanticSegmentation:()=>Ip,SapiensPreTrainedModel:()=>Io,SegformerForImageClassification:()=>nm,SegformerForSemanticSegmentation:()=>im,SegformerModel:()=>Cv,SegformerPreTrainedModel:()=>zo,Seq2SeqLMOutput:()=>Bv,SequenceClassifierOutput:()=>Et,SiglipModel:()=>$o,SiglipPreTrainedModel:()=>Kn,SiglipTextModel:()=>Ti,SiglipVisionModel:()=>Ei,SmolLM3ForCausalLM:()=>vr,SmolLM3Model:()=>Kt,SmolLM3PreTrainedModel:()=>Ot,SmolVLMForConditionalGeneration:()=>Mi,SnacDecoderModel:()=>Hm,SnacEncoderModel:()=>Km,SnacModel:()=>Gm,SnacPreTrainedModel:()=>Wo,SpeechT5ForSpeechToText:()=>Nh,SpeechT5ForTextToSpeech:()=>Vh,SpeechT5HifiGan:()=>Uh,SpeechT5Model:()=>Pv,SpeechT5PreTrainedModel:()=>Oo,SqueezeBertForMaskedLM:()=>ae,SqueezeBertForQuestionAnswering:()=>Ee,SqueezeBertForSequenceClassification:()=>de,SqueezeBertModel:()=>J,SqueezeBertPreTrainedModel:()=>N,StableLmForCausalLM:()=>am,StableLmModel:()=>om,StableLmPreTrainedModel:()=>El,Starcoder2ForCausalLM:()=>Yh,Starcoder2Model:()=>Xh,Starcoder2PreTrainedModel:()=>vl,StyleTextToSpeech2Model:()=>jh,StyleTextToSpeech2PreTrainedModel:()=>Rh,Swin2SRForImageSuperResolution:()=>Cp,Swin2SRModel:()=>Pp,Swin2SRPreTrainedModel:()=>ll,SwinForImageClassification:()=>Tp,SwinForSemanticSegmentation:()=>Ep,SwinModel:()=>xp,SwinPreTrainedModel:()=>ko,T5ForConditionalGeneration:()=>nr,T5Model:()=>Lt,T5PreTrainedModel:()=>Rt,TableTransformerForObjectDetection:()=>fp,TableTransformerModel:()=>mp,TableTransformerObjectDetectionOutput:()=>_p,TableTransformerPreTrainedModel:()=>nl,TokenClassifierOutput:()=>xr,TrOCRForCausalLM:()=>Gh,TrOCRPreTrainedModel:()=>Wh,UltravoxModel:()=>kl,UltravoxPreTrainedModel:()=>Fm,UniSpeechForCTC:()=>vh,UniSpeechForSequenceClassification:()=>xh,UniSpeechModel:()=>yh,UniSpeechPreTrainedModel:()=>Fo,UniSpeechSatForAudioFrameClassification:()=>Ch,UniSpeechSatForCTC:()=>Eh,UniSpeechSatForSequenceClassification:()=>Ph,UniSpeechSatModel:()=>Th,UniSpeechSatPreTrainedModel:()=>zi,ViTForImageClassification:()=>$d,ViTMAEModel:()=>Ld,ViTMAEPreTrainedModel:()=>Od,ViTMSNForImageClassification:()=>Bd,ViTMSNModel:()=>zd,ViTMSNPreTrainedModel:()=>Ga,ViTModel:()=>Cd,ViTPreTrainedModel:()=>Va,VisionEncoderDecoderModel:()=>mn,VitMatteForImageMatting:()=>Wd,VitMattePreTrainedModel:()=>Ud,VitPoseForPoseEstimation:()=>Id,VitPosePreTrainedModel:()=>kd,VitsModel:()=>Tl,VitsModelOutput:()=>Zf,VitsPreTrainedModel:()=>sm,VoxtralForConditionalGeneration:()=>Dm,Wav2Vec2BertForCTC:()=>Sh,Wav2Vec2BertForSequenceClassification:()=>Ah,Wav2Vec2BertModel:()=>$h,Wav2Vec2BertPreTrainedModel:()=>Do,Wav2Vec2ForAudioFrameClassification:()=>_h,Wav2Vec2ForCTC:()=>mh,Wav2Vec2ForSequenceClassification:()=>fh,Wav2Vec2Model:()=>hh,Wav2Vec2PreTrainedModel:()=>sn,WavLMForAudioFrameClassification:()=>Bh,WavLMForCTC:()=>Oh,WavLMForSequenceClassification:()=>Lh,WavLMForXVector:()=>zh,WavLMModel:()=>Dh,WavLMPreTrainedModel:()=>ei,WeSpeakerResNetModel:()=>Mh,WeSpeakerResNetPreTrainedModel:()=>bh,WhisperForConditionalGeneration:()=>gi,WhisperModel:()=>en,WhisperPreTrainedModel:()=>Un,XLMForQuestionAnswering:()=>po,XLMForSequenceClassification:()=>co,XLMForTokenClassification:()=>uo,XLMModel:()=>ao,XLMPreTrainedModel:()=>Js,XLMRobertaForMaskedLM:()=>mo,XLMRobertaForQuestionAnswering:()=>mi,XLMRobertaForSequenceClassification:()=>pi,XLMRobertaForTokenClassification:()=>hi,XLMRobertaModel:()=>ho,XLMRobertaPreTrainedModel:()=>Zs,XLMWithLMHeadModel:()=>lo,XVectorOutput:()=>Yf,YolosForObjectDetection:()=>nh,YolosModel:()=>sh,YolosObjectDetectionOutput:()=>ih,YolosPreTrainedModel:()=>_l});var s=t("./src/configs.js"),i=t("./src/backends/onnx.js"),n=t("./src/utils/dtypes.js"),o=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),c=t("./src/utils/constants.js"),p=t("./src/generation/logits_process.js"),d=t("./src/generation/configuration_utils.js"),u=t("./src/utils/tensor.js"),_=t("./src/utils/image.js"),f=t("./src/utils/maths.js"),b=t("./src/generation/stopping_criteria.js"),A=t("./src/generation/logits_sampler.js"),g=t("./src/env.js"),w=t("./src/models/whisper/generation_whisper.js"),$=t("./src/models/whisper/common_whisper.js");const y={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11,ImageAudioTextToText:12},v=new Map,T=new Map,x=new Map;async function P(M,C,O){var Fr;let ie=((Fr=O.config)==null?void 0:Fr["transformers.js_config"])??{},_e=O.device??ie.device;_e&&typeof _e!="string"&&(_e.hasOwnProperty(C)?_e=_e[C]:(console.warn(`device not specified for "${C}". Using the default device.`),_e=null));const he=_e??(g.apis.IS_NODE_ENV?"cpu":"wasm"),$e=(0,i.deviceToExecutionProviders)(he),Le=ie.device_config??{};Le.hasOwnProperty(he)&&(ie={...ie,...Le[he]});let Ue=O.dtype??ie.dtype;if(typeof Ue!="string"&&(Ue&&Ue.hasOwnProperty(C)?Ue=Ue[C]:(Ue=n.DEFAULT_DEVICE_DTYPE_MAPPING[he]??n.DATA_TYPES.fp32,console.warn(`dtype not specified for "${C}". Using the default dtype (${Ue}) for this device (${he}).`))),Ue===n.DATA_TYPES.auto){let kt=ie.dtype;typeof kt!="string"&&(kt=kt==null?void 0:kt[C]),kt&&kt!==n.DATA_TYPES.auto&&n.DATA_TYPES.hasOwnProperty(kt)?Ue=kt:Ue=n.DEFAULT_DEVICE_DTYPE_MAPPING[he]??n.DATA_TYPES.fp32}const Xe=Ue;if(n.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Xe)){if(Xe===n.DATA_TYPES.fp16&&he==="webgpu"&&!await(0,n.isWebGpuFp16Supported)())throw new Error(`The device (${he}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Xe}. Should be one of: ${Object.keys(n.DATA_TYPES).join(", ")}`);const ft=ie.kv_cache_dtype,yt=ft?typeof ft=="string"?ft:ft[Xe]??"float32":void 0;if(yt&&!["float32","float16"].includes(yt))throw new Error(`Invalid kv_cache_dtype: ${yt}. Should be one of: float32, float16`);const vt={dtype:Xe,kv_cache_dtype:yt,device:he},Dt=n.DEFAULT_DTYPE_SUFFIX_MAPPING[Xe],_t=`${C}${Dt}.onnx`,At=`${O.subfolder??""}/${_t}`,ut={...O.session_options};ut.executionProviders??(ut.executionProviders=$e);const Ft=ie.free_dimension_overrides;Ft?ut.freeDimensionOverrides??(ut.freeDimensionOverrides=Ft):he.startsWith("webnn")&&!ut.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${he}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const Ht=g.apis.IS_NODE_ENV&&g.env.useFSCache,tr=(0,l.getModelFile)(M,At,!0,O,Ht),dr=O.use_external_data_format??ie.use_external_data_format;let lr=[];if(dr){let kt;typeof dr=="object"?dr.hasOwnProperty(_t)?kt=dr[_t]:dr.hasOwnProperty(C)?kt=dr[C]:kt=!1:kt=dr;const Tr=+kt;if(Tr>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${Tr}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let ss=0;ss<Tr;++ss){const Tn=`${_t}_data${ss===0?"":"_"+ss}`,Jr=`${O.subfolder??""}/${Tn}`;lr.push(new Promise(async(us,Go)=>{const En=await(0,l.getModelFile)(M,Jr,!0,O,Ht);us(En instanceof Uint8Array?{path:Tn,data:En}:Tn)}))}}else ut.externalData!==void 0&&(lr=ut.externalData.map(async kt=>{if(typeof kt.data=="string"){const Tr=await(0,l.getModelFile)(M,kt.data,!0,O);return{...kt,data:Tr}}return kt}));if(lr.length>0){const kt=await Promise.all(lr);g.apis.IS_NODE_ENV||(ut.externalData=kt)}if(he==="webgpu"){const kt=(0,s.getCacheShapes)(O.config,{prefix:"present"});if(Object.keys(kt).length>0&&!(0,i.isONNXProxy)()){const Tr={};for(const ss in kt)Tr[ss]="gpu-buffer";ut.preferredOutputLocation=Tr}}return{buffer_or_path:await tr,session_options:ut,session_config:vt}}async function D(M,C,O){return Object.fromEntries(await Promise.all(Object.keys(C).map(async ie=>{const{buffer_or_path:_e,session_options:he,session_config:$e}=await P(M,C[ie],O),Le=await(0,i.createInferenceSession)(_e,he,$e);return[ie,Le]})))}async function L(M,C,O){return Object.fromEntries(await Promise.all(Object.keys(C).map(async ie=>{const _e=await(0,l.getModelJSON)(M,C[ie],!1,O);return[ie,_e]})))}function G(M,C){const O=Object.create(null),ie=[];for(const $e of M.inputNames){const Le=C[$e];if(!(Le instanceof u.Tensor)){ie.push($e);continue}O[$e]=(0,i.isONNXProxy)()?Le.clone():Le}if(ie.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${ie.join(", ")}.`);const _e=Object.keys(C).length,he=M.inputNames.length;if(_e>he){let $e=Object.keys(C).filter(Le=>!M.inputNames.includes(Le));console.warn(`WARNING: Too many inputs were provided (${_e} > ${he}). The following inputs will be ignored: "${$e.join(", ")}".`)}return O}let K=Promise.resolve();async function R(M,C){const O=G(M,C);try{const ie=Object.fromEntries(Object.entries(O).map(([$e,Le])=>[$e,Le.ort_tensor])),_e=()=>M.run(ie),he=await(g.apis.IS_BROWSER_ENV||g.apis.IS_WEBWORKER_ENV?K=K.then(_e):_e());return te(he)}catch(ie){const _e=Object.fromEntries(Object.entries(O).map(([he,$e])=>{const Le={type:$e.type,dims:$e.dims,location:$e.location};return Le.location!=="gpu-buffer"&&(Le.data=$e.data),[he,Le]}));throw console.error(`An error occurred during model execution: "${ie}".`),console.error("Inputs given to model:",_e),ie}}function te(M){for(let C in M)(0,i.isONNXTensor)(M[C])?M[C]=new u.Tensor(M[C]):typeof M[C]=="object"&&te(M[C]);return M}function H(M){if(M instanceof u.Tensor)return M;if(M.length===0)throw Error("items must be non-empty");if(Array.isArray(M[0])){if(M.some(C=>C.length!==M[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new u.Tensor("int64",BigInt64Array.from(M.flat().map(C=>BigInt(C))),[M.length,M[0].length])}else return new u.Tensor("int64",BigInt64Array.from(M.map(C=>BigInt(C))),[1,M.length])}function ee(M){return new u.Tensor("bool",[M],[1])}async function Z(M,C){let{encoder_outputs:O,input_ids:ie,decoder_input_ids:_e,...he}=C;if(!O){const Le=(0,a.pick)(C,M.sessions.model.inputNames);O=(await ne(M,Le)).last_hidden_state}return he.input_ids=_e,he.encoder_hidden_states=O,M.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(he.encoder_attention_mask=C.attention_mask),await ue(M,he,!0)}async function ne(M,C){const O=M.sessions.model,ie=(0,a.pick)(C,O.inputNames);if(O.inputNames.includes("inputs_embeds")&&!ie.inputs_embeds){if(!C.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");ie.inputs_embeds=await M.encode_text({input_ids:C.input_ids})}if(O.inputNames.includes("token_type_ids")&&!ie.token_type_ids){if(!ie.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");ie.token_type_ids=(0,u.zeros_like)(ie.input_ids)}if(O.inputNames.includes("pixel_mask")&&!ie.pixel_mask){if(!ie.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const _e=ie.pixel_values.dims;ie.pixel_mask=(0,u.ones)([_e[0],_e[2],_e[3]])}return await R(O,ie)}async function me(M,C){const O=await M.encode(C);return await M.decode(O)}async function ue(M,C,O=!1){const ie=M.sessions[O?"decoder_model_merged":"model"],{past_key_values:_e,...he}=C;if(ie.inputNames.includes("use_cache_branch")&&(he.use_cache_branch=ee(!!_e)),ie.inputNames.includes("position_ids")&&he.attention_mask&&!he.position_ids){const Le=["paligemma","gemma3_text","gemma3"].includes(M.config.model_type)?1:0;he.position_ids=Re(he,_e,Le)}M.addPastKeyValues(he,_e);const $e=(0,a.pick)(he,ie.inputNames);return await R(ie,$e)}function j({modality_token_id:M,inputs_embeds:C,modality_features:O,input_ids:ie,attention_mask:_e}){const he=ie.tolist().map(Xe=>Xe.reduce((ft,yt,vt)=>(yt==M&&ft.push(vt),ft),[])),$e=he.reduce((Xe,ft)=>Xe+ft.length,0),Le=O.dims[0];if($e!==Le)throw new Error(`Number of tokens and features do not match: tokens: ${$e}, features ${Le}`);let Ue=0;for(let Xe=0;Xe<he.length;++Xe){const ft=he[Xe],yt=C[Xe];for(let vt=0;vt<ft.length;++vt)yt[ft[vt]].data.set(O[Ue++].data)}return{inputs_embeds:C,attention_mask:_e}}function F({image_token_id:M,inputs_embeds:C,image_features:O,input_ids:ie,attention_mask:_e}){return j({modality_token_id:M,inputs_embeds:C,modality_features:O,input_ids:ie,attention_mask:_e})}function U({audio_token_id:M,inputs_embeds:C,audio_features:O,input_ids:ie,attention_mask:_e}){return j({modality_token_id:M,inputs_embeds:C,modality_features:O,input_ids:ie,attention_mask:_e})}async function se(M,{encode_function:C,merge_function:O,modality_input_name:ie,modality_output_name:_e,input_ids:he=null,attention_mask:$e=null,position_ids:Le=null,inputs_embeds:Ue=null,past_key_values:Xe=null,generation_config:ft=null,logits_processor:yt=null,...vt}){const Dt=vt[ie];if(!Ue){if(Ue=await M.encode_text({input_ids:he,...vt}),Dt&&he.dims[1]!==1){const At=await C({[ie]:Dt,...vt});({inputs_embeds:Ue,attention_mask:$e}=O({[_e]:At,inputs_embeds:Ue,input_ids:he,attention_mask:$e}))}else if(Xe&&Dt&&he.dims[1]===1){const At=he.dims[1],ut=Object.values(Xe)[0].dims.at(-2);$e=(0,u.cat)([(0,u.ones)([he.dims[0],ut]),$e.slice(null,[$e.dims[1]-At,$e.dims[1]])],1)}}if(!Le&&M.config.model_type==="qwen2_vl"){const{image_grid_thw:At,video_grid_thw:ut}=vt;[Le]=M.get_rope_index(he,At,ut,$e)}return await ue(M,{inputs_embeds:Ue,past_key_values:Xe,attention_mask:$e,position_ids:Le,generation_config:ft,logits_processor:yt},!0)}async function fe(M,C){return await se(M,{...C,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:M.encode_audio.bind(M),merge_function:M._merge_input_ids_with_audio_features.bind(M)})}async function oe(M,C){return await se(M,{...C,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:M.encode_image.bind(M),merge_function:M._merge_input_ids_with_image_features.bind(M)})}function Te(M,C=0){const[O,ie]=M.dims,_e=M.data,he=new BigInt64Array(_e.length);for(let $e=0;$e<O;++$e){const Le=$e*ie;let Ue=BigInt(C);for(let Xe=0;Xe<ie;++Xe){const ft=Le+Xe;_e[ft]===0n?he[ft]=BigInt(1):(he[ft]=Ue,Ue+=_e[ft])}}return{data:he,dims:M.dims}}function Re(M,C=null,O=0){const{input_ids:ie,inputs_embeds:_e,attention_mask:he}=M,{data:$e,dims:Le}=Te(he,O);let Ue=new u.Tensor("int64",$e,Le);if(C){const Xe=-(ie??_e).dims.at(1);Ue=Ue.slice(null,[Xe,null])}return Ue}function He(M,C,O,ie){const _e=O.past_key_values?Object.values(O.past_key_values)[0].dims.at(-2):0;if(!O.attention_mask){let he;for(const $e of["input_ids","inputs_embeds","position_ids"])if(O[$e]){he=O[$e].dims;break}if(!he)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");O.attention_mask=(0,u.ones)([he[0],_e+he[1]])}if(O.past_key_values){const{input_ids:he,attention_mask:$e}=O;$e&&$e.dims[1]>he.dims[1]||_e<he.dims[1]&&(O.input_ids=he.slice(null,[_e,null]))}return O}function Me(M,C,O,ie){return O.past_key_values&&(C=C.map(_e=>[_e.at(-1)])),{...O,decoder_input_ids:H(C)}}function X(M,...C){return M.config.is_encoder_decoder?Me(M,...C):He(M,...C)}function le(M,C,O,ie){const _e=!!O.past_key_values;return ie.guidance_scale!==null&&ie.guidance_scale>1&&(_e?O.input_ids=(0,u.cat)([O.input_ids,O.input_ids],0):(O.input_ids=(0,u.cat)([O.input_ids,(0,u.full_like)(O.input_ids,BigInt(ie.pad_token_id))],0),O.attention_mask=(0,u.cat)([O.attention_mask,(0,u.full_like)(O.attention_mask,0n)],0))),(_e||!O.pixel_values)&&(O.pixel_values=(0,u.full)([0,0,3,384,384],1)),_e&&(O.images_seq_mask=new u.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),O.images_emb_mask=new u.Tensor("bool",new Array(0).fill(!1),[1,1,0])),O}class W extends o.Callable{constructor(O,ie,_e){super();Y(this,"main_input_name","input_ids");Y(this,"forward_params",["input_ids","attention_mask"]);this.config=O,this.sessions=ie,this.configs=_e;const he=x.get(this.constructor),$e=v.get(he);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,$e){case y.DecoderOnly:this.can_generate=!0,this._forward=ue,this._prepare_inputs_for_generation=He;break;case y.Seq2Seq:case y.Vision2Seq:case y.Musicgen:this.can_generate=!0,this._forward=Z,this._prepare_inputs_for_generation=Me;break;case y.EncoderDecoder:this._forward=Z;break;case y.ImageTextToText:this.can_generate=!0,this._forward=oe,this._prepare_inputs_for_generation=X;break;case y.AudioTextToText:this.can_generate=!0,this._forward=fe,this._prepare_inputs_for_generation=X;break;case y.Phi3V:case y.ImageAudioTextToText:this.can_generate=!0,this._prepare_inputs_for_generation=X;break;case y.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=le;break;case y.AutoEncoder:this._forward=me;break;default:this._forward=ne;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var ie;const O=[];for(const _e of Object.values(this.sessions))(ie=_e==null?void 0:_e.handler)!=null&&ie.dispose&&O.push(_e.handler.dispose());return await Promise.all(O)}static async from_pretrained(O,{progress_callback:ie=null,config:_e=null,cache_dir:he=null,local_files_only:$e=!1,revision:Le="main",model_file_name:Ue=null,subfolder:Xe="onnx",device:ft=null,dtype:yt=null,use_external_data_format:vt=null,session_options:Dt={}}={}){let _t={progress_callback:ie,config:_e,cache_dir:he,local_files_only:$e,revision:Le,model_file_name:Ue,subfolder:Xe,device:ft,dtype:yt,use_external_data_format:vt,session_options:Dt};const At=x.get(this),ut=v.get(At);_e=_t.config=await s.AutoConfig.from_pretrained(O,_t);let Ft;if(ut===y.DecoderOnly)Ft=await Promise.all([D(O,{model:_t.model_file_name??"model"},_t),L(O,{generation_config:"generation_config.json"},_t)]);else if(ut===y.Seq2Seq||ut===y.Vision2Seq)Ft=await Promise.all([D(O,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},_t),L(O,{generation_config:"generation_config.json"},_t)]);else if(ut===y.MaskGeneration)Ft=await Promise.all([D(O,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},_t)]);else if(ut===y.EncoderDecoder)Ft=await Promise.all([D(O,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},_t)]);else if(ut===y.ImageTextToText){const Ht={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};_e.is_encoder_decoder&&(Ht.model="encoder_model"),Ft=await Promise.all([D(O,Ht,_t),L(O,{generation_config:"generation_config.json"},_t)])}else if(ut===y.AudioTextToText){const Ht={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};Ft=await Promise.all([D(O,Ht,_t),L(O,{generation_config:"generation_config.json"},_t)])}else if(ut===y.ImageAudioTextToText){const Ht={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Ft=await Promise.all([D(O,Ht,_t),L(O,{generation_config:"generation_config.json"},_t)])}else if(ut===y.Musicgen)Ft=await Promise.all([D(O,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},_t),L(O,{generation_config:"generation_config.json"},_t)]);else if(ut===y.MultiModality)Ft=await Promise.all([D(O,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},_t),L(O,{generation_config:"generation_config.json"},_t)]);else if(ut===y.Phi3V)Ft=await Promise.all([D(O,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},_t),L(O,{generation_config:"generation_config.json"},_t)]);else if(ut===y.AutoEncoder)Ft=await Promise.all([D(O,{encoder_model:"encoder_model",decoder_model:"decoder_model"},_t)]);else{if(ut!==y.EncoderOnly){const Ht=At??(_e==null?void 0:_e.model_type);Ht!=="custom"&&console.warn(`Model type for '${Ht}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}Ft=await Promise.all([D(O,{model:_t.model_file_name??"model"},_t)])}return new this(_e,...Ft)}async _call(O){return await this.forward(O)}async forward(O){return await this._forward(this,O)}get generation_config(){var O;return((O=this.configs)==null?void 0:O.generation_config)??null}_get_logits_warper(O){const ie=new p.LogitsProcessorList;return O.temperature!==null&&O.temperature!==1&&ie.push(new p.TemperatureLogitsWarper(O.temperature)),O.top_k!==null&&O.top_k!==0&&ie.push(new p.TopKLogitsWarper(O.top_k)),O.top_p!==null&&O.top_p<1&&ie.push(new p.TopPLogitsWarper(O.top_p)),ie}_get_logits_processor(O,ie,_e=null){const he=new p.LogitsProcessorList;if(O.repetition_penalty!==null&&O.repetition_penalty!==1&&he.push(new p.RepetitionPenaltyLogitsProcessor(O.repetition_penalty)),O.no_repeat_ngram_size!==null&&O.no_repeat_ngram_size>0&&he.push(new p.NoRepeatNGramLogitsProcessor(O.no_repeat_ngram_size)),O.bad_words_ids!==null&&he.push(new p.NoBadWordsLogitsProcessor(O.bad_words_ids,O.eos_token_id)),O.min_length!==null&&O.eos_token_id!==null&&O.min_length>0&&he.push(new p.MinLengthLogitsProcessor(O.min_length,O.eos_token_id)),O.min_new_tokens!==null&&O.eos_token_id!==null&&O.min_new_tokens>0&&he.push(new p.MinNewTokensLengthLogitsProcessor(ie,O.min_new_tokens,O.eos_token_id)),O.forced_bos_token_id!==null&&he.push(new p.ForcedBOSTokenLogitsProcessor(O.forced_bos_token_id)),O.forced_eos_token_id!==null&&he.push(new p.ForcedEOSTokenLogitsProcessor(O.max_length,O.forced_eos_token_id)),O.begin_suppress_tokens!==null){const $e=ie>1||O.forced_bos_token_id===null?ie:ie+1;he.push(new p.SuppressTokensAtBeginLogitsProcessor(O.begin_suppress_tokens,$e))}return O.guidance_scale!==null&&O.guidance_scale>1&&he.push(new p.ClassifierFreeGuidanceLogitsProcessor(O.guidance_scale)),_e!==null&&he.extend(_e),he}_prepare_generation_config(O,ie,_e=d.GenerationConfig){const he={...this.config};for(const Le of["decoder","generator","text_config"])Le in he&&Object.assign(he,he[Le]);const $e=new _e(he);return Object.assign($e,this.generation_config??{}),O&&Object.assign($e,O),ie&&Object.assign($e,(0,a.pick)(ie,Object.getOwnPropertyNames($e))),$e}_get_stopping_criteria(O,ie=null){const _e=new b.StoppingCriteriaList;return O.max_length!==null&&_e.push(new b.MaxLengthCriteria(O.max_length,this.config.max_position_embeddings??null)),O.eos_token_id!==null&&_e.push(new b.EosTokenCriteria(O.eos_token_id)),ie&&_e.extend(ie),_e}_validate_model_class(){if(!this.can_generate){const O=[Dl,Ol,Fl,Il],ie=x.get(this.constructor),_e=new Set,he=this.config.model_type;for(const Le of O){const Ue=Le.get(he);Ue&&_e.add(Ue[0])}let $e=`The current model class (${ie}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw _e.size>0&&($e+=` Please use the following class instead: ${[..._e].join(", ")}`),Error($e)}}prepare_inputs_for_generation(...O){return this._prepare_inputs_for_generation(this,...O)}_update_model_kwargs_for_generation({generated_input_ids:O,outputs:ie,model_inputs:_e,is_encoder_decoder:he}){return _e.past_key_values=this.getPastKeyValues(ie,_e.past_key_values),_e.input_ids=new u.Tensor("int64",O.flat(),[O.length,1]),he||(_e.attention_mask=(0,u.cat)([_e.attention_mask,(0,u.ones)([_e.attention_mask.dims[0],1])],1)),_e.position_ids=null,_e}_prepare_model_inputs({inputs:O,bos_token_id:ie,model_kwargs:_e}){const he=(0,a.pick)(_e,this.forward_params),$e=this.main_input_name;if($e in he){if(O)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else he[$e]=O;return{inputs_tensor:he[$e],model_inputs:he,model_input_name:$e}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:O,model_inputs:ie,model_input_name:_e,generation_config:he}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!ie.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:Le,pixel_values:Ue,attention_mask:Xe,...ft}=ie,yt=await this._prepare_inputs_embeds(ie);ie={...ft,...(0,a.pick)(yt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:$e}=await ne(this,ie);if(he.guidance_scale!==null&&he.guidance_scale>1)$e=(0,u.cat)([$e,(0,u.full_like)($e,0)],0),"attention_mask"in ie&&(ie.attention_mask=(0,u.cat)([ie.attention_mask,(0,u.zeros_like)(ie.attention_mask)],0));else if(ie.decoder_input_ids){const Le=H(ie.decoder_input_ids).dims[0];if(Le!==$e.dims[0]){if($e.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${$e.dims[0]}) than the decoder inputs (${Le}).`);$e=(0,u.cat)(Array.from({length:Le},()=>$e),0)}}return ie.encoder_outputs=$e,ie}_prepare_decoder_input_ids_for_generation({batch_size:O,model_input_name:ie,model_kwargs:_e,decoder_start_token_id:he,bos_token_id:$e,generation_config:Le}){let{decoder_input_ids:Ue,...Xe}=_e;if(!(Ue instanceof u.Tensor)){if(Ue)Array.isArray(Ue[0])||(Ue=Array.from({length:O},()=>Ue));else if(he??(he=$e),this.config.model_type==="musicgen")Ue=Array.from({length:O*this.config.decoder.num_codebooks},()=>[he]);else if(Array.isArray(he)){if(he.length!==O)throw new Error(`\`decoder_start_token_id\` expcted to have length ${O} but got ${he.length}`);Ue=he}else Ue=Array.from({length:O},()=>[he]);Ue=H(Ue)}return _e.decoder_attention_mask=(0,u.ones_like)(Ue),{input_ids:Ue,model_inputs:Xe}}async generate({inputs:O=null,generation_config:ie=null,logits_processor:_e=null,stopping_criteria:he=null,streamer:$e=null,...Le}){this._validate_model_class(),ie=this._prepare_generation_config(ie,Le);let{inputs_tensor:Ue,model_inputs:Xe,model_input_name:ft}=this._prepare_model_inputs({inputs:O,model_kwargs:Le});const yt=this.config.is_encoder_decoder;yt&&("encoder_outputs"in Xe||(Xe=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ue,model_inputs:Xe,model_input_name:ft,generation_config:ie})));let vt;yt?{input_ids:vt,model_inputs:Xe}=this._prepare_decoder_input_ids_for_generation({batch_size:Xe[ft].dims.at(0),model_input_name:ft,model_kwargs:Xe,decoder_start_token_id:ie.decoder_start_token_id,bos_token_id:ie.bos_token_id,generation_config:ie}):vt=Xe[ft];let Dt=vt.dims.at(-1);ie.max_new_tokens!==null&&(ie.max_length=Dt+ie.max_new_tokens);const _t=this._get_logits_processor(ie,Dt,_e),At=this._get_stopping_criteria(ie,he),ut=Xe[ft].dims.at(0),Ft=A.LogitsSampler.getSampler(ie),Ht=new Array(ut).fill(0),tr=vt.tolist();$e&&$e.put(tr);let dr,lr={};for(;;){if(Xe=this.prepare_inputs_for_generation(tr,Xe,ie),dr=await this.forward(Xe),ie.output_attentions&&ie.return_dict_in_generate){const Jr=this.getAttentions(dr);for(const us in Jr)us in lr||(lr[us]=[]),lr[us].push(Jr[us])}const kt=dr.logits.slice(null,-1,null),Tr=_t(tr,kt),ss=[];for(let Jr=0;Jr<Tr.dims.at(0);++Jr){const us=Tr[Jr],Go=await Ft(us);for(const[En,Ko]of Go){const Ho=BigInt(En);Ht[Jr]+=Ko,tr[Jr].push(Ho),ss.push([Ho]);break}}if($e&&$e.put(ss),At(tr).every(Jr=>Jr))break;Xe=this._update_model_kwargs_for_generation({generated_input_ids:ss,outputs:dr,model_inputs:Xe,is_encoder_decoder:yt})}$e&&$e.end();const br=this.getPastKeyValues(dr,Xe.past_key_values,!0),Fr=new u.Tensor("int64",tr.flat(),[tr.length,tr[0].length]);if(ie.return_dict_in_generate)return{sequences:Fr,past_key_values:br,...lr};for(const kt of Object.values(dr))kt.location==="gpu-buffer"&&kt.dispose();return Fr}getPastKeyValues(O,ie,_e=!1){const he=Object.create(null);for(const $e in O)if($e.startsWith("present")){const Le=$e.replace("present_conv","past_conv").replace("present","past_key_values"),Ue=$e.includes("encoder");if(Ue&&ie?he[Le]=ie[Le]:he[Le]=O[$e],ie&&(!Ue||_e)){const Xe=ie[Le];Xe.location==="gpu-buffer"&&Xe.dispose()}}return he}getAttentions(O){const ie={};for(const _e of["cross_attentions","encoder_attentions","decoder_attentions"])for(const he in O)he.startsWith(_e)&&(_e in ie||(ie[_e]=[]),ie[_e].push(O[he]));return ie}addPastKeyValues(O,ie){var _e,he,$e;if(ie)Object.assign(O,ie);else{const Le=this.sessions.decoder_model_merged??this.sessions.model,Ue=((he=(_e=O[this.main_input_name]??O.attention_mask)==null?void 0:_e.dims)==null?void 0:he[0])??1,Xe=(($e=Le==null?void 0:Le.config)==null?void 0:$e.kv_cache_dtype)??"float32",ft=Xe==="float16"?u.DataTypeMap.float16:u.DataTypeMap.float32,yt=(0,s.getCacheShapes)(this.config,{batch_size:Ue});for(const vt in yt){const Dt=yt[vt].reduce((_t,At)=>_t*At,1);O[vt]=new u.Tensor(Xe,new ft(Dt),yt[vt])}}}async encode_image({pixel_values:O}){return(await R(this.sessions.vision_encoder,{pixel_values:O})).image_features}async encode_text({input_ids:O}){return(await R(this.sessions.embed_tokens,{input_ids:O})).inputs_embeds}async encode_audio({audio_values:O}){return(await R(this.sessions.audio_encoder,{audio_values:O})).audio_features}}class ye{}class ke extends ye{constructor({last_hidden_state:C,hidden_states:O=null,attentions:ie=null}){super(),this.last_hidden_state=C,this.hidden_states=O,this.attentions=ie}}class Pe extends W{}class be extends Pe{}class Se extends Pe{async _call(C){return new Ir(await super._call(C))}}class we extends Pe{async _call(C){return new Et(await super._call(C))}}class Ie extends Pe{async _call(C){return new xr(await super._call(C))}}class ze extends Pe{async _call(C){return new Rr(await super._call(C))}}class Qe extends W{}class xe extends Qe{}class Ze extends Qe{async _call(C){return new Ir(await super._call(C))}}class Ge extends Qe{async _call(C){return new Et(await super._call(C))}}class nt extends Qe{async _call(C){return new xr(await super._call(C))}}class Ye extends Qe{async _call(C){return new Rr(await super._call(C))}}class De extends W{}class Je extends De{}class it extends De{async _call(C){return new Ir(await super._call(C))}}class It extends De{async _call(C){return new Et(await super._call(C))}}class St extends De{async _call(C){return new xr(await super._call(C))}}class bt extends W{}class Mr extends bt{}class Pr extends bt{}class jr extends W{}class as extends jr{}class Qt extends W{}class Cr extends Qt{}class Hs extends Qt{async _call(C){return new Ir(await super._call(C))}}class qs extends Qt{async _call(C){return new Et(await super._call(C))}}class Qs extends Qt{async _call(C){return new xr(await super._call(C))}}class Xs extends Qt{async _call(C){return new Rr(await super._call(C))}}class ht extends W{}class As extends ht{}class ks extends ht{async _call(C){return new Ir(await super._call(C))}}class $t extends ht{async _call(C){return new Et(await super._call(C))}}class Xt extends ht{async _call(C){return new xr(await super._call(C))}}class S extends ht{async _call(C){return new Rr(await super._call(C))}}class Q extends W{}class B extends Q{}class q extends Q{async _call(C){return new Ir(await super._call(C))}}class re extends Q{async _call(C){return new Et(await super._call(C))}}class ge extends Q{async _call(C){return new xr(await super._call(C))}}class Fe extends Q{async _call(C){return new Rr(await super._call(C))}}class rt extends W{}class gt extends rt{}class mt extends rt{async _call(C){return new Ir(await super._call(C))}}class xt extends rt{async _call(C){return new Et(await super._call(C))}}class st extends rt{async _call(C){return new xr(await super._call(C))}}class Bt extends rt{async _call(C){return new Rr(await super._call(C))}}class Vt extends W{}class Nr extends Vt{}class Qr extends Vt{async _call(C){return new Ir(await super._call(C))}}class sr extends Vt{async _call(C){return new Et(await super._call(C))}}class $r extends Vt{async _call(C){return new xr(await super._call(C))}}class Sr extends Vt{async _call(C){return new Rr(await super._call(C))}}class Vr extends W{}class ls extends Vr{}class Ar extends Vr{async _call(C){return new Ir(await super._call(C))}}class Is extends Vr{async _call(C){return new Et(await super._call(C))}}class Fs extends Vr{async _call(C){return new xr(await super._call(C))}}class Ur extends Vr{async _call(C){return new Rr(await super._call(C))}}class Wr extends W{}class es extends Wr{}class Or extends Wr{async _call(C){return new Et(await super._call(C))}}class ms extends Wr{async _call(C){return new xr(await super._call(C))}}class hr extends Wr{async _call(C){return new Rr(await super._call(C))}}class fr extends Wr{async _call(C){return new Ir(await super._call(C))}}class Xr extends W{}class Bs extends Xr{}class Gr extends Xr{async _call(C){return new Ir(await super._call(C))}}class Be extends Xr{async _call(C){return new Et(await super._call(C))}}class je extends Xr{async _call(C){return new xr(await super._call(C))}}class et extends W{}class Yt extends et{}class Rs extends et{async _call(C){return new Ir(await super._call(C))}}class fs extends et{async _call(C){return new Et(await super._call(C))}}class js extends et{async _call(C){return new Rr(await super._call(C))}}class _s extends W{}class dn extends _s{}class pn extends _s{async _call(C){return new Ir(await super._call(C))}}class hn extends _s{async _call(C){return new Et(await super._call(C))}}class pe extends _s{async _call(C){return new xr(await super._call(C))}}class k extends _s{async _call(C){return new Rr(await super._call(C))}}class N extends W{}class J extends N{}class ae extends N{async _call(C){return new Ir(await super._call(C))}}class de extends N{async _call(C){return new Et(await super._call(C))}}class Ee extends N{async _call(C){return new Rr(await super._call(C))}}class Ne extends W{}class qe extends Ne{}class We extends Ne{async _call(C){return new Et(await super._call(C))}}class tt extends Ne{async _call(C){return new Rr(await super._call(C))}}class Mt extends Ne{async _call(C){return new Ir(await super._call(C))}}class Rt extends W{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Lt extends Rt{}class nr extends Rt{}class Gt extends W{}class _r extends Gt{}class yr extends Gt{}class or extends W{}class gr extends or{}class Lr extends or{}class Yr extends W{}class Zt extends Yr{}class wr extends Yr{}class Kr extends Yr{async _call(C){return new Et(await super._call(C))}}class Br extends W{}class gs extends Br{}class kr extends Br{}class cs extends Br{async _call(C){return new Et(await super._call(C))}}class ur extends Br{}class ar extends W{}class mr extends ar{}class ir extends ar{}class Hr extends W{}class Ns extends Hr{}class Vn extends Hr{}class Ys extends W{}class so extends Ys{}class di extends Ys{async _call(C){return new Ir(await super._call(C))}}class no extends Ys{async _call(C){return new Et(await super._call(C))}}class io extends Ys{async _call(C){return new xr(await super._call(C))}}class oo extends Ys{async _call(C){return new Rr(await super._call(C))}}class Js extends W{}class ao extends Js{}class lo extends Js{async _call(C){return new Ir(await super._call(C))}}class co extends Js{async _call(C){return new Et(await super._call(C))}}class uo extends Js{async _call(C){return new xr(await super._call(C))}}class po extends Js{async _call(C){return new Rr(await super._call(C))}}class Zs extends W{}class ho extends Zs{}class mo extends Zs{async _call(C){return new Ir(await super._call(C))}}class pi extends Zs{async _call(C){return new Et(await super._call(C))}}class hi extends Zs{async _call(C){return new xr(await super._call(C))}}class mi extends Zs{async _call(C){return new Rr(await super._call(C))}}class fi extends W{}class fo extends fi{}class _i extends fi{}class Un extends W{constructor(){super(...arguments);Y(this,"requires_attention_mask",!1);Y(this,"main_input_name","input_features");Y(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class en extends Un{}class gi extends Un{_prepare_generation_config(C,O){return super._prepare_generation_config(C,O,w.WhisperGenerationConfig)}_retrieve_init_tokens(C){const O=[C.decoder_start_token_id];let ie=C.language;const _e=C.task;if(C.is_multilingual){ie||(console.warn("No language specified - defaulting to English (en)."),ie="en");const $e=`<|${(0,$.whisper_language_to_code)(ie)}|>`;O.push(C.lang_to_id[$e]),O.push(C.task_to_id[_e??"transcribe"])}else if(ie||_e)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!C.return_timestamps&&C.no_timestamps_token_id&&O.at(-1)!==C.no_timestamps_token_id?O.push(C.no_timestamps_token_id):C.return_timestamps&&O.at(-1)===C.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),O.pop()),O.filter(he=>he!=null)}async generate({inputs:C=null,generation_config:O=null,logits_processor:ie=null,stopping_criteria:_e=null,...he}){O=this._prepare_generation_config(O,he);const $e=he.decoder_input_ids??this._retrieve_init_tokens(O);if(O.return_timestamps&&(ie??(ie=new p.LogitsProcessorList),ie.push(new p.WhisperTimeStampLogitsProcessor(O,$e))),O.begin_suppress_tokens&&(ie??(ie=new p.LogitsProcessorList),ie.push(new p.SuppressTokensAtBeginLogitsProcessor(O.begin_suppress_tokens,$e.length))),O.return_token_timestamps){if(!O.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");O.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),O.output_attentions=!0,O.return_dict_in_generate=!0}const Le=await super.generate({inputs:C,generation_config:O,logits_processor:ie,decoder_input_ids:$e,...he});return O.return_token_timestamps&&(Le.token_timestamps=this._extract_token_timestamps(Le,O.alignment_heads,O.num_frames)),Le}_extract_token_timestamps(C,O,ie=null,_e=.02){if(!C.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");ie==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let he=this.config.median_filter_width;he===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),he=7);const $e=C.cross_attentions,Le=Array.from({length:this.config.decoder_layers},(At,ut)=>(0,u.cat)($e.map(Ft=>Ft[ut]),2)),Ue=(0,u.stack)(O.map(([At,ut])=>{if(At>=Le.length)throw new Error(`Layer index ${At} is out of bounds for cross attentions (length ${Le.length}).`);return ie?Le[At].slice(null,ut,null,[0,ie]):Le[At].slice(null,ut)})).transpose(1,0,2,3),[Xe,ft]=(0,u.std_mean)(Ue,-2,0,!0),yt=Ue.clone();for(let At=0;At<yt.dims[0];++At){const ut=yt[At];for(let Ft=0;Ft<ut.dims[0];++Ft){const Ht=ut[Ft],tr=Xe[At][Ft][0].data,dr=ft[At][Ft][0].data;for(let lr=0;lr<Ht.dims[0];++lr){let br=Ht[lr].data;for(let Fr=0;Fr<br.length;++Fr)br[Fr]=(br[Fr]-dr[Fr])/tr[Fr];br.set((0,f.medianFilter)(br,he))}}}const vt=[(0,u.mean)(yt,1)],Dt=C.sequences.dims,_t=new u.Tensor("float32",new Float32Array(Dt[0]*Dt[1]),Dt);for(let At=0;At<Dt[0];++At){const ut=vt[At].neg().squeeze_(0),[Ft,Ht]=(0,f.dynamic_time_warping)(ut.tolist()),tr=Array.from({length:Ft.length-1},(br,Fr)=>Ft[Fr+1]-Ft[Fr]),dr=(0,a.mergeArrays)([1],tr).map(br=>!!br),lr=[];for(let br=0;br<dr.length;++br)dr[br]&&lr.push(Ht[br]*_e);_t[At].data.set(lr,1)}return _t}}class wi extends gi{}class bi extends W{constructor(){super(...arguments);Y(this,"requires_attention_mask",!1);Y(this,"main_input_name","input_values");Y(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class xa extends bi{}class _o extends bi{}class mn extends W{constructor(){super(...arguments);Y(this,"main_input_name","pixel_values");Y(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Wn extends W{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Gn extends Wn{_merge_input_ids_with_image_features(C){const O=C.image_features.dims.at(-1),ie=C.image_features.view(-1,O);return F({image_token_id:this.config.image_token_index,...C,image_features:ie})}}class go extends Gn{}class wo extends Gn{}class bo extends W{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Y(this,"main_input_name","inputs_embeds")}}class Mo extends bo{_merge_input_ids_with_image_features({inputs_embeds:C,image_features:O,input_ids:ie,attention_mask:_e}){return{inputs_embeds:(0,u.cat)([O,C],1),attention_mask:(0,u.cat)([(0,u.ones)(O.dims.slice(0,2)),_e],1)}}async _prepare_inputs_embeds({input_ids:C,pixel_values:O,inputs_embeds:ie,attention_mask:_e}){if(!C&&!O)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let he,$e;return C&&(he=await this.encode_text({input_ids:C})),O&&($e=await this.encode_image({pixel_values:O})),he&&$e?{inputs_embeds:ie,attention_mask:_e}=this._merge_input_ids_with_image_features({inputs_embeds:he,image_features:$e,input_ids:C,attention_mask:_e}):ie=he||$e,{inputs_embeds:ie,attention_mask:_e}}async forward({input_ids:C,pixel_values:O,attention_mask:ie,decoder_input_ids:_e,decoder_attention_mask:he,encoder_outputs:$e,past_key_values:Le,inputs_embeds:Ue,decoder_inputs_embeds:Xe}){if(Ue||({inputs_embeds:Ue,attention_mask:ie}=await this._prepare_inputs_embeds({input_ids:C,pixel_values:O,inputs_embeds:Ue,attention_mask:ie})),!$e){let{last_hidden_state:vt}=await ne(this,{inputs_embeds:Ue,attention_mask:ie});$e=vt}if(!Xe){if(!_e)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");Xe=await this.encode_text({input_ids:_e})}return await ue(this,{inputs_embeds:Xe,attention_mask:he,encoder_attention_mask:ie,encoder_hidden_states:$e,past_key_values:Le},!0)}}class yo extends W{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class vo extends yo{_merge_input_ids_with_image_features(C){const O=C.image_features.dims.at(-1),ie=C.image_features.view(-1,O);return F({image_token_id:this.config.image_token_index,...C,image_features:ie})}}class xo extends Wn{_merge_input_ids_with_image_features(C){const O=C.image_features.dims.at(-1),ie=C.image_features.view(-1,O);return F({image_token_id:this.config.image_token_index,...C,image_features:ie})}}class To extends W{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"])}}class tn extends To{async forward({input_ids:C=null,attention_mask:O=null,pixel_values:ie=null,input_features:_e=null,input_features_mask:he=null,position_ids:$e=null,inputs_embeds:Le=null,per_layer_inputs:Ue=null,past_key_values:Xe=null,generation_config:ft=null,logits_processor:yt=null,...vt}){if((!Le||!Ue)&&({inputs_embeds:Le,per_layer_inputs:Ue}=await R(this.sessions.embed_tokens,{input_ids:C}),C.dims[1]!==1)){if(ie){const{image_features:_t}=await R(this.sessions.vision_encoder,{pixel_values:ie});({inputs_embeds:Le,attention_mask:O}=this._merge_input_ids_with_image_features({image_features:_t,inputs_embeds:Le,input_ids:C,attention_mask:O}))}if(_e){const{audio_features:_t}=await R(this.sessions.audio_encoder,{input_features:_e,input_features_mask:he});({inputs_embeds:Le,attention_mask:O}=this._merge_input_ids_with_audio_features({audio_features:_t,inputs_embeds:Le,input_ids:C,attention_mask:O}))}}return await ue(this,{inputs_embeds:Le,per_layer_inputs:Ue,past_key_values:Xe,attention_mask:O,position_ids:$e,generation_config:ft,logits_processor:yt},!0)}_merge_input_ids_with_image_features(C){const O=C.image_features.dims.at(-1),ie=C.image_features.view(-1,O);return F({image_token_id:this.config.image_token_id,...C,image_features:ie})}_merge_input_ids_with_audio_features(C){const O=C.audio_features.dims.at(-1),ie=C.audio_features.view(-1,O);return U({audio_token_id:this.config.audio_token_id,...C,audio_features:ie})}}class rn extends W{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class fn extends rn{async encode_image({pixel_values:C,pixel_attention_mask:O}){return(await R(this.sessions.vision_encoder,{pixel_values:C,pixel_attention_mask:O})).image_features}_merge_input_ids_with_image_features(C){const O=C.image_features.dims.at(-1),ie=C.image_features.view(-1,O);return F({image_token_id:this.config.image_token_id,...C,image_features:ie})}}class Mi extends fn{}class Eo extends W{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class _n extends Eo{async forward({input_ids:C=null,attention_mask:O=null,pixel_values:ie=null,image_sizes:_e=null,position_ids:he=null,inputs_embeds:$e=null,past_key_values:Le=null,generation_config:Ue=null,logits_processor:Xe=null,...ft}){if(!$e){let vt;if(ie&&C.dims[1]!==1){if(!_e)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:vt}=await R(this.sessions.vision_encoder,{pixel_values:ie,image_sizes:_e}))}else{const Dt=this.config.normalized_config.hidden_size;vt=new u.Tensor("float32",[],[0,Dt])}({inputs_embeds:$e}=await R(this.sessions.prepare_inputs_embeds,{input_ids:C,image_features:vt}))}return await ue(this,{inputs_embeds:$e,past_key_values:Le,attention_mask:O,position_ids:he,generation_config:Ue,logits_processor:Xe},!1)}}class ws extends W{}class yi extends ws{}class Po extends ws{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"text_model"})}}class vi extends ws{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"text_model"})}}class Co extends ws{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"vision_model"})}}class xi extends ws{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"vision_model"})}}class Kn extends W{}class $o extends Kn{}class Ti extends Kn{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"text_model"})}}class Ei extends ws{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"vision_model"})}}class gn extends W{}class dt extends gn{}class Hn extends W{}class Pi extends Hn{async forward(C){const O=!C.input_ids,ie=!C.pixel_values;if(O&&ie)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(O&&(C.input_ids=(0,u.ones)([C.pixel_values.dims[0],1])),ie){const{image_size:Xe}=this.config.vision_config;C.pixel_values=(0,u.full)([0,3,Xe,Xe],0)}const{text_embeddings:_e,image_embeddings:he,l2norm_text_embeddings:$e,l2norm_image_embeddings:Le}=await super.forward(C),Ue={};return O||(Ue.text_embeddings=_e,Ue.l2norm_text_embeddings=$e),ie||(Ue.image_embeddings=he,Ue.l2norm_image_embeddings=Le),Ue}}class Ci extends Hn{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"text_model"})}}class wn extends Hn{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"vision_model"})}}class ts extends W{}class bn extends ts{}class qn extends ts{}class Qn extends W{}class $i extends Qn{}class Si extends Qn{}class Mn extends W{}class Ai extends Mn{}class ki extends Mn{}class Xn extends W{}class yn extends Xn{}class Yn extends Xn{}class vn extends W{}class Ii extends vn{}class Fi extends vn{}class Jn extends W{}class Di extends Jn{}class Oi extends Jn{}class Zn extends W{}class h extends Zn{}class E extends Zn{}class I extends W{}class z extends I{}class V extends I{}class ce extends W{}class Ce extends ce{}class Oe extends ce{}class Ke extends W{}class ot extends Ke{}class Tt extends Ke{}class Ot extends W{}class Kt extends Ot{}class vr extends Ot{}class Ds extends W{}class So extends Ds{}class Vu extends Ds{}class Ta extends W{}class Uu extends Ta{}class Wu extends Ta{}class Ea extends W{}class Gu extends Ea{}class Ku extends Ea{}class Pa extends W{}class Hu extends Pa{}class qu extends Pa{}class Ca extends W{}class Qu extends Ca{}class Xu extends Ca{}class $a extends W{}class Yu extends $a{}class Ju extends $a{}class Sa extends W{}class Zu extends Sa{}class ed extends Sa{}class Aa extends W{}class td extends Aa{}class rd extends Aa{}class ka extends W{}class sd extends ka{}class nd extends ka{}class Ia extends W{}class id extends Ia{}class od extends Ia{}class Fa extends W{}class ad extends Fa{}class ld extends Fa{}class Da extends W{}class cd extends Da{}class ud extends Da{}class Oa extends W{}class dd extends Oa{}class pd extends Oa{}class La extends W{}class hd extends La{}class md extends La{}class fd extends W{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class _d extends fd{get_rope_index(C,O,ie,_e){const{vision_config:he,image_token_id:$e,video_token_id:Le,vision_start_token_id:Ue}=this.config,Xe=he.spatial_merge_size??2,ft=[];if(O||ie){let yt=C.tolist();_e||(_e=(0,u.ones_like)(C));const vt=_e.tolist(),Dt=Array.from({length:3},Ht=>Array.from({length:C.dims[0]},tr=>Array.from({length:C.dims[1]},dr=>1))),_t=O?O.tolist():[],At=ie?ie.tolist():[];let ut=0,Ft=0;for(let Ht=0;Ht<yt.length;++Ht){const tr=yt[Ht].filter((rr,Er)=>vt[Ht][Er]==1),lr=tr.reduce((rr,Er,nn)=>(Er==Ue&&rr.push(nn),rr),[]).map(rr=>tr[rr+1]),br=lr.filter(rr=>rr==$e).length,Fr=lr.filter(rr=>rr==Le).length;let kt=[],Tr=0,ss=br,Tn=Fr;for(let rr=0;rr<lr.length;++rr){const Er=tr.findIndex((Cn,bs)=>bs>Tr&&Cn==$e),nn=tr.findIndex((Cn,bs)=>bs>Tr&&Cn==Le),Pn=ss>0&&Er!==-1?Er:tr.length+1,ri=Tn>0&&nn!==-1?nn:tr.length+1;let qo,zl,Bl,Rl;Pn<ri?([zl,Bl,Rl]=_t[ut],++ut,--ss,qo=Pn):([zl,Bl,Rl]=At[Ft],++Ft,--Tn,qo=ri);const[jv,jl,Qo]=[Number(zl),Math.floor(Number(Bl)/Xe),Math.floor(Number(Rl)/Xe)],Nl=qo-Tr,e_=kt.length>0?(0,f.max)(kt.at(-1))[0]+1:0;kt.push(Array.from({length:3*Nl},(Cn,bs)=>e_+bs%Nl));const Vl=Nl+e_,Xo=jv*jl*Qo,Nv=Array.from({length:Xo},(Cn,bs)=>Vl+Math.floor(bs/(jl*Qo))),Vv=Array.from({length:Xo},(Cn,bs)=>Vl+Math.floor(bs/Qo)%jl),Uv=Array.from({length:Xo},(Cn,bs)=>Vl+bs%Qo);kt.push([Nv,Vv,Uv].flat()),Tr=qo+Xo}if(Tr<tr.length){const rr=kt.length>0?(0,f.max)(kt.at(-1))[0]+1:0,Er=tr.length-Tr;kt.push(Array.from({length:3*Er},(nn,Pn)=>rr+Pn%Er))}const Jr=kt.reduce((rr,Er)=>rr+Er.length,0),us=new Array(Jr);let Go=0;for(let rr=0;rr<3;++rr)for(let Er=0;Er<kt.length;++Er){const nn=kt[Er],Pn=nn.length/3;for(let ri=rr*Pn;ri<(rr+1)*Pn;++ri)us[Go++]=nn[ri]}let En=0;const Ko=vt[Ht];for(let rr=0;rr<Ko.length;++rr)if(Ko[rr]==1){for(let Er=0;Er<3;++Er)Dt[Er][Ht][rr]=us[Er*Jr/3+En];++En}const Ho=(0,f.max)(us)[0];ft.push(Ho+1-yt[Ht].length)}return[new u.Tensor("int64",Dt.flat(1/0),[3,C.dims[0],C.dims[1]]),new u.Tensor("int64",ft,[ft.length,1])]}else if(_e){const{data:yt,dims:vt}=Te(_e),Dt=BigInt64Array.from({length:3*yt.length},(At,ut)=>yt[ut%yt.length]),_t=Array.from({length:vt[0]},(At,ut)=>(0,f.max)(yt.subarray(vt[1]*ut,vt[1]*(ut+1)))[0]+1n+BigInt(vt[1]));return[new u.Tensor("int64",Dt,[3,...vt]),new u.Tensor("int64",_t,[_t.length,1])]}else{const[yt,vt]=C.dims,Dt=BigInt64Array.from({length:3*yt*vt},(_t,At)=>BigInt(Math.floor(At%vt/yt)));return[new u.Tensor("int64",Dt,[3,...C.dims]),(0,u.zeros)([yt,1])]}}async encode_image({pixel_values:C,image_grid_thw:O}){return(await R(this.sessions.vision_encoder,{pixel_values:C,grid_thw:O})).image_features}_merge_input_ids_with_image_features(C){return F({image_token_id:this.config.image_token_id,...C})}prepare_inputs_for_generation(C,O,ie){if(O.attention_mask&&!O.position_ids)if(!O.past_key_values)[O.position_ids,O.rope_deltas]=this.get_rope_index(O.input_ids,O.image_grid_thw,O.video_grid_thw,O.attention_mask);else{O.pixel_values=null;const _e=BigInt(Object.values(O.past_key_values)[0].dims.at(-2)),he=O.rope_deltas.map($e=>_e+$e);O.position_ids=(0,u.stack)([he,he,he],0)}return O}}class za extends W{}class gd extends za{}class wd extends za{}class Ba extends W{}class bd extends Ba{}class Md extends Ba{}class Ra extends W{}class yd extends Ra{}class vd extends Ra{}class ja extends W{}class xd extends ja{}class Td extends ja{}class Na extends W{}class Ed extends Na{}class Pd extends Na{}class Va extends W{}class Cd extends Va{}class $d extends Va{async _call(C){return new Et(await super._call(C))}}class Ua extends W{}class Sd extends Ua{}class Ad extends Ua{async _call(C){return new Et(await super._call(C))}}class kd extends W{}class Id extends kd{}class Wa extends W{}class Fd extends Wa{}class Dd extends Wa{async _call(C){return new Et(await super._call(C))}}class Od extends W{}class Ld extends Od{}class Ga extends W{}class zd extends Ga{}class Bd extends Ga{async _call(C){return new Et(await super._call(C))}}class Rd extends W{}class jd extends Rd{}class Ka extends W{}class Nd extends Ka{}class Vd extends Ka{async _call(C){return new Et(await super._call(C))}}class Ud extends W{}class Wd extends Ud{async _call(C){return new Jf(await super._call(C))}}class Ha extends W{}class Gd extends Ha{}class Kd extends Ha{async _call(C){return new Et(await super._call(C))}}class qa extends W{}class Hd extends qa{}class qd extends qa{async _call(C){return new Et(await super._call(C))}}class Qa extends W{}class Qd extends Qa{}class Xd extends Qa{}class Xa extends W{}class Yd extends Xa{}class Jd extends Xa{}class Ya extends W{}class Zd extends Ya{}class ep extends Ya{async _call(C){return new Et(await super._call(C))}}class Ao extends W{}class tp extends Ao{}class rp extends Ao{async _call(C){return new Za(await super._call(C))}}class Ja extends Ao{async _call(C){return new sp(await super._call(C))}}class Za extends ye{constructor({logits:C,pred_boxes:O}){super(),this.logits=C,this.pred_boxes=O}}class sp extends ye{constructor({logits:C,pred_boxes:O,pred_masks:ie}){super(),this.logits=C,this.pred_boxes=O,this.pred_masks=ie}}class el extends W{}class np extends el{}class ip extends el{async _call(C){return new Li(await super._call(C))}}class Li extends ye{constructor({logits:C,pred_boxes:O}){super(),this.logits=C,this.pred_boxes=O}}class tl extends W{}class op extends tl{}class ap extends tl{async _call(C){return new lp(await super._call(C))}}class lp extends Li{}class rl extends W{}class cp extends rl{}class up extends rl{async _call(C){return new dp(await super._call(C))}}class dp extends Li{}class sl extends W{}class pp extends sl{}class hp extends sl{async _call(C){return new Li(await super._call(C))}}class nl extends W{}class mp extends nl{}class fp extends nl{async _call(C){return new _p(await super._call(C))}}class _p extends Za{}class il extends W{}class gp extends il{}class wp extends il{async _call(C){return new Et(await super._call(C))}}class ol extends W{}class bp extends ol{}class Mp extends ol{async _call(C){return new Et(await super._call(C))}}class al extends W{}class yp extends al{}class vp extends al{async _call(C){return new Et(await super._call(C))}}class ko extends W{}class xp extends ko{}class Tp extends ko{async _call(C){return new Et(await super._call(C))}}class Ep extends ko{}class ll extends W{}class Pp extends ll{}class Cp extends ll{}class cl extends W{}class $p extends cl{}class Sp extends cl{}class Ap extends W{}class kp extends Ap{}class Io extends W{}class Ip extends Io{}class Fp extends Io{}class Dp extends Io{}class Op extends W{}class Lp extends Op{}class zp extends W{}class Bp extends zp{}class Rp extends W{}class jp extends Rp{}class ul extends W{}class Np extends ul{}class Vp extends ul{}class dl extends W{}class Up extends dl{}class Wp extends dl{}class Gp extends W{}class Kp extends Gp{}class pl extends W{}class Hp extends pl{}class qp extends pl{async _call(C){return new Et(await super._call(C))}}class hl extends W{}class Qp extends hl{}class Xp extends hl{async _call(C){return new Et(await super._call(C))}}class ml extends W{}class Yp extends ml{}class Jp extends ml{async _call(C){return new Et(await super._call(C))}}class fl extends W{}class Zp extends fl{}class eh extends fl{async _call(C){return new Et(await super._call(C))}}class th extends W{}class rh extends th{}class _l extends W{}class sh extends _l{}class nh extends _l{async _call(C){return new ih(await super._call(C))}}class ih extends ye{constructor({logits:C,pred_boxes:O}){super(),this.logits=C,this.pred_boxes=O}}class oh extends W{}class ah extends oh{async get_image_embeddings({pixel_values:C}){return await ne(this,{pixel_values:C})}async forward(C){if((!C.image_embeddings||!C.image_positional_embeddings)&&(C={...C,...await this.get_image_embeddings(C)}),!C.input_labels&&C.input_points){const ie=C.input_points.dims.slice(0,-1),_e=ie.reduce((he,$e)=>he*$e,1);C.input_labels=new u.Tensor("int64",new BigInt64Array(_e).fill(1n),ie)}const O={image_embeddings:C.image_embeddings,image_positional_embeddings:C.image_positional_embeddings};return C.input_points&&(O.input_points=C.input_points),C.input_labels&&(O.input_labels=C.input_labels),C.input_boxes&&(O.input_boxes=C.input_boxes),await R(this.sessions.prompt_encoder_mask_decoder,O)}async _call(C){return new lh(await super._call(C))}}class lh extends ye{constructor({iou_scores:C,pred_masks:O}){super(),this.iou_scores=C,this.pred_masks=O}}class gl extends W{}class ch extends gl{}class uh extends gl{}class wl extends W{}class dh extends wl{}class ph extends wl{}class sn extends W{}class hh extends sn{}class mh extends sn{async _call(C){return new xn(await super._call(C))}}class fh extends sn{async _call(C){return new Et(await super._call(C))}}class _h extends sn{async _call(C){return new xr(await super._call(C))}}class bl extends W{}class gh extends bl{}class wh extends bl{async _call(C){return new xr(await super._call(C))}}class bh extends W{}class Mh extends bh{}class Fo extends W{}class yh extends Fo{}class vh extends Fo{async _call(C){return new xn(await super._call(C))}}class xh extends Fo{async _call(C){return new Et(await super._call(C))}}class zi extends W{}class Th extends zi{}class Eh extends zi{async _call(C){return new xn(await super._call(C))}}class Ph extends zi{async _call(C){return new Et(await super._call(C))}}class Ch extends zi{async _call(C){return new xr(await super._call(C))}}class Do extends W{}class $h extends Do{}class Sh extends Do{async _call(C){return new xn(await super._call(C))}}class Ah extends Do{async _call(C){return new Et(await super._call(C))}}class Ev extends W{}class kh extends sn{}class Ih extends sn{async _call(C){return new xn(await super._call(C))}}class Fh extends sn{async _call(C){return new Et(await super._call(C))}}class ei extends W{}class Dh extends ei{}class Oh extends ei{async _call(C){return new xn(await super._call(C))}}class Lh extends ei{async _call(C){return new Et(await super._call(C))}}class zh extends ei{async _call(C){return new Yf(await super._call(C))}}class Bh extends ei{async _call(C){return new xr(await super._call(C))}}class Rh extends W{}class jh extends Rh{}class Oo extends W{}class Pv extends Oo{}class Nh extends Oo{}class Vh extends Oo{async generate_speech(C,O,{threshold:ie=.5,minlenratio:_e=0,maxlenratio:he=20,vocoder:$e=null}={}){const Le={input_ids:C},{encoder_outputs:Ue,encoder_attention_mask:Xe}=await ne(this,Le),ft=Ue.dims[1]/this.config.reduction_factor,yt=Math.floor(ft*he),vt=Math.floor(ft*_e),Dt=this.config.num_mel_bins;let _t=[],At=null,ut=null,Ft=0;for(;;){++Ft;const dr=ee(!!ut);let lr;ut?lr=ut.output_sequence_out:lr=new u.Tensor("float32",new Float32Array(Dt),[1,1,Dt]);let br={use_cache_branch:dr,output_sequence:lr,encoder_attention_mask:Xe,speaker_embeddings:O,encoder_hidden_states:Ue};this.addPastKeyValues(br,At),ut=await R(this.sessions.decoder_model_merged,br),At=this.getPastKeyValues(ut,At);const{prob:Fr,spectrum:kt}=ut;if(_t.push(kt),Ft>=vt&&(Array.from(Fr.data).filter(Tr=>Tr>=ie).length>0||Ft>=yt))break}const Ht=(0,u.cat)(_t),{waveform:tr}=await R($e.sessions.model,{spectrogram:Ht});return{spectrogram:Ht,waveform:tr}}}class Uh extends W{constructor(){super(...arguments);Y(this,"main_input_name","spectrogram")}}class Wh extends W{}class Gh extends Wh{}class Ml extends W{}class Kh extends Ml{}class Hh extends Ml{}class yl extends W{}class qh extends yl{}class Qh extends yl{}class vl extends W{}class Xh extends vl{}class Yh extends vl{}class xl extends W{}class Jh extends xl{}class Zh extends xl{}class Lo extends W{}class em extends Lo{}class tm extends Lo{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"text_model"})}}class rm extends Lo{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"audio_model"})}}class sm extends W{}class Tl extends sm{async _call(C){return new Zf(await super._call(C))}}class zo extends W{}class Cv extends zo{}class nm extends zo{}class im extends zo{}class El extends W{}class om extends El{}class am extends El{}class Pl extends W{}class lm extends Pl{}class cm extends Pl{async _call(C){return new Et(await super._call(C))}}class Cl extends W{}class $v extends Cl{}class Sv extends Cl{}class $l extends W{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(O){const[ie,_e]=O.dims,he=this.config.decoder.num_codebooks,$e=_e-he;let Le=0;for(let ft=0;ft<O.size;++ft){if(O.data[ft]===this.config.decoder.pad_token_id)continue;const yt=ft%_e,vt=Math.floor(ft/_e)%he,Dt=yt-vt;Dt>0&&Dt<=$e&&(O.data[Le++]=O.data[ft])}const Ue=Math.floor(ie/he),Xe=Le/(Ue*he);return new u.Tensor(O.type,O.data.slice(0,Le),[Ue,he,Xe])}prepare_inputs_for_generation(O,ie,_e){let he=structuredClone(O);for(let Le=0;Le<he.length;++Le)for(let Ue=0;Ue<he[Le].length;++Ue)Le%this.config.decoder.num_codebooks>=Ue&&(he[Le][Ue]=BigInt(this.config.decoder.pad_token_id));return _e.guidance_scale!==null&&_e.guidance_scale>1&&(he=he.concat(he)),super.prepare_inputs_for_generation(he,ie,_e)}async generate(O){const ie=await super.generate(O),_e=this._apply_and_filter_by_delay_pattern_mask(ie).unsqueeze_(0),{audio_values:he}=await R(this.sessions.encodec_decode,{audio_codes:_e});return he}}class Bo extends W{}class um extends Bo{}class dm extends Bo{async _call(C){return new Et(await super._call(C))}}class pm extends Bo{}class Ro extends W{}class hm extends Ro{}class mm extends Ro{async _call(C){return new Et(await super._call(C))}}class fm extends Ro{}class jo extends W{}class _m extends jo{}class gm extends jo{async _call(C){return new Et(await super._call(C))}}class wm extends jo{}class No extends W{}class bm extends No{}class Mm extends No{async _call(C){return new Et(await super._call(C))}}class ym extends No{}class vm extends W{}class xm extends vm{}class Tm extends W{}class Em extends Tm{constructor(...O){super(...O);Y(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(O){const ie=this._generation_mode??"text";let _e;if(ie==="text"||!O.past_key_values){const Xe=this.sessions.prepare_inputs_embeds,ft=(0,a.pick)(O,Xe.inputNames);_e=await R(Xe,ft)}else{const Xe=this.sessions.gen_img_embeds,ft=(0,a.pick)({image_ids:O.input_ids},Xe.inputNames);_e=await R(Xe,ft)}const he={...O,..._e},$e=await ue(this,he),Le=this.sessions[ie==="text"?"lm_head":"gen_head"];if(!Le)throw new Error(`Unable to find "${Le}" generation head`);const Ue=await R(Le,(0,a.pick)($e,Le.inputNames));return{..._e,...$e,...Ue}}async generate(O){return this._generation_mode="text",super.generate(O)}async generate_images(O){this._generation_mode="image";const ie=(O.inputs??O[this.main_input_name]).dims[1],he=(await super.generate(O)).slice(null,[ie,null]),$e=this.sessions.image_decode,{decoded_image:Le}=await R($e,{generated_tokens:he}),Ue=Le.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Xe=[];for(const ft of Ue){const yt=_.RawImage.fromTensor(ft);Xe.push(yt)}return Xe}}class Pm extends ye{constructor({char_logits:C,bpe_logits:O,wp_logits:ie}){super(),this.char_logits=C,this.bpe_logits=O,this.wp_logits=ie}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Cm extends W{}class $m extends Cm{async _call(C){return new Pm(await super._call(C))}}class Sl extends W{}class Sm extends Sl{}class Am extends Sl{}class Al extends W{}class km extends Al{}class Im extends Al{}class Fm extends W{constructor(){super(...arguments);Y(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class kl extends Fm{_merge_input_ids_with_audio_features(C){const O=C.audio_features.dims.at(-1),ie=C.audio_features.view(-1,O);return U({audio_token_id:this.config.ignore_index??this.config.audio_token_id,...C,audio_features:ie})}}class Dm extends kl{}class Vo extends W{constructor(){super(...arguments);Y(this,"main_input_name","input_values");Y(this,"forward_params",["input_values"])}}class Om extends ye{constructor({audio_codes:C}){super(),this.audio_codes=C}}class Lm extends ye{constructor({audio_values:C}){super(),this.audio_values=C}}class zm extends Vo{async encode(C){return new Om(await R(this.sessions.encoder_model,C))}async decode(C){return new Lm(await R(this.sessions.decoder_model,C))}}class Bm extends Vo{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"encoder_model"})}}class Rm extends Vo{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"decoder_model"})}}class Uo extends W{constructor(){super(...arguments);Y(this,"main_input_name","input_values");Y(this,"forward_params",["input_values"])}}class jm extends ye{constructor({audio_codes:C}){super(),this.audio_codes=C}}class Nm extends ye{constructor({audio_values:C}){super(),this.audio_values=C}}class Vm extends Uo{async encode(C){return new jm(await R(this.sessions.encoder_model,C))}async decode(C){return new Nm(await R(this.sessions.decoder_model,C))}}class Um extends Uo{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"encoder_model"})}}class Wm extends Uo{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"decoder_model"})}}class Wo extends W{constructor(){super(...arguments);Y(this,"main_input_name","input_values");Y(this,"forward_params",["input_values"])}}class Gm extends Wo{async encode(C){return await R(this.sessions.encoder_model,C)}async decode(C){return await R(this.sessions.decoder_model,C)}}class Km extends Wo{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"encoder_model"})}}class Hm extends Wo{static async from_pretrained(C,O={}){return super.from_pretrained(C,{...O,model_file_name:O.model_file_name??"decoder_model"})}}class jt{static async from_pretrained(C,{progress_callback:O=null,config:ie=null,cache_dir:_e=null,local_files_only:he=!1,revision:$e="main",model_file_name:Le=null,subfolder:Ue="onnx",device:Xe=null,dtype:ft=null,use_external_data_format:yt=null,session_options:vt={}}={}){const Dt={progress_callback:O,config:ie,cache_dir:_e,local_files_only:he,revision:$e,model_file_name:Le,subfolder:Ue,device:Xe,dtype:ft,use_external_data_format:yt,session_options:vt};if(Dt.config=await s.AutoConfig.from_pretrained(C,Dt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const _t=Dt.config.model_type;for(const At of this.MODEL_CLASS_MAPPINGS){let ut=At.get(_t);if(!ut){for(const Ft of At.values())if(Ft[0]===_t){ut=Ft;break}if(!ut)continue}return await ut[1].from_pretrained(C,Dt)}if(this.BASE_IF_FAIL)return Mf.has(_t)||console.warn(`Unknown model class "${_t}", attempting to construct from base class.`),await W.from_pretrained(C,Dt);throw Error(`Unsupported model type: ${_t}`)}}Y(jt,"MODEL_CLASS_MAPPINGS",null),Y(jt,"BASE_IF_FAIL",!1);const Av=new Map([["bert",["BertModel",be]],["neobert",["NeoBertModel",xe]],["modernbert",["ModernBertModel",Je]],["nomic_bert",["NomicBertModel",as]],["roformer",["RoFormerModel",Cr]],["electra",["ElectraModel",B]],["esm",["EsmModel",Bs]],["convbert",["ConvBertModel",As]],["camembert",["CamembertModel",gt]],["deberta",["DebertaModel",Nr]],["deberta-v2",["DebertaV2Model",ls]],["mpnet",["MPNetModel",dn]],["albert",["AlbertModel",qe]],["distilbert",["DistilBertModel",es]],["roberta",["RobertaModel",so]],["xlm",["XLMModel",ao]],["xlm-roberta",["XLMRobertaModel",ho]],["clap",["ClapModel",em]],["clip",["CLIPModel",yi]],["clipseg",["CLIPSegModel",bn]],["chinese_clip",["ChineseCLIPModel",dt]],["siglip",["SiglipModel",$o]],["jina_clip",["JinaCLIPModel",Pi]],["mobilebert",["MobileBertModel",Yt]],["squeezebert",["SqueezeBertModel",J]],["wav2vec2",["Wav2Vec2Model",hh]],["wav2vec2-bert",["Wav2Vec2BertModel",$h]],["unispeech",["UniSpeechModel",yh]],["unispeech-sat",["UniSpeechSatModel",Th]],["hubert",["HubertModel",kh]],["wavlm",["WavLMModel",Dh]],["audio-spectrogram-transformer",["ASTModel",fo]],["vits",["VitsModel",Tl]],["pyannote",["PyAnnoteModel",gh]],["wespeaker-resnet",["WeSpeakerResNetModel",Mh]],["detr",["DetrModel",tp]],["rt_detr",["RTDetrModel",np]],["rt_detr_v2",["RTDetrV2Model",op]],["rf_detr",["RFDetrModel",cp]],["d_fine",["DFineModel",pp]],["table-transformer",["TableTransformerModel",mp]],["vit",["ViTModel",Cd]],["ijepa",["IJepaModel",Sd]],["pvt",["PvtModel",Fd]],["vit_msn",["ViTMSNModel",zd]],["vit_mae",["ViTMAEModel",Ld]],["groupvit",["GroupViTModel",jd]],["fastvit",["FastViTModel",Nd]],["mobilevit",["MobileViTModel",Gd]],["mobilevitv2",["MobileViTV2Model",Hd]],["owlvit",["OwlViTModel",Qd]],["owlv2",["Owlv2Model",Yd]],["beit",["BeitModel",Zd]],["deit",["DeiTModel",gp]],["hiera",["HieraModel",bp]],["convnext",["ConvNextModel",Hp]],["convnextv2",["ConvNextV2Model",Qp]],["dinov2",["Dinov2Model",Yp]],["dinov2_with_registers",["Dinov2WithRegistersModel",Zp]],["resnet",["ResNetModel",yp]],["swin",["SwinModel",xp]],["swin2sr",["Swin2SRModel",Pp]],["donut-swin",["DonutSwinModel",Kp]],["yolos",["YolosModel",sh]],["dpt",["DPTModel",$p]],["glpn",["GLPNModel",Up]],["hifigan",["SpeechT5HifiGan",Uh]],["efficientnet",["EfficientNetModel",lm]],["decision_transformer",["DecisionTransformerModel",xm]],["patchtst",["PatchTSTForPrediction",Sm]],["patchtsmixer",["PatchTSMixerForPrediction",km]],["mobilenet_v1",["MobileNetV1Model",um]],["mobilenet_v2",["MobileNetV2Model",hm]],["mobilenet_v3",["MobileNetV3Model",_m]],["mobilenet_v4",["MobileNetV4Model",bm]],["maskformer",["MaskFormerModel",Np]],["mgp-str",["MgpstrForSceneTextRecognition",$m]],["style_text_to_speech_2",["StyleTextToSpeech2Model",jh]]]),kv=new Map([["t5",["T5Model",Lt]],["longt5",["LongT5Model",_r]],["mt5",["MT5Model",gr]],["bart",["BartModel",Zt]],["mbart",["MBartModel",gs]],["marian",["MarianModel",ch]],["whisper",["WhisperModel",en]],["m2m_100",["M2M100Model",dh]],["blenderbot",["BlenderbotModel",mr]],["blenderbot-small",["BlenderbotSmallModel",Ns]]]),Iv=new Map([["mimi",["MimiModel",zm]],["dac",["DacModel",Vm]],["snac",["SnacModel",Gm]]]),Fv=new Map([["bloom",["BloomModel",yd]],["jais",["JAISModel",Ai]],["gpt2",["GPT2Model",$i]],["gptj",["GPTJModel",Di]],["gpt_bigcode",["GPTBigCodeModel",h]],["gpt_neo",["GPTNeoModel",yn]],["gpt_neox",["GPTNeoXModel",Ii]],["codegen",["CodeGenModel",z]],["llama",["LlamaModel",Ce]],["lfm2",["Lfm2Model",ot]],["smollm3",["SmolLM3Model",Kt]],["exaone",["ExaoneModel",Gu]],["olmo",["OlmoModel",Qu]],["olmo2",["Olmo2Model",Yu]],["mobilellm",["MobileLLMModel",Hu]],["granite",["GraniteModel",Zu]],["cohere",["CohereModel",td]],["gemma",["GemmaModel",sd]],["gemma2",["Gemma2Model",id]],["gemma3_text",["Gemma3Model",ad]],["helium",["HeliumModel",So]],["glm",["GlmModel",Uu]],["openelm",["OpenELMModel",cd]],["qwen2",["Qwen2Model",dd]],["qwen3",["Qwen3Model",hd]],["phi",["PhiModel",gd]],["phi3",["Phi3Model",bd]],["mpt",["MptModel",xd]],["opt",["OPTModel",Ed]],["mistral",["MistralModel",Kh]],["ernie4_5",["Ernie4_5_Model",qh]],["starcoder2",["Starcoder2Model",Xh]],["falcon",["FalconModel",Jh]],["stablelm",["StableLmModel",om]],["modernbert-decoder",["ModernBertDecoderModel",Mr]]]),Il=new Map([["speecht5",["SpeechT5ForSpeechToText",Nh]],["whisper",["WhisperForConditionalGeneration",gi]],["lite-whisper",["LiteWhisperForConditionalGeneration",wi]],["moonshine",["MoonshineForConditionalGeneration",_o]]]),qm=new Map([["speecht5",["SpeechT5ForTextToSpeech",Vh]]]),Qm=new Map([["vits",["VitsModel",Tl]],["musicgen",["MusicgenForConditionalGeneration",$l]]]),Xm=new Map([["bert",["BertForSequenceClassification",we]],["neobert",["NeoBertForSequenceClassification",Ge]],["modernbert",["ModernBertForSequenceClassification",It]],["roformer",["RoFormerForSequenceClassification",qs]],["electra",["ElectraForSequenceClassification",re]],["esm",["EsmForSequenceClassification",Be]],["convbert",["ConvBertForSequenceClassification",$t]],["camembert",["CamembertForSequenceClassification",xt]],["deberta",["DebertaForSequenceClassification",sr]],["deberta-v2",["DebertaV2ForSequenceClassification",Is]],["mpnet",["MPNetForSequenceClassification",hn]],["albert",["AlbertForSequenceClassification",We]],["distilbert",["DistilBertForSequenceClassification",Or]],["roberta",["RobertaForSequenceClassification",no]],["xlm",["XLMForSequenceClassification",co]],["xlm-roberta",["XLMRobertaForSequenceClassification",pi]],["bart",["BartForSequenceClassification",Kr]],["mbart",["MBartForSequenceClassification",cs]],["mobilebert",["MobileBertForSequenceClassification",fs]],["squeezebert",["SqueezeBertForSequenceClassification",de]]]),Ym=new Map([["bert",["BertForTokenClassification",Ie]],["neobert",["NeoBertForTokenClassification",nt]],["modernbert",["ModernBertForTokenClassification",St]],["roformer",["RoFormerForTokenClassification",Qs]],["electra",["ElectraForTokenClassification",ge]],["esm",["EsmForTokenClassification",je]],["convbert",["ConvBertForTokenClassification",Xt]],["camembert",["CamembertForTokenClassification",st]],["deberta",["DebertaForTokenClassification",$r]],["deberta-v2",["DebertaV2ForTokenClassification",Fs]],["mpnet",["MPNetForTokenClassification",pe]],["distilbert",["DistilBertForTokenClassification",ms]],["roberta",["RobertaForTokenClassification",io]],["xlm",["XLMForTokenClassification",uo]],["xlm-roberta",["XLMRobertaForTokenClassification",hi]]]),Fl=new Map([["t5",["T5ForConditionalGeneration",nr]],["longt5",["LongT5ForConditionalGeneration",yr]],["mt5",["MT5ForConditionalGeneration",Lr]],["bart",["BartForConditionalGeneration",wr]],["mbart",["MBartForConditionalGeneration",kr]],["marian",["MarianMTModel",uh]],["m2m_100",["M2M100ForConditionalGeneration",ph]],["blenderbot",["BlenderbotForConditionalGeneration",ir]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Vn]]]),Dl=new Map([["bloom",["BloomForCausalLM",vd]],["gpt2",["GPT2LMHeadModel",Si]],["jais",["JAISLMHeadModel",ki]],["gptj",["GPTJForCausalLM",Oi]],["gpt_bigcode",["GPTBigCodeForCausalLM",E]],["gpt_neo",["GPTNeoForCausalLM",Yn]],["gpt_neox",["GPTNeoXForCausalLM",Fi]],["codegen",["CodeGenForCausalLM",V]],["llama",["LlamaForCausalLM",Oe]],["lfm2",["Lfm2ForCausalLM",Tt]],["smollm3",["SmolLM3ForCausalLM",vr]],["exaone",["ExaoneForCausalLM",Ku]],["olmo",["OlmoForCausalLM",Xu]],["olmo2",["Olmo2ForCausalLM",Ju]],["mobilellm",["MobileLLMForCausalLM",qu]],["granite",["GraniteForCausalLM",ed]],["cohere",["CohereForCausalLM",rd]],["gemma",["GemmaForCausalLM",nd]],["gemma2",["Gemma2ForCausalLM",od]],["gemma3_text",["Gemma3ForCausalLM",ld]],["helium",["HeliumForCausalLM",Vu]],["glm",["GlmForCausalLM",Wu]],["openelm",["OpenELMForCausalLM",ud]],["qwen2",["Qwen2ForCausalLM",pd]],["qwen3",["Qwen3ForCausalLM",md]],["phi",["PhiForCausalLM",wd]],["phi3",["Phi3ForCausalLM",Md]],["mpt",["MptForCausalLM",Td]],["opt",["OPTForCausalLM",Pd]],["mbart",["MBartForCausalLM",ur]],["mistral",["MistralForCausalLM",Hh]],["ernie4_5",["Ernie4_5_ForCausalLM",Qh]],["starcoder2",["Starcoder2ForCausalLM",Yh]],["falcon",["FalconForCausalLM",Zh]],["trocr",["TrOCRForCausalLM",Gh]],["stablelm",["StableLmForCausalLM",am]],["modernbert-decoder",["ModernBertDecoderForCausalLM",Pr]],["phi3_v",["Phi3VForCausalLM",_n]]]),Dv=new Map([["multi_modality",["MultiModalityCausalLM",Em]]]),Jm=new Map([["bert",["BertForMaskedLM",Se]],["neobert",["NeoBertForMaskedLM",Ze]],["modernbert",["ModernBertForMaskedLM",it]],["roformer",["RoFormerForMaskedLM",Hs]],["electra",["ElectraForMaskedLM",q]],["esm",["EsmForMaskedLM",Gr]],["convbert",["ConvBertForMaskedLM",ks]],["camembert",["CamembertForMaskedLM",mt]],["deberta",["DebertaForMaskedLM",Qr]],["deberta-v2",["DebertaV2ForMaskedLM",Ar]],["mpnet",["MPNetForMaskedLM",pn]],["albert",["AlbertForMaskedLM",Mt]],["distilbert",["DistilBertForMaskedLM",fr]],["roberta",["RobertaForMaskedLM",di]],["xlm",["XLMWithLMHeadModel",lo]],["xlm-roberta",["XLMRobertaForMaskedLM",mo]],["mobilebert",["MobileBertForMaskedLM",Rs]],["squeezebert",["SqueezeBertForMaskedLM",ae]]]),Zm=new Map([["bert",["BertForQuestionAnswering",ze]],["neobert",["NeoBertForQuestionAnswering",Ye]],["roformer",["RoFormerForQuestionAnswering",Xs]],["electra",["ElectraForQuestionAnswering",Fe]],["convbert",["ConvBertForQuestionAnswering",S]],["camembert",["CamembertForQuestionAnswering",Bt]],["deberta",["DebertaForQuestionAnswering",Sr]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ur]],["mpnet",["MPNetForQuestionAnswering",k]],["albert",["AlbertForQuestionAnswering",tt]],["distilbert",["DistilBertForQuestionAnswering",hr]],["roberta",["RobertaForQuestionAnswering",oo]],["xlm",["XLMForQuestionAnswering",po]],["xlm-roberta",["XLMRobertaForQuestionAnswering",mi]],["mobilebert",["MobileBertForQuestionAnswering",js]],["squeezebert",["SqueezeBertForQuestionAnswering",Ee]]]),Ol=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",mn]],["idefics3",["Idefics3ForConditionalGeneration",fn]],["smolvlm",["SmolVLMForConditionalGeneration",Mi]]]),ef=new Map([["llava",["LlavaForConditionalGeneration",Gn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",go]],["moondream1",["Moondream1ForConditionalGeneration",wo]],["florence2",["Florence2ForConditionalGeneration",Mo]],["qwen2-vl",["Qwen2VLForConditionalGeneration",_d]],["idefics3",["Idefics3ForConditionalGeneration",fn]],["smolvlm",["SmolVLMForConditionalGeneration",Mi]],["paligemma",["PaliGemmaForConditionalGeneration",vo]],["llava_qwen2",["LlavaQwen2ForCausalLM",xo]],["gemma3n",["Gemma3nForConditionalGeneration",tn]]]),tf=new Map([["ultravox",["UltravoxModel",kl]],["voxtral",["VoxtralForConditionalGeneration",Dm]]]),Ov=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",mn]]]),rf=new Map([["vit",["ViTForImageClassification",$d]],["ijepa",["IJepaForImageClassification",Ad]],["pvt",["PvtForImageClassification",Dd]],["vit_msn",["ViTMSNForImageClassification",Bd]],["fastvit",["FastViTForImageClassification",Vd]],["mobilevit",["MobileViTForImageClassification",Kd]],["mobilevitv2",["MobileViTV2ForImageClassification",qd]],["beit",["BeitForImageClassification",ep]],["deit",["DeiTForImageClassification",wp]],["hiera",["HieraForImageClassification",Mp]],["convnext",["ConvNextForImageClassification",qp]],["convnextv2",["ConvNextV2ForImageClassification",Xp]],["dinov2",["Dinov2ForImageClassification",Jp]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",eh]],["resnet",["ResNetForImageClassification",vp]],["swin",["SwinForImageClassification",Tp]],["segformer",["SegformerForImageClassification",nm]],["efficientnet",["EfficientNetForImageClassification",cm]],["mobilenet_v1",["MobileNetV1ForImageClassification",dm]],["mobilenet_v2",["MobileNetV2ForImageClassification",mm]],["mobilenet_v3",["MobileNetV3ForImageClassification",gm]],["mobilenet_v4",["MobileNetV4ForImageClassification",Mm]]]),sf=new Map([["detr",["DetrForObjectDetection",rp]],["rt_detr",["RTDetrForObjectDetection",ip]],["rt_detr_v2",["RTDetrV2ForObjectDetection",ap]],["rf_detr",["RFDetrForObjectDetection",up]],["d_fine",["DFineForObjectDetection",hp]],["table-transformer",["TableTransformerForObjectDetection",fp]],["yolos",["YolosForObjectDetection",nh]]]),nf=new Map([["owlvit",["OwlViTForObjectDetection",Xd]],["owlv2",["Owlv2ForObjectDetection",Jd]],["grounding-dino",["GroundingDinoForObjectDetection",rh]]]),ti=new Map([["detr",["DetrForSegmentation",Ja]],["clipseg",["CLIPSegForImageSegmentation",qn]]]),of=new Map([["segformer",["SegformerForSemanticSegmentation",im]],["sapiens",["SapiensForSemanticSegmentation",Ip]],["swin",["SwinForSemanticSegmentation",Ep]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",pm]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",fm]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",wm]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",ym]]]),af=new Map([["detr",["DetrForSegmentation",Ja]],["maskformer",["MaskFormerForInstanceSegmentation",Vp]]]),lf=new Map([["sam",["SamModel",ah]]]),cf=new Map([["wav2vec2",["Wav2Vec2ForCTC",mh]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Sh]],["unispeech",["UniSpeechForCTC",vh]],["unispeech-sat",["UniSpeechSatForCTC",Eh]],["wavlm",["WavLMForCTC",Oh]],["hubert",["HubertForCTC",Ih]]]),uf=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",fh]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Ah]],["unispeech",["UniSpeechForSequenceClassification",xh]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Ph]],["wavlm",["WavLMForSequenceClassification",Lh]],["hubert",["HubertForSequenceClassification",Fh]],["audio-spectrogram-transformer",["ASTForAudioClassification",_i]]]),df=new Map([["wavlm",["WavLMForXVector",zh]]]),pf=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Ch]],["wavlm",["WavLMForAudioFrameClassification",Bh]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",_h]],["pyannote",["PyAnnoteForAudioFrameClassification",wh]]]),hf=new Map([["vitmatte",["VitMatteForImageMatting",Wd]]]),Lv=new Map([["patchtst",["PatchTSTForPrediction",Am]],["patchtsmixer",["PatchTSMixerForPrediction",Im]]]),mf=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Cp]]]),ff=new Map([["dpt",["DPTForDepthEstimation",Sp]],["depth_anything",["DepthAnythingForDepthEstimation",kp]],["glpn",["GLPNForDepthEstimation",Wp]],["sapiens",["SapiensForDepthEstimation",Fp]],["depth_pro",["DepthProForDepthEstimation",Lp]],["metric3d",["Metric3DForDepthEstimation",Bp]],["metric3dv2",["Metric3Dv2ForDepthEstimation",jp]]]),_f=new Map([["sapiens",["SapiensForNormalEstimation",Dp]]]),gf=new Map([["vitpose",["VitPoseForPoseEstimation",Id]]]),wf=new Map([["clip",["CLIPVisionModelWithProjection",xi]],["siglip",["SiglipVisionModel",Ei]],["jina_clip",["JinaCLIPVisionModel",wn]]]),bf=[[Av,y.EncoderOnly],[kv,y.EncoderDecoder],[Fv,y.DecoderOnly],[Iv,y.AutoEncoder],[Xm,y.EncoderOnly],[Ym,y.EncoderOnly],[Fl,y.Seq2Seq],[Il,y.Seq2Seq],[Dl,y.DecoderOnly],[Dv,y.MultiModality],[Jm,y.EncoderOnly],[Zm,y.EncoderOnly],[Ol,y.Vision2Seq],[ef,y.ImageTextToText],[tf,y.AudioTextToText],[rf,y.EncoderOnly],[ti,y.EncoderOnly],[af,y.EncoderOnly],[of,y.EncoderOnly],[hf,y.EncoderOnly],[Lv,y.EncoderOnly],[mf,y.EncoderOnly],[ff,y.EncoderOnly],[_f,y.EncoderOnly],[gf,y.EncoderOnly],[sf,y.EncoderOnly],[nf,y.EncoderOnly],[lf,y.MaskGeneration],[cf,y.EncoderOnly],[uf,y.EncoderOnly],[qm,y.Seq2Seq],[Qm,y.EncoderOnly],[df,y.EncoderOnly],[pf,y.EncoderOnly],[wf,y.EncoderOnly]];for(const[M,C]of bf)for(const[O,ie]of M.values())v.set(O,C),x.set(ie,O),T.set(O,ie);const zv=[["MusicgenForConditionalGeneration",$l,y.Musicgen],["Phi3VForCausalLM",_n,y.Phi3V],["CLIPTextModelWithProjection",vi,y.EncoderOnly],["SiglipTextModel",Ti,y.EncoderOnly],["JinaCLIPTextModel",Ci,y.EncoderOnly],["ClapTextModelWithProjection",tm,y.EncoderOnly],["ClapAudioModelWithProjection",rm,y.EncoderOnly],["DacEncoderModel",Um,y.EncoderOnly],["DacDecoderModel",Wm,y.EncoderOnly],["MimiEncoderModel",Bm,y.EncoderOnly],["MimiDecoderModel",Rm,y.EncoderOnly],["SnacEncoderModel",Km,y.EncoderOnly],["SnacDecoderModel",Hm,y.EncoderOnly],["Gemma3nForConditionalGeneration",tn,y.ImageAudioTextToText]];for(const[M,C,O]of zv)v.set(M,O),x.set(C,M),T.set(M,C);const Mf=new Map([["modnet",ti],["birefnet",ti],["isnet",ti],["ben",ti]]);for(const[M,C]of Mf.entries())C.set(M,["PreTrainedModel",W]),v.set(M,y.EncoderOnly),x.set(W,M),T.set(M,W);class Ll extends jt{}Y(Ll,"MODEL_CLASS_MAPPINGS",bf.map(C=>C[0])),Y(Ll,"BASE_IF_FAIL",!0);class yf extends jt{}Y(yf,"MODEL_CLASS_MAPPINGS",[Xm]);class vf extends jt{}Y(vf,"MODEL_CLASS_MAPPINGS",[Ym]);class xf extends jt{}Y(xf,"MODEL_CLASS_MAPPINGS",[Fl]);class Tf extends jt{}Y(Tf,"MODEL_CLASS_MAPPINGS",[Il]);class Ef extends jt{}Y(Ef,"MODEL_CLASS_MAPPINGS",[qm]);class Pf extends jt{}Y(Pf,"MODEL_CLASS_MAPPINGS",[Qm]);class Cf extends jt{}Y(Cf,"MODEL_CLASS_MAPPINGS",[Dl]);class $f extends jt{}Y($f,"MODEL_CLASS_MAPPINGS",[Jm]);class Sf extends jt{}Y(Sf,"MODEL_CLASS_MAPPINGS",[Zm]);class Af extends jt{}Y(Af,"MODEL_CLASS_MAPPINGS",[Ol]);class kf extends jt{}Y(kf,"MODEL_CLASS_MAPPINGS",[rf]);class If extends jt{}Y(If,"MODEL_CLASS_MAPPINGS",[ti]);class Ff extends jt{}Y(Ff,"MODEL_CLASS_MAPPINGS",[of]);class Df extends jt{}Y(Df,"MODEL_CLASS_MAPPINGS",[af]);class Of extends jt{}Y(Of,"MODEL_CLASS_MAPPINGS",[sf]);class Lf extends jt{}Y(Lf,"MODEL_CLASS_MAPPINGS",[nf]);class zf extends jt{}Y(zf,"MODEL_CLASS_MAPPINGS",[lf]);class Bf extends jt{}Y(Bf,"MODEL_CLASS_MAPPINGS",[cf]);class Rf extends jt{}Y(Rf,"MODEL_CLASS_MAPPINGS",[uf]);class jf extends jt{}Y(jf,"MODEL_CLASS_MAPPINGS",[df]);class Nf extends jt{}Y(Nf,"MODEL_CLASS_MAPPINGS",[pf]);class Vf extends jt{}Y(Vf,"MODEL_CLASS_MAPPINGS",[Ov]);class Uf extends jt{}Y(Uf,"MODEL_CLASS_MAPPINGS",[hf]);class Wf extends jt{}Y(Wf,"MODEL_CLASS_MAPPINGS",[mf]);class Gf extends jt{}Y(Gf,"MODEL_CLASS_MAPPINGS",[ff]);class Kf extends jt{}Y(Kf,"MODEL_CLASS_MAPPINGS",[_f]);class Hf extends jt{}Y(Hf,"MODEL_CLASS_MAPPINGS",[gf]);class qf extends jt{}Y(qf,"MODEL_CLASS_MAPPINGS",[wf]);class Qf extends jt{}Y(Qf,"MODEL_CLASS_MAPPINGS",[ef]);class Xf extends jt{}Y(Xf,"MODEL_CLASS_MAPPINGS",[tf]);class Bv extends ye{constructor({logits:C,past_key_values:O,encoder_outputs:ie,decoder_attentions:_e=null,cross_attentions:he=null}){super(),this.logits=C,this.past_key_values=O,this.encoder_outputs=ie,this.decoder_attentions=_e,this.cross_attentions=he}}class Et extends ye{constructor({logits:C,...O}){super(),this.logits=C;const ie=Object.values(O);ie.length>0&&(this.attentions=ie)}}class Yf extends ye{constructor({logits:C,embeddings:O}){super(),this.logits=C,this.embeddings=O}}class xr extends ye{constructor({logits:C}){super(),this.logits=C}}class Ir extends ye{constructor({logits:C}){super(),this.logits=C}}class Rr extends ye{constructor({start_logits:C,end_logits:O}){super(),this.start_logits=C,this.end_logits=O}}class xn extends ye{constructor({logits:C}){super(),this.logits=C}}class Rv extends ye{constructor({logits:C,past_key_values:O}){super(),this.logits=C,this.past_key_values=O}}class Jf extends ye{constructor({alphas:C}){super(),this.alphas=C}}class Zf extends ye{constructor({waveform:C,spectrogram:O}){super(),this.waveform=C,this.spectrogram=O}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,i.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,i.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(a,l){return(0,i.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(a){(0,s.validate_audio_inputs)(a,"ASTFeatureExtractor");const l=await this._extract_fbank_features(a,this.config.max_length);if(this.config.do_normalize){const c=this.std*2,p=l.data;for(let d=0;d<p.length;++d)p[d]=(p[d]-this.mean)/c}return{input_values:l.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoFeatureExtractor:()=>o});var s=t("./src/utils/constants.js"),i=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var n=t("./src/models/feature_extractors.js");class o{static async from_pretrained(l,c={}){const p=await(0,i.getModelJSON)(l,s.FEATURE_EXTRACTOR_NAME,!0,c),d=p.feature_extractor_type,u=n[d];if(!u)throw new Error(`Unknown feature_extractor_type: '${d}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new u(p)}}},"./src/models/auto/image_processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoImageProcessor:()=>a});var s=t("./src/utils/constants.js"),i=t("./src/utils/hub.js"),n=t("./src/base/image_processors_utils.js"),o=t("./src/models/image_processors.js");class a{static async from_pretrained(c,p={}){const d=await(0,i.getModelJSON)(c,s.IMAGE_PROCESSOR_NAME,!0,p),u=d.image_processor_type??d.feature_extractor_type;let _=o[u==null?void 0:u.replace(/Fast$/,"")];return _||(u!==void 0&&console.warn(`Image processor type '${u}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),_=n.ImageProcessor),new _(d)}}},"./src/models/auto/processing_auto.js":(e,r,t)=>{t.r(r),t.d(r,{AutoProcessor:()=>c});var s=t("./src/utils/constants.js"),i=t("./src/utils/hub.js"),n=t("./src/base/processing_utils.js"),o=t("./src/models/processors.js"),a=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class c{static async from_pretrained(d,u={}){const _=await(0,i.getModelJSON)(d,s.IMAGE_PROCESSOR_NAME,!0,u),{image_processor_type:f,feature_extractor_type:b,processor_class:A}=_;if(A&&o[A])return o[A].from_pretrained(d,u);if(!f&&!b)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const g={};if(f){const $=a[f.replace(/Fast$/,"")];if(!$)throw new Error(`Unknown image_processor_type: '${f}'.`);g.image_processor=new $(_)}if(b){const $=a[b];if($)g.image_processor=new $(_);else{const y=l[b];if(!y)throw new Error(`Unknown feature_extractor_type: '${b}'.`);g.feature_extractor=new y(_)}}const w={};return new n.Processor(w,g,null)}}},"./src/models/beit/image_processing_beit.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,r,t)=>{t.r(r),t.d(r,{BitImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,r,t)=>{t.r(r),t.d(r,{ChineseCLIPFeatureExtractor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,r,t)=>{t.r(r),t.d(r,{ClapFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a),this.mel_filters=(0,i.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,i.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,i.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(a,l,c,p){let d;const u=a.length-l;if(u>0)if(c==="rand_trunc"){const _=Math.floor(Math.random()*(u+1));a=a.subarray(_,_+l),d=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${c}" not implemented`);else{if(u<0){let _=new Float64Array(l);if(_.set(a),p==="repeat")for(let f=a.length;f<l;f+=a.length)_.set(a.subarray(0,Math.min(a.length,l-f)),f);else if(p==="repeatpad")for(let f=a.length;f<-u;f+=a.length)_.set(a,f);a=_}if(c==="fusion")throw new Error(`Truncation strategy "${c}" not implemented`);d=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}return d.unsqueeze_(0)}async _extract_fbank_features(a,l,c=null){return(0,i.spectrogram)(a,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:c,do_pad:!1,transpose:!0})}async _call(a,{max_length:l=null}={}){return(0,s.validate_audio_inputs)(a,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(a,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,r,t)=>{t.r(r),t.d(r,{CLIPFeatureExtractor:()=>n,CLIPImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/convnext/image_processing_convnext.js":(e,r,t)=>{t.r(r),t.d(r,{ConvNextFeatureExtractor:()=>n,ConvNextImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(a){super(a),this.crop_pct=this.config.crop_pct??224/256}async resize(a){var c;const l=(c=this.size)==null?void 0:c.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const p=Math.floor(l/this.crop_pct),[d,u]=this.get_resize_output_image_size(a,{shortest_edge:p});a=await a.resize(d,u,{resample:this.resample}),a=await a.center_crop(l,l)}else a=await a.resize(l,l,{resample:this.resample});return a}}class n extends i{}},"./src/models/dac/feature_extraction_dac.js":(e,r,t)=>{t.r(r),t.d(r,{DacFeatureExtractor:()=>i});var s=t("./src/models/encodec/feature_extraction_encodec.js");class i extends s.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,r,t)=>{t.r(r),t.d(r,{DeiTFeatureExtractor:()=>n,DeiTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/detr/image_processing_detr.js":(e,r,t)=>{t.r(r),t.d(r,{DetrFeatureExtractor:()=>o,DetrImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(l){const c=await super._call(l),p=[c.pixel_values.dims[0],64,64],d=(0,i.full)(p,1n);return{...c,pixel_mask:d}}post_process_object_detection(...l){return(0,s.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,s.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,s.post_process_instance_segmentation)(...l)}}class o extends n{}},"./src/models/donut/image_processing_donut.js":(e,r,t)=>{t.r(r),t.d(r,{DonutFeatureExtractor:()=>n,DonutImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{pad_image(a,l,c,p={}){const[d,u,_]=l;let f=this.image_mean;Array.isArray(this.image_mean)||(f=new Array(_).fill(f));let b=this.image_std;Array.isArray(b)||(b=new Array(_).fill(f));const A=f.map((g,w)=>-g/b[w]);return super.pad_image(a,l,c,{center:!0,constant_values:A,...p})}}class n extends i{}},"./src/models/dpt/image_processing_dpt.js":(e,r,t)=>{t.r(r),t.d(r,{DPTFeatureExtractor:()=>n,DPTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,r,t)=>{t.r(r),t.d(r,{EfficientNetImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(o){super(o),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(a=>a*a))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,r,t)=>{t.r(r),t.d(r,{EncodecFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"EncodecFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=this.config.feature_size;if(a.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const c=[1,l,a.length/l];return{input_values:new i.Tensor("float32",a,c)}}}},"./src/models/feature_extractors.js":(e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>n.ClapFeatureExtractor,DacFeatureExtractor:()=>o.DacFeatureExtractor,EncodecFeatureExtractor:()=>i.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>a.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>A.ImageProcessor,MoonshineFeatureExtractor:()=>l.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>c.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>p.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>_.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>f.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>b.WhisperFeatureExtractor});var s=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),i=t("./src/models/encodec/feature_extraction_encodec.js"),n=t("./src/models/clap/feature_extraction_clap.js"),o=t("./src/models/dac/feature_extraction_dac.js"),a=t("./src/models/gemma3n/feature_extraction_gemma3n.js"),l=t("./src/models/moonshine/feature_extraction_moonshine.js"),c=t("./src/models/pyannote/feature_extraction_pyannote.js"),p=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),d=t("./src/models/snac/feature_extraction_snac.js"),u=t("./src/models/speecht5/feature_extraction_speecht5.js"),_=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),f=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),b=t("./src/models/whisper/feature_extraction_whisper.js"),A=t("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class o extends s.Processor{constructor(l,c,p){super(l,c,p);const{tasks_answer_post_processing_type:d,task_prompts_without_inputs:u,task_prompts_with_input:_}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(d??{})),this.task_prompts_without_inputs=new Map(Object.entries(u??{})),this.task_prompts_with_input=new Map(Object.entries(_??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const c=[];for(const p of l)if(this.task_prompts_without_inputs.has(p))c.push(this.task_prompts_without_inputs.get(p));else{for(const[d,u]of this.task_prompts_with_input)if(p.includes(d)){c.push(u.replaceAll("{input}",p).replaceAll(d,""));break}c.length!==l.length&&c.push(p)}return c}post_process_generation(l,c,p){const d=this.tasks_answer_post_processing_type.get(c)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let u;switch(d){case"pure_text":u=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const _=d==="ocr"?"quad_boxes":"bboxes",f=l.matchAll(this.regexes[_]),b=[],A=[];for(const[g,w,...$]of f)b.push(w?w.trim():b.at(-1)??""),A.push($.map((y,v)=>(Number(y)+.5)/this.size_per_bin*p[v%2]));u={labels:b,[_]:A};break;default:throw new Error(`Task "${c}" (of type "${d}") not yet implemented.`)}return{[c]:u}}async _call(l,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=await this.image_processor(l,p),u=c?this.tokenizer(this.construct_prompts(c),p):{};return{...d,...u}}}Y(o,"tokenizer_class",n.AutoTokenizer),Y(o,"image_processor_class",i.AutoImageProcessor)},"./src/models/gemma3n/feature_extraction_gemma3n.js":(e,r,t)=>{t.r(r),t.d(r,{Gemma3nAudioFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(l){super(l);const{fft_length:c,feature_size:p,min_frequency:d,max_frequency:u,sampling_rate:_,frame_length:f}=this.config,b=(0,n.mel_filter_bank)(Math.floor(1+c/2),p,d,u,_,null,"htk",!1);this.mel_filters=b,this.window=(0,n.window_function)(f,"hann")}async _extract_fbank_features(l,c){return(0,n.spectrogram)(l,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(l,{max_length:c=48e4,truncation:p=!0,padding:d=!0,pad_to_multiple_of:u=128}={}){if((0,s.validate_audio_inputs)(l,"Gemma3nAudioFeatureExtractor"),p&&l.length>c&&(l=l.slice(0,c)),d&&l.length%u!==0){const b=u-l.length%u,A=new Float64Array(l.length+b);A.set(l),this.config.padding_value!==0&&A.fill(this.config.padding_value,l.length),l=A}const _=await this._extract_fbank_features(l,this.config.max_length),f=(0,i.full)([1,_.dims[0]],!0);return{input_features:_.unsqueeze_(0),input_features_mask:f}}}},"./src/models/gemma3n/processing_gemma3n.js":(e,r,t)=>{t.r(r),t.d(r,{Gemma3nProcessor:()=>a});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js");t("./src/utils/image.js"),t("./src/utils/audio.js");class a extends s.Processor{constructor(c,p,d){super(c,p,d),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:u,boa_token:_,audio_token:f,eoa_token:b,image_token_id:A,boi_token:g,image_token:w,eoi_token:$}=this.tokenizer.config;this.audio_token_id=u,this.boa_token=_,this.audio_token=f;const y=f.repeat(this.audio_seq_length);this.full_audio_sequence=`

${_}${y}${b}

`,this.image_token_id=A,this.boi_token=g,this.image_token=w;const v=w.repeat(this.image_seq_length);this.full_image_sequence=`

${g}${v}${$}

`}async _call(c,p=null,d=null,u={}){typeof c=="string"&&(c=[c]);let _;d&&(_=await this.feature_extractor(d,u),c=c.map(A=>A.replaceAll(this.audio_token,this.full_audio_sequence)));let f;return p&&(f=await this.image_processor(p,u),c=c.map(A=>A.replaceAll(this.image_token,this.full_image_sequence))),{...this.tokenizer(c,u),...f,..._}}}Y(a,"image_processor_class",i.AutoImageProcessor),Y(a,"feature_extractor_class",n.AutoFeatureExtractor),Y(a,"tokenizer_class",o.AutoTokenizer),Y(a,"uses_processor_config",!0),Y(a,"uses_chat_template_file",!0)},"./src/models/glpn/image_processing_glpn.js":(e,r,t)=>{t.r(r),t.d(r,{GLPNFeatureExtractor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a){const l=await super._call(a),c=l.pixel_values.dims,p=(0,i.ones)([c[0],c[2],c[3]]);return{...l,pixel_mask:p}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,r,t)=>{t.r(r),t.d(r,{GroundingDinoProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/base/image_processors_utils.js");function a(c,p){const u=c.dims.at(-1)-1,_=c.tolist();_.fill(!1,0,1),_.fill(!1,u);const f=p.tolist();return _.map((b,A)=>b?A:null).filter(b=>b!==null).map(b=>f[b])}class l extends s.Processor{async _call(p,d,u={}){const _=p?await this.image_processor(p,u):{};return{...d?this.tokenizer(d,u):{},..._}}post_process_grounded_object_detection(p,d,{box_threshold:u=.25,text_threshold:_=.25,target_sizes:f=null}={}){const{logits:b,pred_boxes:A}=p,g=b.dims[0];if(f!==null&&f.length!==g)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const w=b.dims.at(1),$=b.sigmoid(),y=$.max(-1).tolist(),v=A.tolist().map(x=>x.map(P=>(0,o.center_to_corners_format)(P))),T=[];for(let x=0;x<g;++x){const P=f!==null?f[x]:null;P!==null&&(v[x]=v[x].map(R=>R.map((te,H)=>te*P[(H+1)%2])));const D=y[x],L=[],G=[],K=[];for(let R=0;R<w;++R){const te=D[R];if(te<=u)continue;const H=v[x][R],ee=$[x][R];L.push(te),K.push(H);const Z=a(ee.gt(_),d[x]);G.push(Z)}T.push({scores:L,boxes:K,labels:this.batch_decode(G)})}return T}}Y(l,"tokenizer_class",n.AutoTokenizer),Y(l,"image_processor_class",i.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{constructor(a){super(a),this.do_image_splitting=a.do_image_splitting??!0,this.max_image_size=a.max_image_size}get_resize_for_vision_encoder(a,l){let[c,p]=a.dims.slice(-2);const d=p/c;return p>=c?(p=Math.ceil(p/l)*l,c=Math.floor(p/d),c=Math.ceil(c/l)*l):(c=Math.ceil(c/l)*l,p=Math.floor(c*d),p=Math.ceil(p/l)*l),{height:c,width:p}}async _call(a,{do_image_splitting:l=null,return_row_col_info:c=!1}={}){let p;if(!Array.isArray(a))p=[[a]];else{if(a.length===0||!a[0])throw new Error("No images provided.");Array.isArray(a[0])?p=a:p=[a]}let d=[],u=[],_=[];const f=[],b=[];for(const x of p){let P=await Promise.all(x.map(G=>this.preprocess(G)));f.push(...P.map(G=>G.original_size)),b.push(...P.map(G=>G.reshaped_input_size)),P.forEach(G=>G.pixel_values.unsqueeze_(0));const{longest_edge:D}=this.max_image_size;let L;if(l??this.do_image_splitting){let G=new Array(P.length),K=new Array(P.length);L=await Promise.all(P.map(async(R,te)=>{const H=this.get_resize_for_vision_encoder(R.pixel_values,D),ee=await(0,i.interpolate_4d)(R.pixel_values,{size:[H.height,H.width]}),{frames:Z,num_splits_h:ne,num_splits_w:me}=await this.split_image(ee,this.max_image_size);return G[te]=ne,K[te]=me,(0,i.cat)(Z,0)})),u.push(G),_.push(K)}else{const G=[D,D];L=await Promise.all(P.map(K=>(0,i.interpolate_4d)(K.pixel_values,{size:G}))),u.push(new Array(P.length).fill(0)),_.push(new Array(P.length).fill(0))}d.push((0,i.cat)(L,0))}const A=d.length,[g,w,$,y]=d[0].dims;let v,T;if(A===1)v=d[0].unsqueeze_(0),T=(0,i.full)([A,g,$,y],!0);else{const x=Math.max(...d.map(L=>L.dims.at(0)));T=(0,i.full)([A,x,$,y],!0);const P=T.data,D=x*$*y;for(let L=0;L<A;++L){const G=d[L].dims[0];if(G<x){d[L]=(0,i.cat)([d[L],(0,i.full)([x-G,w,$,y],0)],0);const K=L*D+G*$*y,R=(L+1)*D;P.fill(!1,K,R)}}v=(0,i.stack)(d,0)}return{pixel_values:v,pixel_attention_mask:T,original_sizes:f,reshaped_input_sizes:b,...c?{rows:u,cols:_}:{}}}async split_image(a,{longest_edge:l}){const c=l,p=l,d=[],[u,_]=a.dims.slice(-2);let f=0,b=0;if(u>c||_>p){f=Math.ceil(u/c),b=Math.ceil(_/p);const A=Math.ceil(u/f),g=Math.ceil(_/b);for(let y=0;y<f;++y)for(let v=0;v<b;++v){let T,x,P,D;y===f-1?(x=u-A,D=u):(x=y*A,D=(y+1)*A),v===b-1?(T=_-g,P=_):(T=v*g,P=(v+1)*g);const L=[x,T],G=[D,P],K=await(0,i.slice)(a,L,G,[2,3]);d.push(K)}const w=c,$=p;(u!==w||_!==$)&&(a=await(0,i.interpolate_4d)(a,{size:[w,$]}))}return d.push(a),{frames:d,num_splits_h:f,num_splits_w:b}}}},"./src/models/idefics3/processing_idefics3.js":(e,r,t)=>{t.r(r),t.d(r,{Idefics3Processor:()=>p});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");var o=t("./src/utils/core.js");function a(d,u,_,f,b,A){let g="";for(let w=0;w<u;++w){for(let $=0;$<_;++$)g+=f+`<row_${w+1}_col_${$+1}>`+b.repeat(d);g+=`
`}return g+=`
${f}${A}`+b.repeat(d)+`${f}`,g}function l(d,u,_,f){return`${u}${f}`+_.repeat(d)+`${u}`}function c(d,u,_,f,b,A){return d===0&&u===0?l(_,f,b,A):a(_,d,u,f,b,A)}class p extends s.Processor{constructor(){super(...arguments);Y(this,"fake_image_token","<fake_token_around_image>");Y(this,"image_token","<image>");Y(this,"global_img_token","<global-img>")}async _call(_,f=null,b={}){b.return_row_col_info??(b.return_row_col_info=!0);let A;f&&(A=await this.image_processor(f,b)),Array.isArray(_)||(_=[_]);const g=A.rows??[new Array(_.length).fill(0)],w=A.cols??[new Array(_.length).fill(0)],$=this.config.image_seq_len,y=[],v=[];for(let x=0;x<_.length;++x){const P=_[x],D=g[x],L=w[x];y.push((0,o.count)(P,this.image_token));const G=D.map((te,H)=>c(te,L[H],$,this.fake_image_token,this.image_token,this.global_img_token)),K=P.split(this.image_token);if(K.length===0)throw new Error("The image token should be present in the text.");let R=K[0];for(let te=0;te<G.length;++te)R+=G[te]+K[te+1];v.push(R)}return{...this.tokenizer(v),...A}}}Y(p,"image_processor_class",i.AutoImageProcessor),Y(p,"tokenizer_class",n.AutoTokenizer),Y(p,"uses_processor_config",!0)},"./src/models/image_processors.js":(e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>i.BitImageProcessor,CLIPFeatureExtractor:()=>o.CLIPFeatureExtractor,CLIPImageProcessor:()=>o.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>n.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>a.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>a.ConvNextImageProcessor,DPTFeatureExtractor:()=>d.DPTFeatureExtractor,DPTImageProcessor:()=>d.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>p.DonutFeatureExtractor,DonutImageProcessor:()=>p.DonutImageProcessor,EfficientNetImageProcessor:()=>u.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>_.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>b.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>g.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>w.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>$.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>y.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>y.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>v.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>v.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>T.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>T.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>x.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>x.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>P.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>P.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>D.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>D.MobileViTImageProcessor,NougatImageProcessor:()=>L.NougatImageProcessor,OwlViTFeatureExtractor:()=>K.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>K.OwlViTImageProcessor,Owlv2ImageProcessor:()=>G.Owlv2ImageProcessor,Phi3VImageProcessor:()=>R.Phi3VImageProcessor,PvtImageProcessor:()=>te.PvtImageProcessor,Qwen2VLImageProcessor:()=>H.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>ee.RTDetrImageProcessor,SamImageProcessor:()=>Z.SamImageProcessor,SegformerFeatureExtractor:()=>ne.SegformerFeatureExtractor,SegformerImageProcessor:()=>ne.SegformerImageProcessor,SiglipImageProcessor:()=>me.SiglipImageProcessor,SmolVLMImageProcessor:()=>ue.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>j.Swin2SRImageProcessor,VLMImageProcessor:()=>A.VLMImageProcessor,ViTFeatureExtractor:()=>F.ViTFeatureExtractor,ViTImageProcessor:()=>F.ViTImageProcessor,VitMatteImageProcessor:()=>U.VitMatteImageProcessor,VitPoseImageProcessor:()=>se.VitPoseImageProcessor,YolosFeatureExtractor:()=>fe.YolosFeatureExtractor,YolosImageProcessor:()=>fe.YolosImageProcessor});var s=t("./src/models/beit/image_processing_beit.js"),i=t("./src/models/bit/image_processing_bit.js"),n=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),o=t("./src/models/clip/image_processing_clip.js"),a=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),c=t("./src/models/detr/image_processing_detr.js"),p=t("./src/models/donut/image_processing_donut.js"),d=t("./src/models/dpt/image_processing_dpt.js"),u=t("./src/models/efficientnet/image_processing_efficientnet.js"),_=t("./src/models/glpn/image_processing_glpn.js"),f=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),b=t("./src/models/idefics3/image_processing_idefics3.js"),A=t("./src/models/janus/image_processing_janus.js"),g=t("./src/models/jina_clip/image_processing_jina_clip.js"),w=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),$=t("./src/models/mask2former/image_processing_mask2former.js"),y=t("./src/models/maskformer/image_processing_maskformer.js"),v=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),T=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),x=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),P=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),D=t("./src/models/mobilevit/image_processing_mobilevit.js"),L=t("./src/models/nougat/image_processing_nougat.js"),G=t("./src/models/owlv2/image_processing_owlv2.js"),K=t("./src/models/owlvit/image_processing_owlvit.js"),R=t("./src/models/phi3_v/image_processing_phi3_v.js"),te=t("./src/models/pvt/image_processing_pvt.js"),H=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),ee=t("./src/models/rt_detr/image_processing_rt_detr.js"),Z=t("./src/models/sam/image_processing_sam.js"),ne=t("./src/models/segformer/image_processing_segformer.js"),me=t("./src/models/siglip/image_processing_siglip.js"),ue=t("./src/models/smolvlm/image_processing_smolvlm.js"),j=t("./src/models/swin2sr/image_processing_swin2sr.js"),F=t("./src/models/vit/image_processing_vit.js"),U=t("./src/models/vitmatte/image_processing_vitmatte.js"),se=t("./src/models/vitpose/image_processing_vitpose.js"),fe=t("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLMImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(o){super({do_pad:!0,pad_size:{width:o.image_size,height:o.image_size},...o}),this.constant_values=this.config.background_color.map(a=>a*this.rescale_factor)}pad_image(o,a,l,c){return super.pad_image(o,a,l,{constant_values:this.constant_values,center:!0,...c})}}},"./src/models/janus/processing_janus.js":(e,r,t)=>{t.r(r),t.d(r,{VLChatProcessor:()=>c});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/utils/core.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class c extends s.Processor{constructor(d,u,_){super(d,u,_),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(d,{images:u=null,chat_template:_="default"}={}){u?Array.isArray(u)||(u=[u]):u=await Promise.all(d.filter(L=>L.images).flatMap(L=>L.images).map(L=>l.RawImage.read(L)));const f=this.tokenizer,b=f.apply_chat_template(d,{tokenize:!1,add_generation_prompt:!0,chat_template:_}),A=L=>f.encode(L,{add_special_tokens:!1}),g=b.split(this.image_tag),w=g.length-1;if(u.length!==w)throw new Error(`Number of images provided (${u.length}) does not match number of "${this.image_tag}" image tags (${w})`);const[$,y,v]=f.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let T=A(g[0]),x=new Array(T.length).fill(!1);for(let L=1;L<g.length;++L){const G=new Array(this.num_image_tokens).fill($),K=A(g[L]);T=(0,o.mergeArrays)(T,[y],G,[v],K);const R=new Array(this.num_image_tokens).fill(!0);x=(0,o.mergeArrays)(x,[!1],R,[!1],new Array(K.length).fill(!1))}const P=[1,T.length],D={input_ids:new a.Tensor("int64",T,P),attention_mask:new a.Tensor("int64",new Array(T.length).fill(1),P),images_seq_mask:new a.Tensor("bool",x,P),images_emb_mask:new a.Tensor("bool",new Array(w*this.num_image_tokens).fill(!0),[1,w,this.num_image_tokens])};if(u&&u.length>0){const L=await this.image_processor(u);return L.pixel_values.unsqueeze_(0),{...D,...L}}return D}}Y(c,"image_processor_class",i.AutoImageProcessor),Y(c,"tokenizer_class",n.AutoTokenizer),Y(c,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{constructor(o){const{resize_mode:a,fill_color:l,interpolation:c,size:p,...d}=o,u=a==="squash"?{width:p,height:p}:a==="shortest"?{shortest_edge:p}:{longest_edge:p},_=c==="bicubic"?3:2;super({...d,size:u,resample:_,do_center_crop:!0,crop_size:p,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,r,t)=>{t.r(r),t.d(r,{JinaCLIPProcessor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class o extends s.Processor{async _call(l=null,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=l?this.tokenizer(l,p):{},u=c?await this.image_processor(c,p):{};return{...d,...u}}}Y(o,"tokenizer_class",n.AutoTokenizer),Y(o,"image_processor_class",i.AutoImageProcessor)},"./src/models/llava/processing_llava.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaProcessor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class o extends s.Processor{async _call(l,c=null,p={}){const d=await this.image_processor(l,p);if(c){const[_,f]=d.pixel_values.dims.slice(-2),{image_token:b,patch_size:A,num_additional_image_tokens:g}=this.config,w=Math.floor(_/A)*Math.floor(f/A)+g;c=structuredClone(c),Array.isArray(c)||(c=[c]);for(let $=0;$<c.length;++$)c[$]=c[$].replace(b,b.repeat(w))}const u=c?this.tokenizer(c,p):{};return{...d,...u}}}Y(o,"tokenizer_class",n.AutoTokenizer),Y(o,"image_processor_class",i.AutoImageProcessor),Y(o,"uses_processor_config",!0)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,r,t)=>{t.r(r),t.d(r,{LlavaOnevisionImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,r,t)=>{t.r(r),t.d(r,{Mask2FormerImageProcessor:()=>i});var s=t("./src/models/maskformer/image_processing_maskformer.js");class i extends s.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,r,t)=>{t.r(r),t.d(r,{MaskFormerFeatureExtractor:()=>n,MaskFormerImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_panoptic_segmentation(...a){return(0,s.post_process_panoptic_segmentation)(...a)}post_process_instance_segmentation(...a){return(0,s.post_process_instance_segmentation)(...a)}}class n extends i{}},"./src/models/mgp_str/processing_mgp_str.js":(e,r,t)=>{t.r(r),t.d(r,{MgpstrProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js"),o=t("./src/utils/maths.js");const a={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends s.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(p,d){if(!a.hasOwnProperty(d))throw new Error(`Format ${d} is not supported.`);const[u,_]=a[d],f=this[u].bind(this),[b,A]=p.dims,g=[],w=[],$=p.tolist();for(let v=0;v<b;++v){const T=$[v],x=[],P=[];for(let L=1;L<A;++L){const[G,K]=(0,o.max)((0,o.softmax)(T[L]));if(P.push(G),K==_)break;x.push(K)}const D=P.length>0?P.reduce((L,G)=>L*G,1):0;w.push(x),g.push(D)}return[f(w),g]}char_decode(p){return this.char_tokenizer.batch_decode(p).map(d=>d.replaceAll(" ",""))}bpe_decode(p){return this.bpe_tokenizer.batch_decode(p)}wp_decode(p){return this.wp_tokenizer.batch_decode(p).map(d=>d.replaceAll(" ",""))}batch_decode([p,d,u]){const[_,f]=this._decode_helper(p,"char"),[b,A]=this._decode_helper(d,"bpe"),[g,w]=this._decode_helper(u,"wp"),$=[],y=[];for(let v=0;v<_.length;++v){const[T,x]=(0,o.max)([f[v],A[v],w[v]]);$.push([_[v],b[v],g[v]][x]),y.push(T)}return{generated_text:$,scores:y,char_preds:_,bpe_preds:b,wp_preds:g}}static async from_pretrained(...p){const d=await super.from_pretrained(...p),u=await n.AutoTokenizer.from_pretrained("Xenova/gpt2"),_=await n.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return d.components={image_processor:d.image_processor,char_tokenizer:d.tokenizer,bpe_tokenizer:u,wp_tokenizer:_},d}async _call(p,d=null){const u=await this.image_processor(p);return d&&(u.labels=this.tokenizer(d).input_ids),u}}Y(l,"tokenizer_class",n.AutoTokenizer),Y(l,"image_processor_class",i.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV1FeatureExtractor:()=>n,MobileNetV1ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV2FeatureExtractor:()=>n,MobileNetV2ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV3FeatureExtractor:()=>n,MobileNetV3ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,r,t)=>{t.r(r),t.d(r,{MobileNetV4FeatureExtractor:()=>n,MobileNetV4ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,r,t)=>{t.r(r),t.d(r,{MobileViTFeatureExtractor:()=>n,MobileViTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"MoonshineFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=[1,a.length];return{input_values:new i.Tensor("float32",a,l)}}}},"./src/models/moonshine/processing_moonshine.js":(e,r,t)=>{t.r(r),t.d(r,{MoonshineProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class o extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Y(o,"tokenizer_class",i.AutoTokenizer),Y(o,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(e,r,t)=>{t.r(r),t.d(r,{NougatImageProcessor:()=>i});var s=t("./src/models/donut/image_processing_donut.js");class i extends s.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,r,t)=>{t.r(r),t.d(r,{Owlv2ImageProcessor:()=>i});var s=t("./src/models/owlvit/image_processing_owlvit.js");class i extends s.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTFeatureExtractor:()=>n,OwlViTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class n extends i{}},"./src/models/owlvit/processing_owlvit.js":(e,r,t)=>{t.r(r),t.d(r,{OwlViTProcessor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");class o extends s.Processor{}Y(o,"tokenizer_class",n.AutoTokenizer),Y(o,"image_processor_class",i.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(e,r,t)=>{t.r(r),t.d(r,{PaliGemmaProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");const o="<image>";function a(c,p,d,u,_){return`${u.repeat(d*_)}${p}${c}
`}class l extends s.Processor{async _call(p,d=null,u={}){d||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),d=""),Array.isArray(p)||(p=[p]),Array.isArray(d)||(d=[d]);const _=this.tokenizer.bos_token,f=this.image_processor.config.image_seq_length;let b;d.some(w=>w.includes(o))?b=d.map(w=>{const $=w.replaceAll(o,o.repeat(f)),y=$.lastIndexOf(o),v=y===-1?0:y+o.length;return $.slice(0,v)+_+$.slice(v)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),b=d.map(w=>a(w,_,f,o,p.length)));const A=this.tokenizer(b,u);return{...await this.image_processor(p,u),...A}}}Y(l,"tokenizer_class",n.AutoTokenizer),Y(l,"image_processor_class",i.AutoImageProcessor),Y(l,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VImageProcessor:()=>p});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");const n=336,o=[2,3],{ceil:a,floor:l,sqrt:c}=Math;class p extends s.ImageProcessor{constructor(u){super({...u,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=u.num_crops}calc_num_image_tokens_from_image_size(u,_){const{num_img_tokens:f}=this.config;return l((l(_/n)*l(u/n)+1)*f+1+(l(_/n)+1)*c(f))}get_resize_output_image_size(u,_){const f=this._num_crops,[b,A]=u.size;let g=b/A,w=1;for(;w*Math.ceil(w/g)<=f;)w+=1;w-=1;const $=Math.floor(w*336),y=Math.floor($/g);return[$,y]}pad_image(u,_,f,b={}){const[A,g]=_,w=n*a(A/n),$=n*a(g/n),y=[1,1,1].map((v,T)=>(v-this.image_mean[T])/this.image_std[T]);return super.pad_image(u,_,{width:$,height:w},{center:!0,constant_values:y,...b})}async _call(u,{num_crops:_=null}={}){if(this._num_crops=_??(_=this.config.num_crops),_<4||c(_)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(u)||(u=[u]);const f=u.length,b=await Promise.all(u.map(x=>this.preprocess(x))),A=b.map(x=>x.original_size),g=b.map(x=>x.reshaped_input_size),w=[];for(const{pixel_values:x}of b){x.unsqueeze_(0);const[P,D]=x.dims.slice(-2),L=await(0,i.interpolate_4d)(x,{size:[n,n],mode:"bicubic"});if(_>0){const G=[],K=c(_),R=l(D/K),te=l(P/K);for(let ee=0;ee<K;++ee)for(let Z=0;Z<K;++Z){let ne,me,ue,j;ee===K-1?(me=P-te,j=P):(me=ee*te,j=(ee+1)*te),Z===K-1?(ne=D-R,ue=D):(ne=Z*R,ue=(Z+1)*R);const F=[me,ne],U=[j,ue],se=await(0,i.slice)(x,F,U,o);G.push(se)}const H=await(0,i.interpolate_4d)((0,i.cat)(G,0),{size:[n,n],mode:"bicubic"});w.push((0,i.cat)([L,H],0))}else w.push(L)}const $=(0,i.stack)(w,0),y=g.map(x=>x.map(P=>n*a(P/n))),v=new i.Tensor("int64",y.flat(),[f,2]),T=y.map(([x,P])=>this.calc_num_image_tokens_from_image_size(P,x));return{pixel_values:$,original_sizes:A,reshaped_input_sizes:g,image_sizes:v,num_img_tokens:T}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,r,t)=>{t.r(r),t.d(r,{Phi3VProcessor:()=>l});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");const o="<|image|>",a=/<\|image_\d+\|>/g;class l extends s.Processor{async _call(p,d=null,{padding:u=!0,truncation:_=!0,num_crops:f=null}={}){Array.isArray(p)||(p=[p]);let b,A;if(d){A=await this.image_processor(d,{num_crops:f});const{num_img_tokens:g}=A,w=p.map((y,v)=>y.split(a).join(o.repeat(g[v])));b=this.tokenizer(w,{padding:u,truncation:_});const $=this.tokenizer.model.convert_tokens_to_ids([o])[0];b.input_ids.map_(y=>y==$?-y:y)}else b=this.tokenizer(p);return{...b,...A}}}Y(l,"image_processor_class",i.AutoImageProcessor),Y(l,"tokenizer_class",n.AutoTokenizer)},"./src/models/processors.js":(e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>s.Florence2Processor,Gemma3nProcessor:()=>i.Gemma3nProcessor,GroundingDinoProcessor:()=>n.GroundingDinoProcessor,Idefics3Processor:()=>o.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,LlavaProcessor:()=>c.LlavaProcessor,MgpstrProcessor:()=>p.MgpstrProcessor,MoonshineProcessor:()=>d.MoonshineProcessor,OwlViTProcessor:()=>u.OwlViTProcessor,PaliGemmaProcessor:()=>f.PaliGemmaProcessor,Phi3VProcessor:()=>_.Phi3VProcessor,PyAnnoteProcessor:()=>b.PyAnnoteProcessor,Qwen2VLProcessor:()=>A.Qwen2VLProcessor,SamProcessor:()=>g.SamProcessor,SmolVLMProcessor:()=>w.SmolVLMProcessor,SpeechT5Processor:()=>$.SpeechT5Processor,UltravoxProcessor:()=>y.UltravoxProcessor,VLChatProcessor:()=>a.VLChatProcessor,VoxtralProcessor:()=>v.VoxtralProcessor,Wav2Vec2Processor:()=>T.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>x.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>P.WhisperProcessor});var s=t("./src/models/florence2/processing_florence2.js"),i=t("./src/models/gemma3n/processing_gemma3n.js"),n=t("./src/models/grounding_dino/processing_grounding_dino.js"),o=t("./src/models/idefics3/processing_idefics3.js"),a=t("./src/models/janus/processing_janus.js"),l=t("./src/models/jina_clip/processing_jina_clip.js"),c=t("./src/models/llava/processing_llava.js"),p=t("./src/models/mgp_str/processing_mgp_str.js"),d=t("./src/models/moonshine/processing_moonshine.js"),u=t("./src/models/owlvit/processing_owlvit.js"),_=t("./src/models/phi3_v/processing_phi3_v.js"),f=t("./src/models/paligemma/processing_paligemma.js"),b=t("./src/models/pyannote/processing_pyannote.js"),A=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),g=t("./src/models/sam/processing_sam.js"),w=t("./src/models/smolvlm/processing_smolvlm.js"),$=t("./src/models/speecht5/processing_speecht5.js"),y=t("./src/models/ultravox/processing_ultravox.js"),v=t("./src/models/voxtral/processing_voxtral.js"),T=t("./src/models/wav2vec2/processing_wav2vec2.js"),x=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),P=t("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,r,t)=>{t.r(r),t.d(r,{PvtImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/maths.js");class o extends s.FeatureExtractor{async _call(l){(0,s.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const c=[1,1,l.length];return{input_values:new i.Tensor("float32",l,c)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,c){const p=c/this.samples_to_frames(c)/this.config.sampling_rate,d=[];for(const u of l.tolist()){const _=[];let f=-1;for(let b=0;b<u.length;++b){const A=(0,n.softmax)(u[b]),[g,w]=(0,n.max)(A),[$,y]=[b,b+1];w!==f?(f=w,_.push({id:w,start:$,end:y,score:g})):(_.at(-1).end=y,_.at(-1).score+=g)}d.push(_.map(({id:b,start:A,end:g,score:w})=>({id:b,start:A*p,end:g*p,confidence:w/(g-A)})))}return d}}},"./src/models/pyannote/processing_pyannote.js":(e,r,t)=>{t.r(r),t.d(r,{PyAnnoteProcessor:()=>n});var s=t("./src/base/processing_utils.js"),i=t("./src/models/pyannote/feature_extraction_pyannote.js");class n extends s.Processor{async _call(a){return await this.feature_extractor(a)}post_process_speaker_diarization(...a){return this.feature_extractor.post_process_speaker_diarization(...a)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}Y(n,"feature_extractor_class",i.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a,...l){const{pixel_values:c,original_sizes:p,reshaped_input_sizes:d}=await super._call(a,...l);let u=c;const{temporal_patch_size:_,merge_size:f,patch_size:b}=this.config;u.dims[0]===1&&(u=(0,i.cat)(Array.from({length:_},()=>u),0));const A=u.dims[0]/_,g=u.dims[1],w=Math.floor(u.dims[2]/b),$=Math.floor(u.dims[3]/b),y=u.view(A,_,g,Math.floor(w/f),f,b,Math.floor($/f),f,b).permute(0,3,6,4,7,2,1,5,8).view(A*w*$,g*_*b*b),v=new i.Tensor("int64",[A,w,$],[1,3]);return{pixel_values:y,image_grid_thw:v,original_sizes:p,reshaped_input_sizes:d}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,r,t)=>{t.r(r),t.d(r,{Qwen2VLProcessor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js"),n=t("./src/tokenizers.js");t("./src/utils/image.js");class o extends s.Processor{async _call(l,c=null,...p){Array.isArray(l)||(l=[l]);let d,u;if(c&&(d=await this.image_processor(c),u=d.image_grid_thw),u){let f=this.image_processor.config.merge_size**2,b=0;const A=u.tolist();l=l.map(g=>{for(;g.includes("<|image_pad|>");){const w=Number(A[b++].reduce(($,y)=>$*y,1n));g=g.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(w/f)))}return g.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...d}}}Y(o,"image_processor_class",i.AutoImageProcessor),Y(o,"tokenizer_class",n.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(e,r,t)=>{t.r(r),t.d(r,{RTDetrImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_object_detection(...o){return(0,s.post_process_object_detection)(...o)}}},"./src/models/sam/image_processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/core.js"),n=t("./src/utils/tensor.js");class o extends s.ImageProcessor{reshape_input_points(l,c,p,d=!1){l=structuredClone(l);let u=(0,i.calculateDimensions)(l);if(u.length===3)d||(u=[1,...u]),l=[l];else if(u.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let _=0;_<l.length;++_){let f=c[_],b=p[_],A=[b[0]/f[0],b[1]/f[1]];for(let g=0;g<l[_].length;++g)for(let w=0;w<l[_][g].length;++w)for(let $=0;$<l[_][g][w].length;++$)l[_][g][w][$]*=A[$%2]}return new n.Tensor("float32",Float32Array.from(l.flat(1/0)),u)}add_input_labels(l,c){let p=(0,i.calculateDimensions)(l);if(p.length===2)p=[1,...p],l=[l];else if(p.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(p.some((d,u)=>d!==c.dims[u]))throw Error(`The first ${p.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new n.Tensor("int64",l.flat(1/0).map(BigInt),p)}async _call(l,{input_points:c=null,input_labels:p=null,input_boxes:d=null}={}){const u=await super._call(l);if(c&&(u.input_points=this.reshape_input_points(c,u.original_sizes,u.reshaped_input_sizes)),p){if(!u.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");u.input_labels=this.add_input_labels(p,u.input_points)}return d&&(u.input_boxes=this.reshape_input_points(d,u.original_sizes,u.reshaped_input_sizes,!0)),u}async post_process_masks(l,c,p,{mask_threshold:d=0,binarize:u=!0,pad_size:_=null}={}){const f=[];_=_??this.pad_size;const b=[_.height,_.width];for(let A=0;A<c.length;++A){const g=c[A],w=p[A];let $=await(0,n.interpolate_4d)(l[A],{mode:"bilinear",size:b});if($=$.slice(null,null,[0,w[0]],[0,w[1]]),$=await(0,n.interpolate_4d)($,{mode:"bilinear",size:g}),u){const y=$.data,v=new Uint8Array(y.length);for(let T=0;T<y.length;++T)y[T]>d&&(v[T]=1);$=new n.Tensor("bool",v,$.dims)}f.push($)}return f}generate_crop_boxes(l,c,{crop_n_layers:p=0,overlap_ratio:d=512/1500,points_per_crop:u=32,crop_n_points_downscale_factor:_=1}={}){}}},"./src/models/sam/processing_sam.js":(e,r,t)=>{t.r(r),t.d(r,{SamProcessor:()=>n});var s=t("./src/base/processing_utils.js"),i=t("./src/models/auto/image_processing_auto.js");class n extends s.Processor{async _call(...a){return await this.image_processor(...a)}post_process_masks(...a){return this.image_processor.post_process_masks(...a)}reshape_input_points(...a){return this.image_processor.reshape_input_points(...a)}}Y(n,"image_processor_class",i.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,r,t)=>{t.r(r),t.d(r,{SeamlessM4TFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js"),n=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(l){super(l);const c=this.config.sampling_rate,p=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(c/2),c,null,"kaldi",!0);this.mel_filters=p,this.window=(0,n.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,c){return l=l.map(p=>p*32768),(0,n.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:c,transpose:!0})}async _call(l,{padding:c=!0,pad_to_multiple_of:p=2,do_normalize_per_mel_bins:d=!0,return_attention_mask:u=!0}={}){(0,s.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let _=await this._extract_fbank_features(l,this.config.max_length);if(d){const[v,T]=_.dims,x=_.data;for(let P=0;P<T;++P){let D=0;for(let R=0;R<v;++R)D+=x[R*T+P];const L=D/v;let G=0;for(let R=0;R<v;++R)G+=(x[R*T+P]-L)**2;G/=v-1;const K=Math.sqrt(G+1e-7);for(let R=0;R<v;++R){const te=R*T+P;x[te]=(x[te]-L)/K}}}let f;if(c){const[v,T]=_.dims,x=_.data,P=v%p;if(P>0){const D=new Float32Array(T*(v+P));D.set(x),D.fill(this.config.padding_value,x.length);const L=v+P;_=new i.Tensor(_.type,D,[L,T]),u&&(f=new i.Tensor("int64",new BigInt64Array(L),[1,L]),f.data.fill(1n,0,v))}}const[b,A]=_.dims,g=this.config.stride;if(b%g!==0)throw new Error(`The number of frames (${b}) must be a multiple of the stride (${g}).`);const $=_.view(1,Math.floor(b/g),A*g),y={input_features:$};if(u){const v=$.dims[1],T=new BigInt64Array(v);if(f){const x=f.data;for(let P=1,D=0;P<b;P+=g,++D)T[D]=x[P]}else T.fill(1n);y.attention_mask=new i.Tensor("int64",T,[1,v])}return y}}},"./src/models/segformer/image_processing_segformer.js":(e,r,t)=>{t.r(r),t.d(r,{SegformerFeatureExtractor:()=>n,SegformerImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_semantic_segmentation(...a){return(0,s.post_process_semantic_segmentation)(...a)}}class n extends i{}},"./src/models/siglip/image_processing_siglip.js":(e,r,t)=>{t.r(r),t.d(r,{SiglipImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=t("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,r,t)=>{t.r(r),t.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=t("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,r,t)=>{t.r(r),t.d(r,{SnacFeatureExtractor:()=>i});var s=t("./src/models/dac/feature_extraction_dac.js");class i extends s.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5FeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");class i extends s.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,r,t)=>{t.r(r),t.d(r,{SpeechT5Processor:()=>o});var s=t("./src/base/processing_utils.js"),i=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js");class o extends s.Processor{async _call(l){return await this.feature_extractor(l)}}Y(o,"tokenizer_class",i.AutoTokenizer),Y(o,"feature_extractor_class",n.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(e,r,t)=>{t.r(r),t.d(r,{Swin2SRImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{pad_image(o,a,l,c={}){const[p,d,u]=a;return super.pad_image(o,a,{width:d+(l-d%l)%l,height:p+(l-p%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...c})}}},"./src/models/ultravox/processing_ultravox.js":(e,r,t)=>{t.r(r),t.d(r,{UltravoxProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class o extends n.Processor{async _call(l,c=null,p={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let d={};if(c){const _=c.length,{input_features:f}=await this.feature_extractor(c,{...p,max_length:_}),b=Math.round(_/this.config.encoder_ds_factor+1e-4),A=1+Math.ceil(b/this.config.stack_factor);d.audio_token_len=[A],d.audio_values=f;const g=this.config.audio_placeholder;if(!l.includes(g))throw new Error(`The input text does not contain the image token ${g}.`);l=l.replaceAll(g,g.repeat(A))}return{...this.tokenizer(l,{add_special_tokens:!1,...p}),...d}}}Y(o,"tokenizer_class",i.AutoTokenizer),Y(o,"feature_extractor_class",s.AutoFeatureExtractor),Y(o,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":(e,r,t)=>{t.r(r),t.d(r,{ViTFeatureExtractor:()=>n,ViTImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{}class n extends i{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,r,t)=>{t.r(r),t.d(r,{VitMatteImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js"),i=t("./src/utils/tensor.js");class n extends s.ImageProcessor{async _call(a,l){Array.isArray(a)||(a=[a]),Array.isArray(l)||(l=[l]);const c=await Promise.all(a.map(u=>this.preprocess(u))),p=await Promise.all(l.map(u=>this.preprocess(u,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,i.stack)(c.map((u,_)=>(0,i.cat)([u.pixel_values,p[_].pixel_values],0)),0),original_sizes:c.map(u=>u.original_size),reshaped_input_sizes:c.map(u=>u.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,r,t)=>{t.r(r),t.d(r,{VitPoseImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_pose_estimation(o,a,{threshold:l=null}={}){const c=o.tolist(),[p,d,u,_]=o.dims,f=[];for(let b=0;b<p;++b){const A=c[b],g=a[b],w=[];for(let $=0;$<g.length;++$){const y=g[$],v=[],T=[],x=[],P=y.at(-2)/_,D=y.at(-1)/u;for(let L=0;L<A.length;++L){let[G,K]=[0,0],R=0,te=-1/0;const H=A[L];for(let Z=0;Z<H.length;++Z){const ne=H[Z];for(let me=0;me<ne.length;++me){const ue=ne[me];R+=ue,te=Math.max(te,ue),G+=(me+.5)*ue,K+=Z*ue}}if(l!=null&&te<l)continue;const ee=[P*G/R,D*K/R];v.push(ee),x.push(L),T.push(te)}w.push({bbox:y,scores:T,labels:x,keypoints:v})}f.push(w)}return f}}},"./src/models/voxtral/processing_voxtral.js":(e,r,t)=>{t.r(r),t.d(r,{VoxtralProcessor:()=>d});var s=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js"),o=t("./src/utils/tensor.js");const a="[AUDIO]",l="[BEGIN_AUDIO]",c=375;function p(u,_){const f=[];for(let b=0;b<u.length;b+=_)f.push(u.subarray(b,Math.min(b+_,u.length)));return f}class d extends n.Processor{async _call(_,f=null,b={}){if(Array.isArray(_))throw new Error("Batched inputs are not supported yet.");const A={};if(f){if(!_.includes(a))throw new Error(`The input text does not contain the audio token ${a}.`);Array.isArray(f)||(f=[f]);const w=_.split(a),$=w.length-1;if($!==f.length)throw new Error(`The number of audio inputs (${f.length}) does not match the number of audio tokens in the text (${$}).`);const y=this.feature_extractor.config.n_samples,v=f.map(L=>p(L,y)),T=v.map(L=>L.length),x=v.flat(),P=(await Promise.all(x.map(L=>this.feature_extractor(L,b)))).map(L=>L.input_features);A.audio_values=P.length>1?(0,o.cat)(P,0):P[0];let D=w[0];for(let L=0;L<T.length;++L){D+=l;for(let G=0;G<T[L];++G)D+=a.repeat(c);D+=w[L+1]}_=D}return{...this.tokenizer(_,{add_special_tokens:!1,...b}),...A}}}Y(d,"tokenizer_class",i.AutoTokenizer),Y(d,"feature_extractor_class",s.AutoFeatureExtractor),Y(d,"uses_processor_config",!1)},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2FeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js"),i=t("./src/utils/tensor.js");class n extends s.FeatureExtractor{_zero_mean_unit_var_norm(a){const c=a.reduce((d,u)=>d+u,0)/a.length,p=a.reduce((d,u)=>d+(u-c)**2,0)/a.length;return a.map(d=>(d-c)/Math.sqrt(p+1e-7))}async _call(a){(0,s.validate_audio_inputs)(a,"Wav2Vec2FeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));let l=a;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const c=[1,l.length];return{input_values:new i.Tensor("float32",l,c),attention_mask:new i.Tensor("int64",new BigInt64Array(l.length).fill(1n),c)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2Processor:()=>o});var s=t("./src/tokenizers.js"),i=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class o extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Y(o,"tokenizer_class",s.AutoTokenizer),Y(o,"feature_extractor_class",i.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2ProcessorWithLM:()=>o});var s=t("./src/tokenizers.js"),i=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/base/processing_utils.js");class o extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Y(o,"tokenizer_class",s.AutoTokenizer),Y(o,"feature_extractor_class",i.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,r,t)=>{t.r(r),t.d(r,{WeSpeakerFeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js");class n extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,i.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,i.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(a){return a=a.map(l=>l*32768),(0,i.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(a){(0,s.validate_audio_inputs)(a,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(a)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const c=l.mean(1).data,p=l.data,[d,u,_]=l.dims;for(let f=0;f<d;++f){const b=f*u*_,A=f*_;for(let g=0;g<u;++g){const w=b+g*_;for(let $=0;$<_;++$)p[w+$]-=c[A+$]}}}return{input_features:l}}}},"./src/models/whisper/common_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WHISPER_LANGUAGE_MAPPING:()=>i,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>n,whisper_language_to_code:()=>o});const s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],i=new Map(s),n=new Map([...s.map(([a,l])=>[l,a]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function o(a){a=a.toLowerCase();let l=n.get(a);if(l===void 0){const c=a.match(/^<\|([a-z]{2})\|>$/);if(c&&(a=c[1]),i.has(a))l=a;else{const d=a.length===2?i.keys():i.values();throw new Error(`Language "${a}" is not supported. Must be one of: ${JSON.stringify(Array.from(d))}`)}}return l}},"./src/models/whisper/feature_extraction_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var i=t("./src/utils/audio.js"),n=t("./src/utils/maths.js");class o extends s.FeatureExtractor{constructor(l){var c;super(l),(c=this.config).mel_filters??(c.mel_filters=(0,i.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,i.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const c=await(0,i.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),p=c.data,d=(0,n.max)(p)[0];for(let u=0;u<p.length;++u)p[u]=(Math.max(p[u],d-8)+4)/4;return c}async _call(l,{max_length:c=null}={}){(0,s.validate_audio_inputs)(l,"WhisperFeatureExtractor");let p;const d=c??this.config.n_samples;return l.length>d?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),p=l.slice(0,d)):(p=new Float32Array(d),p.set(l)),{input_features:(await this._extract_fbank_features(p)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperGenerationConfig:()=>i});var s=t("./src/generation/configuration_utils.js");class i extends s.GenerationConfig{constructor(){super(...arguments);Y(this,"return_timestamps",null);Y(this,"return_token_timestamps",null);Y(this,"num_frames",null);Y(this,"alignment_heads",null);Y(this,"task",null);Y(this,"language",null);Y(this,"no_timestamps_token_id",null);Y(this,"prompt_ids",null);Y(this,"is_multilingual",null);Y(this,"lang_to_id",null);Y(this,"task_to_id",null);Y(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(e,r,t)=>{t.r(r),t.d(r,{WhisperProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/tokenizers.js"),n=t("./src/base/processing_utils.js");class o extends n.Processor{async _call(l){return await this.feature_extractor(l)}}Y(o,"tokenizer_class",i.AutoTokenizer),Y(o,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(e,r,t)=>{t.r(r),t.d(r,{YolosFeatureExtractor:()=>n,YolosImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js");class i extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class n extends i{}},"./src/ops/registry.js":(e,r,t)=>{t.r(r),t.d(r,{TensorOpRegistry:()=>l});var s=t("./src/backends/onnx.js"),i=t("./src/utils/tensor.js"),n=t("./src/env.js");const o=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV,a=async(c,p,d)=>{const u=await(0,s.createInferenceSession)(new Uint8Array(c),p);let _=Promise.resolve();return async f=>{const b=(0,s.isONNXProxy)(),A=Object.fromEntries(Object.entries(f).map(([w,$])=>[w,(b?$.clone():$).ort_tensor])),g=await(_=o?_.then(()=>u.run(A)):u.run(A));return Array.isArray(d)?d.map(w=>new i.Tensor(g[w])):new i.Tensor(g[d])}};class l{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=a([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=a([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=a([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=a([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=a([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=a([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=a([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=a([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}Y(l,"session_options",{})},"./src/pipelines.js":(e,r,t)=>{t.r(r),t.d(r,{AudioClassificationPipeline:()=>K,AutomaticSpeechRecognitionPipeline:()=>te,BackgroundRemovalPipeline:()=>ne,DepthEstimationPipeline:()=>fe,DocumentQuestionAnsweringPipeline:()=>F,FeatureExtractionPipeline:()=>L,FillMaskPipeline:()=>$,ImageClassificationPipeline:()=>ee,ImageFeatureExtractionPipeline:()=>G,ImageSegmentationPipeline:()=>Z,ImageToImagePipeline:()=>se,ImageToTextPipeline:()=>H,ObjectDetectionPipeline:()=>ue,Pipeline:()=>b,QuestionAnsweringPipeline:()=>w,SummarizationPipeline:()=>v,Text2TextGenerationPipeline:()=>y,TextClassificationPipeline:()=>A,TextGenerationPipeline:()=>P,TextToAudioPipeline:()=>U,TokenClassificationPipeline:()=>g,TranslationPipeline:()=>T,ZeroShotAudioClassificationPipeline:()=>R,ZeroShotClassificationPipeline:()=>D,ZeroShotImageClassificationPipeline:()=>me,ZeroShotObjectDetectionPipeline:()=>j,pipeline:()=>Re});var s=t("./src/tokenizers.js"),i=t("./src/models.js"),n=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var o=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),c=t("./src/utils/audio.js"),p=t("./src/utils/tensor.js"),d=t("./src/utils/image.js");async function u(Me){return Array.isArray(Me)||(Me=[Me]),await Promise.all(Me.map(X=>d.RawImage.read(X)))}async function _(Me,X){return Array.isArray(Me)||(Me=[Me]),await Promise.all(Me.map(le=>typeof le=="string"||le instanceof URL?(0,c.read_audio)(le,X):le instanceof Float64Array?new Float32Array(le):le))}function f(Me,X){X&&(Me=Me.map(Pe=>Pe|0));const[le,W,ye,ke]=Me;return{xmin:le,ymin:W,xmax:ye,ymax:ke}}class b extends o.Callable{constructor({task:X,model:le,tokenizer:W=null,processor:ye=null}){super(),this.task=X,this.model=le,this.tokenizer=W,this.processor=ye}async dispose(){await this.model.dispose()}}class A extends b{constructor(X){super(X)}async _call(X,{top_k:le=1}={}){const W=this.tokenizer(X,{padding:!0,truncation:!0}),ye=await this.model(W),ke=this.model.config.problem_type==="multi_label_classification"?Se=>Se.sigmoid():Se=>new p.Tensor("float32",(0,l.softmax)(Se.data),Se.dims),Pe=this.model.config.id2label,be=[];for(const Se of ye.logits){const we=ke(Se),Ie=await(0,p.topk)(we,le),ze=Ie[0].tolist(),xe=Ie[1].tolist().map((Ze,Ge)=>({label:Pe?Pe[Ze]:`LABEL_${Ze}`,score:ze[Ge]}));le===1?be.push(...xe):be.push(xe)}return Array.isArray(X)||le===1?be:be[0]}}class g extends b{constructor(X){super(X)}async _call(X,{ignore_labels:le=["O"]}={}){const W=Array.isArray(X),ye=this.tokenizer(W?X:[X],{padding:!0,truncation:!0}),Pe=(await this.model(ye)).logits,be=this.model.config.id2label,Se=[];for(let we=0;we<Pe.dims[0];++we){const Ie=ye.input_ids[we],ze=Pe[we],Qe=[];for(let xe=0;xe<ze.dims[0];++xe){const Ze=ze[xe],Ge=(0,l.max)(Ze.data)[1],nt=be?be[Ge]:`LABEL_${Ge}`;if(le.includes(nt))continue;const Ye=this.tokenizer.decode([Ie[xe].item()],{skip_special_tokens:!0});if(Ye==="")continue;const De=(0,l.softmax)(Ze.data);Qe.push({entity:nt,score:De[Ge],index:xe,word:Ye})}Se.push(Qe)}return W?Se:Se[0]}}class w extends b{constructor(X){super(X)}async _call(X,le,{top_k:W=1}={}){const ye=this.tokenizer(X,{text_pair:le,padding:!0,truncation:!0}),{start_logits:ke,end_logits:Pe}=await this.model(ye),be=ye.input_ids.tolist(),Se=ye.attention_mask.tolist(),we=this.tokenizer.all_special_ids,Ie=[];for(let ze=0;ze<ke.dims[0];++ze){const Qe=be[ze],xe=Qe.findIndex(Je=>Je==this.tokenizer.sep_token_id);Se[ze].map((Je,it)=>Je==1&&(it===0||it>xe&&we.findIndex(It=>It==Qe[it])===-1));const Ze=ke[ze].tolist(),Ge=Pe[ze].tolist();for(let Je=1;Je<Ze.length;++Je)(Se[ze]==0||Je<=xe||we.findIndex(it=>it==Qe[Je])!==-1)&&(Ze[Je]=-1/0,Ge[Je]=-1/0);const nt=(0,l.softmax)(Ze).map((Je,it)=>[Je,it]),Ye=(0,l.softmax)(Ge).map((Je,it)=>[Je,it]);nt[0][0]=0,Ye[0][0]=0;const De=(0,a.product)(nt,Ye).filter(Je=>Je[0][1]<=Je[1][1]).map(Je=>[Je[0][1],Je[1][1],Je[0][0]*Je[1][0]]).sort((Je,it)=>it[2]-Je[2]);for(let Je=0;Je<Math.min(De.length,W);++Je){const[it,It,St]=De[Je],bt=Qe.slice(it,It+1),Mr=this.tokenizer.decode(bt,{skip_special_tokens:!0});Ie.push({answer:Mr,score:St})}}return W===1?Ie[0]:Ie}}class $ extends b{constructor(X){super(X)}async _call(X,{top_k:le=5}={}){const W=this.tokenizer(X,{padding:!0,truncation:!0}),{logits:ye}=await this.model(W),ke=[],Pe=W.input_ids.tolist();for(let be=0;be<Pe.length;++be){const Se=Pe[be],we=Se.findIndex(Ze=>Ze==this.tokenizer.mask_token_id);if(we===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ie=ye[be][we],ze=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ie.data),Ie.dims),le),Qe=ze[0].tolist(),xe=ze[1].tolist();ke.push(xe.map((Ze,Ge)=>{const nt=Se.slice();return nt[we]=Ze,{score:Qe[Ge],token:Number(Ze),token_str:this.tokenizer.decode([Ze]),sequence:this.tokenizer.decode(nt,{skip_special_tokens:!0})}}))}return Array.isArray(X)?ke:ke[0]}}class y extends b{constructor(le){super(le);Y(this,"_key","generated_text")}async _call(le,W={}){Array.isArray(le)||(le=[le]),this.model.config.prefix&&(le=le.map(we=>this.model.config.prefix+we));const ye=this.model.config.task_specific_params;ye&&ye[this.task]&&ye[this.task].prefix&&(le=le.map(we=>ye[this.task].prefix+we));const ke=this.tokenizer,Pe={padding:!0,truncation:!0};let be;this instanceof T&&"_build_translation_inputs"in ke?be=ke._build_translation_inputs(le,Pe,W):be=ke(le,Pe);const Se=await this.model.generate({...be,...W});return ke.batch_decode(Se,{skip_special_tokens:!0}).map(we=>({[this._key]:we}))}}class v extends y{constructor(le){super(le);Y(this,"_key","summary_text")}}class T extends y{constructor(le){super(le);Y(this,"_key","translation_text")}}function x(Me){return Array.isArray(Me)&&Me.every(X=>"role"in X&&"content"in X)}class P extends b{constructor(X){super(X)}async _call(X,le={}){let W=!1,ye=!1,ke=le.add_special_tokens??(this.tokenizer.add_bos_token||this.tokenizer.add_eos_token)??!1,Pe;if(typeof X=="string")Pe=X=[X];else if(Array.isArray(X)&&X.every(xe=>typeof xe=="string"))W=!0,Pe=X;else{if(x(X))X=[X];else if(Array.isArray(X)&&X.every(x))W=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");ye=!0,Pe=X.map(xe=>this.tokenizer.apply_chat_template(xe,{tokenize:!1,add_generation_prompt:!0})),ke=!1}const be=ye?!1:le.return_full_text??!0;this.tokenizer.padding_side="left";const Se=this.tokenizer(Pe,{add_special_tokens:ke,padding:!0,truncation:!0}),we=await this.model.generate({...Se,...le}),Ie=this.tokenizer.batch_decode(we,{skip_special_tokens:!0});let ze;!be&&Se.input_ids.dims.at(-1)>0&&(ze=this.tokenizer.batch_decode(Se.input_ids,{skip_special_tokens:!0}).map(xe=>xe.length));const Qe=Array.from({length:X.length},xe=>[]);for(let xe=0;xe<Ie.length;++xe){const Ze=Math.floor(xe/we.dims[0]*X.length);ze&&(Ie[xe]=Ie[xe].slice(ze[Ze])),Qe[Ze].push({generated_text:ye?[...X[Ze],{role:"assistant",content:Ie[xe]}]:Ie[xe]})}return!W&&Qe.length===1?Qe[0]:Qe}}class D extends b{constructor(X){super(X),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([le,W])=>[le.toLowerCase(),W])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(X,le,{hypothesis_template:W="This example is {}.",multi_label:ye=!1}={}){const ke=Array.isArray(X);ke||(X=[X]),Array.isArray(le)||(le=[le]);const Pe=le.map(we=>W.replace("{}",we)),be=ye||le.length===1,Se=[];for(const we of X){const Ie=[];for(const xe of Pe){const Ze=this.tokenizer(we,{text_pair:xe,padding:!0,truncation:!0}),Ge=await this.model(Ze);be?Ie.push([Ge.logits.data[this.contradiction_id],Ge.logits.data[this.entailment_id]]):Ie.push(Ge.logits.data[this.entailment_id])}const Qe=(be?Ie.map(xe=>(0,l.softmax)(xe)[1]):(0,l.softmax)(Ie)).map((xe,Ze)=>[xe,Ze]).sort((xe,Ze)=>Ze[0]-xe[0]);Se.push({sequence:we,labels:Qe.map(xe=>le[xe[1]]),scores:Qe.map(xe=>xe[0])})}return ke?Se:Se[0]}}class L extends b{constructor(X){super(X)}async _call(X,{pooling:le="none",normalize:W=!1,quantize:ye=!1,precision:ke="binary"}={}){const Pe=this.tokenizer(X,{padding:!0,truncation:!0}),be=await this.model(Pe);let Se=be.last_hidden_state??be.logits??be.token_embeddings;switch(le){case"none":break;case"mean":Se=(0,p.mean_pooling)(Se,Pe.attention_mask);break;case"first_token":case"cls":Se=Se.slice(null,0);break;case"last_token":case"eos":Se=Se.slice(null,-1);break;default:throw Error(`Pooling method '${le}' not supported.`)}return W&&(Se=Se.normalize(2,-1)),ye&&(Se=(0,p.quantize_embeddings)(Se,ke)),Se}}class G extends b{constructor(X){super(X)}async _call(X,{pool:le=null}={}){const W=await u(X),{pixel_values:ye}=await this.processor(W),ke=await this.model({pixel_values:ye});let Pe;if(le){if(!("pooler_output"in ke))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Pe=ke.pooler_output}else Pe=ke.last_hidden_state??ke.logits??ke.image_embeds;return Pe}}class K extends b{constructor(X){super(X)}async _call(X,{top_k:le=5}={}){const W=this.processor.feature_extractor.config.sampling_rate,ye=await _(X,W),ke=this.model.config.id2label,Pe=[];for(const be of ye){const Se=await this.processor(be),Ie=(await this.model(Se)).logits[0],ze=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ie.data),Ie.dims),le),Qe=ze[0].tolist(),Ze=ze[1].tolist().map((Ge,nt)=>({label:ke?ke[Ge]:`LABEL_${Ge}`,score:Qe[nt]}));Pe.push(Ze)}return Array.isArray(X)?Pe:Pe[0]}}class R extends b{constructor(X){super(X)}async _call(X,le,{hypothesis_template:W="This is a sound of {}."}={}){const ye=!Array.isArray(X);ye&&(X=[X]);const ke=le.map(Ie=>W.replace("{}",Ie)),Pe=this.tokenizer(ke,{padding:!0,truncation:!0}),be=this.processor.feature_extractor.config.sampling_rate,Se=await _(X,be),we=[];for(const Ie of Se){const ze=await this.processor(Ie),Qe=await this.model({...Pe,...ze}),xe=(0,l.softmax)(Qe.logits_per_audio.data);we.push([...xe].map((Ze,Ge)=>({score:Ze,label:le[Ge]})))}return ye?we[0]:we}}class te extends b{constructor(X){super(X)}async _call(X,le={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(X,le);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(X,le);case"moonshine":return this._call_moonshine(X,le);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(X,le){le.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),le.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const W=!Array.isArray(X);W&&(X=[X]);const ye=this.processor.feature_extractor.config.sampling_rate,ke=await _(X,ye),Pe=[];for(const be of ke){const Se=await this.processor(be),Ie=(await this.model(Se)).logits[0],ze=[];for(const xe of Ie)ze.push((0,l.max)(xe.data)[1]);const Qe=this.tokenizer.decode(ze);Pe.push({text:Qe})}return W?Pe[0]:Pe}async _call_whisper(X,le){const W=le.return_timestamps??!1,ye=le.chunk_length_s??0,ke=le.force_full_sequences??!1;let Pe=le.stride_length_s??null;const be={...le};W==="word"&&(be.return_token_timestamps=!0,be.return_timestamps=!1);const Se=!Array.isArray(X);Se&&(X=[X]);const we=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ie=this.processor.feature_extractor.config.hop_length,ze=this.processor.feature_extractor.config.sampling_rate,Qe=await _(X,ze),xe=[];for(const Ze of Qe){let Ge=[];if(ye>0){if(Pe===null)Pe=ye/6;else if(ye<=Pe)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const De=ze*ye,Je=ze*Pe,it=De-2*Je;let It=0;for(;;){const St=It+De,bt=Ze.subarray(It,St),Mr=await this.processor(bt),Pr=It===0,jr=St>=Ze.length;if(Ge.push({stride:[bt.length,Pr?0:Je,jr?0:Je],input_features:Mr.input_features,is_last:jr}),jr)break;It+=it}}else Ge=[{stride:[Ze.length,0,0],input_features:(await this.processor(Ze)).input_features,is_last:!0}];for(const De of Ge){be.num_frames=Math.floor(De.stride[0]/Ie);const Je=await this.model.generate({inputs:De.input_features,...be});W==="word"?(De.tokens=Je.sequences.tolist()[0],De.token_timestamps=Je.token_timestamps.tolist()[0].map(it=>(0,l.round)(it,2))):De.tokens=Je[0].tolist(),De.stride=De.stride.map(it=>it/ze)}const[nt,Ye]=this.tokenizer._decode_asr(Ge,{time_precision:we,return_timestamps:W,force_full_sequences:ke});xe.push({text:nt,...Ye})}return Se?xe[0]:xe}async _call_moonshine(X,le){const W=!Array.isArray(X);W&&(X=[X]);const ye=this.processor.feature_extractor.config.sampling_rate,ke=await _(X,ye),Pe=[];for(const be of ke){const Se=await this.processor(be),we=Math.floor(be.length/ye)*6,Ie=await this.model.generate({max_new_tokens:we,...le,...Se}),ze=this.processor.batch_decode(Ie,{skip_special_tokens:!0})[0];Pe.push({text:ze})}return W?Pe[0]:Pe}}class H extends b{constructor(X){super(X)}async _call(X,le={}){const W=Array.isArray(X),ye=await u(X),{pixel_values:ke}=await this.processor(ye),Pe=[];for(const be of ke){be.dims=[1,...be.dims];const Se=await this.model.generate({inputs:be,...le}),we=this.tokenizer.batch_decode(Se,{skip_special_tokens:!0}).map(Ie=>({generated_text:Ie.trim()}));Pe.push(we)}return W?Pe:Pe[0]}}class ee extends b{constructor(X){super(X)}async _call(X,{top_k:le=5}={}){const W=await u(X),{pixel_values:ye}=await this.processor(W),ke=await this.model({pixel_values:ye}),Pe=this.model.config.id2label,be=[];for(const Se of ke.logits){const we=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Se.data),Se.dims),le),Ie=we[0].tolist(),Qe=we[1].tolist().map((xe,Ze)=>({label:Pe?Pe[xe]:`LABEL_${xe}`,score:Ie[Ze]}));be.push(Qe)}return Array.isArray(X)?be:be[0]}}class Z extends b{constructor(X){super(X),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(X,{threshold:le=.5,mask_threshold:W=.5,overlap_mask_area_threshold:ye=.8,label_ids_to_fuse:ke=null,target_sizes:Pe=null,subtask:be=null}={}){if(Array.isArray(X)&&X.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const we=await u(X),Ie=we.map(De=>[De.height,De.width]),ze=await this.processor(we),{inputNames:Qe,outputNames:xe}=this.model.sessions.model;if(!Qe.includes("pixel_values")){if(Qe.length!==1)throw Error(`Expected a single input name, but got ${Qe.length} inputs: ${Qe}.`);const De=Qe[0];if(De in ze)throw Error(`Input name ${De} already exists in the inputs.`);ze[De]=ze.pixel_values}const Ze=await this.model(ze);let Ge=null;if(be!==null)Ge=this.subtasks_mapping[be];else if(this.processor.image_processor){for(const[De,Je]of Object.entries(this.subtasks_mapping))if(Je in this.processor.image_processor){Ge=this.processor.image_processor[Je].bind(this.processor.image_processor),be=De;break}}const nt=this.model.config.id2label,Ye=[];if(be)if(be==="panoptic"||be==="instance"){const De=Ge(Ze,le,W,ye,ke,Pe??Ie)[0],Je=De.segmentation;for(const it of De.segments_info){const It=new Uint8ClampedArray(Je.data.length);for(let bt=0;bt<Je.data.length;++bt)Je.data[bt]===it.id&&(It[bt]=255);const St=new d.RawImage(It,Je.dims[1],Je.dims[0],1);Ye.push({score:it.score,label:nt[it.label_id],mask:St})}}else if(be==="semantic"){const{segmentation:De,labels:Je}=Ge(Ze,Pe??Ie)[0];for(const it of Je){const It=new Uint8ClampedArray(De.data.length);for(let bt=0;bt<De.data.length;++bt)De.data[bt]===it&&(It[bt]=255);const St=new d.RawImage(It,De.dims[1],De.dims[0],1);Ye.push({score:null,label:nt[it],mask:St})}}else throw Error(`Subtask ${be} not supported.`);else{const Je=Ze[xe[0]];for(let it=0;it<Ie.length;++it){const It=Ie[it],St=Je[it];St.data.some(Mr=>Mr<-1e-5||Mr>1+1e-5)&&St.sigmoid_();const bt=await d.RawImage.fromTensor(St.mul_(255).to("uint8")).resize(It[1],It[0]);Ye.push({label:null,score:null,mask:bt})}}return Ye}}class ne extends Z{constructor(X){super(X)}async _call(X,le={}){if(Array.isArray(X)&&X.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const ye=await u(X),ke=await super._call(X,le);return ye.map((be,Se)=>{const we=be.clone();return we.putAlpha(ke[Se].mask),we})}}class me extends b{constructor(X){super(X)}async _call(X,le,{hypothesis_template:W="This is a photo of {}"}={}){const ye=Array.isArray(X),ke=await u(X),Pe=le.map(Qe=>W.replace("{}",Qe)),be=this.tokenizer(Pe,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:Se}=await this.processor(ke),we=await this.model({...be,pixel_values:Se}),Ie=this.model.config.model_type==="siglip"?Qe=>Qe.sigmoid().data:Qe=>(0,l.softmax)(Qe.data),ze=[];for(const Qe of we.logits_per_image){const Ze=[...Ie(Qe)].map((Ge,nt)=>({score:Ge,label:le[nt]}));Ze.sort((Ge,nt)=>nt.score-Ge.score),ze.push(Ze)}return ye?ze:ze[0]}}class ue extends b{constructor(X){super(X)}async _call(X,{threshold:le=.9,percentage:W=!1}={}){const ye=Array.isArray(X);if(ye&&X.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const ke=await u(X),Pe=W?null:ke.map(xe=>[xe.height,xe.width]),{pixel_values:be,pixel_mask:Se}=await this.processor(ke),we=await this.model({pixel_values:be,pixel_mask:Se}),Ie=this.processor.image_processor.post_process_object_detection(we,le,Pe),ze=this.model.config.id2label,Qe=Ie.map(xe=>xe.boxes.map((Ze,Ge)=>({score:xe.scores[Ge],label:ze[xe.classes[Ge]],box:f(Ze,!W)})));return ye?Qe:Qe[0]}}class j extends b{constructor(X){super(X)}async _call(X,le,{threshold:W=.1,top_k:ye=null,percentage:ke=!1}={}){const Pe=Array.isArray(X),be=await u(X),Se=this.tokenizer(le,{padding:!0,truncation:!0}),we=await this.processor(be),Ie=[];for(let ze=0;ze<be.length;++ze){const Qe=be[ze],xe=ke?null:[[Qe.height,Qe.width]],Ze=we.pixel_values[ze].unsqueeze_(0),Ge=await this.model({...Se,pixel_values:Ze});let nt;if("post_process_grounded_object_detection"in this.processor){const Ye=this.processor.post_process_grounded_object_detection(Ge,Se.input_ids,{box_threshold:W,text_threshold:W,target_sizes:xe})[0];nt=Ye.boxes.map((De,Je)=>({score:Ye.scores[Je],label:Ye.labels[Je],box:f(De,!ke)}))}else{const Ye=this.processor.image_processor.post_process_object_detection(Ge,W,xe,!0)[0];nt=Ye.boxes.map((De,Je)=>({score:Ye.scores[Je],label:le[Ye.classes[Je]],box:f(De,!ke)}))}nt.sort((Ye,De)=>De.score-Ye.score),ye!==null&&(nt=nt.slice(0,ye)),Ie.push(nt)}return Pe?Ie:Ie[0]}}class F extends b{constructor(X){super(X)}async _call(X,le,W={}){const ye=(await u(X))[0],{pixel_values:ke}=await this.processor(ye),Pe=`<s_docvqa><s_question>${le}</s_question><s_answer>`,be=this.tokenizer(Pe,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Se=await this.model.generate({inputs:ke,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:be,...W}),Ie=this.tokenizer.batch_decode(Se)[0].match(/<s_answer>(.*?)<\/s_answer>/);let ze=null;return Ie&&Ie.length>=2&&(ze=Ie[1].trim()),[{answer:ze}]}}class U extends b{constructor(le){super(le);Y(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=le.vocoder??null}async _call(le,{speaker_embeddings:W=null}={}){return this.processor?this._call_text_to_spectrogram(le,{speaker_embeddings:W}):this._call_text_to_waveform(le)}async _call_text_to_waveform(le){const W=this.tokenizer(le,{padding:!0,truncation:!0}),{waveform:ye}=await this.model(W),ke=this.model.config.sampling_rate;return new c.RawAudio(ye.data,ke)}async _call_text_to_spectrogram(le,{speaker_embeddings:W}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await i.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof W=="string"||W instanceof URL)&&(W=new Float32Array(await(await fetch(W)).arrayBuffer())),W instanceof Float32Array)W=new p.Tensor("float32",W,[1,W.length]);else if(!(W instanceof p.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:ye}=this.tokenizer(le,{padding:!0,truncation:!0}),{waveform:ke}=await this.model.generate_speech(ye,W,{vocoder:this.vocoder}),Pe=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(ke.data,Pe)}}class se extends b{constructor(X){super(X)}async _call(X){const le=await u(X),W=await this.processor(le),ye=await this.model(W),ke=[];for(const Pe of ye.reconstruction){const be=Pe.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");ke.push(d.RawImage.fromTensor(be))}return ke.length>1?ke:ke[0]}}class fe extends b{constructor(X){super(X)}async _call(X){const le=await u(X),W=await this.processor(le),{predicted_depth:ye}=await this.model(W),ke=[];for(let Pe=0;Pe<le.length;++Pe){const be=ye[Pe],[Se,we]=be.dims.slice(-2),[Ie,ze]=le[Pe].size,Qe=(await(0,p.interpolate_4d)(be.view(1,1,Se,we),{size:[ze,Ie],mode:"bilinear"})).view(ze,Ie),xe=Qe.min().item(),Ze=Qe.max().item(),Ge=Qe.sub(xe).div_(Ze-xe).mul_(255).to("uint8").unsqueeze(0),nt=d.RawImage.fromTensor(Ge);ke.push({predicted_depth:Qe,depth:nt})}return ke.length>1?ke:ke[0]}}const oe=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:A,model:i.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:g,model:i.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:w,model:i.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:$,model:i.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:v,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:T,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:y,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:P,model:i.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:D,model:i.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:K,model:i.AutoModelForAudioClassification,processor:n.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:R,model:i.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:te,model:[i.AutoModelForSpeechSeq2Seq,i.AutoModelForCTC],processor:n.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:U,model:[i.AutoModelForTextToWaveform,i.AutoModelForTextToSpectrogram],processor:[n.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:H,model:i.AutoModelForVision2Seq,processor:n.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:ee,model:i.AutoModelForImageClassification,processor:n.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Z,model:[i.AutoModelForImageSegmentation,i.AutoModelForSemanticSegmentation,i.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:ne,model:[i.AutoModelForImageSegmentation,i.AutoModelForSemanticSegmentation,i.AutoModelForUniversalSegmentation],processor:n.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:me,model:i.AutoModel,processor:n.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ue,model:i.AutoModelForObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:j,model:i.AutoModelForZeroShotObjectDetection,processor:n.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:F,model:i.AutoModelForDocumentQuestionAnswering,processor:n.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:se,model:i.AutoModelForImageToImage,processor:n.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:fe,model:i.AutoModelForDepthEstimation,processor:n.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:L,model:i.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:n.AutoProcessor,pipeline:G,model:[i.AutoModelForImageFeatureExtraction,i.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Te=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Re(Me,X=null,{progress_callback:le=null,config:W=null,cache_dir:ye=null,local_files_only:ke=!1,revision:Pe="main",device:be=null,dtype:Se=null,subfolder:we="onnx",use_external_data_format:Ie=null,model_file_name:ze=null,session_options:Qe={}}={}){Me=Te[Me]??Me;const xe=oe[Me.split("_",1)[0]];if(!xe)throw Error(`Unsupported pipeline: ${Me}. Must be one of [${Object.keys(oe)}]`);X||(X=xe.default.model,console.log(`No model specified. Using default model: "${X}".`));const Ze={progress_callback:le,config:W,cache_dir:ye,local_files_only:ke,revision:Pe,device:be,dtype:Se,subfolder:we,use_external_data_format:Ie,model_file_name:ze,session_options:Qe},Ge=new Map([["tokenizer",xe.tokenizer],["model",xe.model],["processor",xe.processor]]),nt=await He(Ge,X,Ze);nt.task=Me,(0,a.dispatchCallback)(le,{status:"ready",task:Me,model:X});const Ye=xe.pipeline;return new Ye(nt)}async function He(Me,X,le){const W=Object.create(null),ye=[];for(const[ke,Pe]of Me.entries()){if(!Pe)continue;let be;Array.isArray(Pe)?be=new Promise(async(Se,we)=>{var ze,Qe;let Ie;for(const xe of Pe){if(xe===null){Se(null);return}try{Se(await xe.from_pretrained(X,le));return}catch(Ze){if((ze=Ze.message)!=null&&ze.includes("Unsupported model type"))Ie=Ze;else if((Qe=Ze.message)!=null&&Qe.includes("Could not locate file"))Ie=Ze;else{we(Ze);return}}}we(Ie)}):be=Pe.from_pretrained(X,le),W[ke]=be,ye.push(be)}await Promise.all(ye);for(const[ke,Pe]of Object.entries(W))W[ke]=await Pe;return W}},"./src/tokenizers.js":(e,r,t)=>{t.r(r),t.d(r,{AlbertTokenizer:()=>ks,AutoTokenizer:()=>hn,BartTokenizer:()=>st,BertTokenizer:()=>As,BlenderbotSmallTokenizer:()=>Yt,BlenderbotTokenizer:()=>et,BloomTokenizer:()=>Qr,CLIPTokenizer:()=>Bs,CamembertTokenizer:()=>Fe,CodeGenTokenizer:()=>Xr,CodeLlamaTokenizer:()=>Sr,CohereTokenizer:()=>_s,ConvBertTokenizer:()=>q,DebertaTokenizer:()=>S,DebertaV2Tokenizer:()=>Q,DistilBertTokenizer:()=>ge,ElectraTokenizer:()=>gt,Ernie4_5_Tokenizer:()=>pn,EsmTokenizer:()=>Fs,FalconTokenizer:()=>Ar,GPT2Tokenizer:()=>xt,GPTNeoXTokenizer:()=>Is,GemmaTokenizer:()=>Wr,Grok1Tokenizer:()=>es,HerbertTokenizer:()=>B,LlamaTokenizer:()=>$r,M2M100Tokenizer:()=>hr,MBart50Tokenizer:()=>Vt,MBartTokenizer:()=>Bt,MPNetTokenizer:()=>ls,MarianTokenizer:()=>Be,MgpstrTokenizer:()=>dn,MobileBertTokenizer:()=>$t,NllbTokenizer:()=>ms,NougatTokenizer:()=>fs,PreTrainedTokenizer:()=>ht,Qwen2Tokenizer:()=>Ur,RoFormerTokenizer:()=>re,RobertaTokenizer:()=>Nr,SiglipTokenizer:()=>Gr,SpeechT5Tokenizer:()=>Rs,SqueezeBertTokenizer:()=>Xt,T5Tokenizer:()=>mt,TokenizerModel:()=>G,VitsTokenizer:()=>js,Wav2Vec2CTCTokenizer:()=>je,WhisperTokenizer:()=>fr,XLMRobertaTokenizer:()=>Vr,XLMTokenizer:()=>rt,is_chinese_char:()=>$});var s=t("./src/utils/generic.js"),i=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),o=t("./src/utils/maths.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),c=t("./node_modules/@huggingface/jinja/dist/index.js"),p=t("./src/models/whisper/common_whisper.js");async function d(pe,k){const N=await Promise.all([(0,n.getModelJSON)(pe,"tokenizer.json",!0,k),(0,n.getModelJSON)(pe,"tokenizer_config.json",!0,k)]);return k.legacy!==null&&(N[1].legacy=k.legacy),N}function u(pe,k){const N=[];let J=0;for(const ae of pe.matchAll(k)){const de=ae[0];J<ae.index&&N.push(pe.slice(J,ae.index)),de.length>0&&N.push(de),J=ae.index+de.length}return J<pe.length&&N.push(pe.slice(J)),N}function _(pe,k=!0){if(pe.Regex!==void 0){let N=pe.Regex.replace(/\\([#&~])/g,"$1");for(const[J,ae]of D)N=N.replaceAll(J,ae);return new RegExp(N,"gu")}else if(pe.String!==void 0){const N=(0,i.escapeRegExp)(pe.String);return new RegExp(k?N:`(${N})`,"gu")}else return console.warn("Unknown pattern type:",pe),null}function f(pe){return new Map(Object.entries(pe))}function b(pe){const k=pe.dims;switch(k.length){case 1:return pe.tolist();case 2:if(k[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return pe.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${k.length}.`)}}function A(pe){return pe.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function g(pe){return pe.replace(new RegExp("\\p{M}","gu"),"")}function w(pe){return g(pe.toLowerCase())}function $(pe){return pe>=19968&&pe<=40959||pe>=13312&&pe<=19903||pe>=131072&&pe<=173791||pe>=173824&&pe<=177983||pe>=177984&&pe<=178207||pe>=178208&&pe<=183983||pe>=63744&&pe<=64255||pe>=194560&&pe<=195103}function y(pe,k,N){const J=[];let ae=0;for(;ae<pe.length;){if(J.push(pe[ae]),(k.get(pe[ae])??N)!==N){++ae;continue}for(;++ae<pe.length&&(k.get(pe[ae])??N)===N;)k.get(J.at(-1))!==N&&(J[J.length-1]+=pe[ae])}return J}function v(pe){return pe.match(/\S+/g)||[]}const T="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",x=new RegExp(`^[${T}]+$`,"gu"),P=".,!?…。，、।۔،",D=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${P}])]+`,` ?[^\\s${P}]+`]]);class L{constructor(k){this.content=k.content,this.id=k.id,this.single_word=k.single_word??!1,this.lstrip=k.lstrip??!1,this.rstrip=k.rstrip??!1,this.special=k.special??!1,this.normalized=k.normalized??null}}class G extends s.Callable{constructor(k){super(),this.config=k,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(k,...N){switch(k.type){case"WordPiece":return new K(k);case"Unigram":return new R(k,...N);case"BPE":return new ee(k);default:if(k.vocab)return Array.isArray(k.vocab)?new R(k,...N):Object.hasOwn(k,"continuing_subword_prefix")&&Object.hasOwn(k,"unk_token")?Object.hasOwn(k,"merges")?new ee(k):new K(k):new Z(k,...N);throw new Error(`Unknown TokenizerModel type: ${k.type}`)}}_call(k){return k=this.encode(k),this.fuse_unk&&(k=y(k,this.tokens_to_ids,this.unk_token_id)),k}encode(k){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(k){return k.map(N=>this.tokens_to_ids.get(N)??this.unk_token_id)}convert_ids_to_tokens(k){return k.map(N=>this.vocab[N]??this.unk_token)}}class K extends G{constructor(k){super(k),this.tokens_to_ids=f(k.vocab),this.unk_token_id=this.tokens_to_ids.get(k.unk_token),this.unk_token=k.unk_token,this.max_input_chars_per_word=k.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[N,J]of this.tokens_to_ids)this.vocab[J]=N}encode(k){const N=[];for(const J of k){const ae=[...J];if(ae.length>this.max_input_chars_per_word){N.push(this.unk_token);continue}let de=!1,Ee=0;const Ne=[];for(;Ee<ae.length;){let qe=ae.length,We=null;for(;Ee<qe;){let tt=ae.slice(Ee,qe).join("");if(Ee>0&&(tt=this.config.continuing_subword_prefix+tt),this.tokens_to_ids.has(tt)){We=tt;break}--qe}if(We===null){de=!0;break}Ne.push(We),Ee=qe}de?N.push(this.unk_token):N.push(...Ne)}return N}}class R extends G{constructor(k,N){super(k);const J=k.vocab.length;this.vocab=new Array(J),this.scores=new Array(J);for(let ae=0;ae<J;++ae)[this.vocab[ae],this.scores[ae]]=k.vocab[ae];this.unk_token_id=k.unk_id,this.unk_token=this.vocab[k.unk_id],this.tokens_to_ids=new Map(this.vocab.map((ae,de)=>[ae,de])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=N.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,o.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(k){const N=k.chars,J=1;let ae=0;for(;ae<N.length;){let de=!1;const Ee=N.slice(ae).join(""),Ne=this.trie.commonPrefixSearch(Ee);for(const qe of Ne){const We=this.tokens_to_ids.get(qe),tt=this.scores[We],Mt=(0,i.len)(qe);k.insert(ae,Mt,tt,We),!de&&Mt===J&&(de=!0)}de||k.insert(ae,J,this.unk_score,this.unk_token_id),ae+=J}}tokenize(k){const N=new l.TokenLattice(k,this.bos_token_id,this.eos_token_id);return this.populateNodes(N),N.tokens()}encode(k){const N=[];for(const J of k){const ae=this.tokenize(J);N.push(...ae)}return N}}const te=(()=>{const pe=[...Array.from({length:94},(ae,de)=>de+33),...Array.from({length:12},(ae,de)=>de+161),...Array.from({length:82},(ae,de)=>de+174)],k=pe.slice();let N=0;for(let ae=0;ae<256;++ae)pe.includes(ae)||(pe.push(ae),k.push(256+N),N+=1);const J=k.map(ae=>String.fromCharCode(ae));return Object.fromEntries(pe.map((ae,de)=>[ae,J[de]]))})(),H=(0,i.reverseDictionary)(te);class ee extends G{constructor(k){super(k),this.tokens_to_ids=f(k.vocab),this.unk_token_id=this.tokens_to_ids.get(k.unk_token),this.unk_token=k.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[J,ae]of this.tokens_to_ids)this.vocab[ae]=J;const N=Array.isArray(k.merges[0]);this.merges=N?k.merges:k.merges.map(J=>J.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((J,ae)=>[JSON.stringify(J),ae])),this.end_of_word_suffix=k.end_of_word_suffix,this.continuing_subword_suffix=k.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(k){if(k.length===0)return[];const N=this.cache.get(k);if(N!==void 0)return N;const J=Array.from(k);this.end_of_word_suffix&&(J[J.length-1]+=this.end_of_word_suffix);let ae=[];if(J.length>1){const de=new l.PriorityQueue((qe,We)=>qe.score<We.score);let Ee={token:J[0],bias:0,prev:null,next:null},Ne=Ee;for(let qe=1;qe<J.length;++qe){const We={bias:qe/J.length,token:J[qe],prev:Ne,next:null};Ne.next=We,this._add_node(de,Ne),Ne=We}for(;!de.isEmpty();){const qe=de.pop();if(qe.deleted||!qe.next||qe.next.deleted)continue;if(qe.deleted=!0,qe.next.deleted=!0,qe.prev){const tt={...qe.prev};qe.prev.deleted=!0,qe.prev=tt,tt.prev?tt.prev.next=tt:Ee=tt}const We={token:qe.token+qe.next.token,bias:qe.bias,prev:qe.prev,next:qe.next.next};We.prev?(We.prev.next=We,this._add_node(de,We.prev)):Ee=We,We.next&&(We.next.prev=We,this._add_node(de,We))}for(let qe=Ee;qe!==null;qe=qe.next)ae.push(qe.token)}else ae=J;if(this.continuing_subword_suffix)for(let de=0;de<ae.length-1;++de)ae[de]+=this.continuing_subword_suffix;return k.length<this.max_length_to_cache&&this.cache.put(k,ae),ae}_add_node(k,N){const J=this.bpe_ranks.get(JSON.stringify([N.token,N.next.token]));J!==void 0&&(N.score=J+N.bias,k.push(N))}encode(k){const N=[];for(const J of k){if(this.ignore_merges&&this.tokens_to_ids.has(J)){N.push(J);continue}const ae=this.bpe(J);for(const de of ae)if(this.tokens_to_ids.has(de))N.push(de);else if(this.byte_fallback){const Ee=Array.from(this.text_encoder.encode(de)).map(Ne=>`<0x${Ne.toString(16).toUpperCase().padStart(2,"0")}>`);Ee.every(Ne=>this.tokens_to_ids.has(Ne))?N.push(...Ee):N.push(this.unk_token)}else N.push(this.unk_token)}return N}}class Z extends G{constructor(k,N){super(k),this.tokens_to_ids=f(N.target_lang?k.vocab[N.target_lang]:k.vocab),this.bos_token=N.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=N.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=N.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=N.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[J,ae]of this.tokens_to_ids)this.vocab[ae]=J}encode(k){return k}}class ne extends s.Callable{constructor(k){super(),this.config=k}static fromConfig(k){if(k===null)return null;switch(k.type){case"BertNormalizer":return new Me(k);case"Precompiled":return new jr(k);case"Sequence":return new He(k);case"Replace":return new me(k);case"NFC":return new j(k);case"NFD":return new F(k);case"NFKC":return new U(k);case"NFKD":return new se(k);case"Strip":return new fe(k);case"StripAccents":return new oe(k);case"Lowercase":return new Te(k);case"Prepend":return new Re(k);default:throw new Error(`Unknown Normalizer type: ${k.type}`)}}normalize(k){throw Error("normalize should be implemented in subclass.")}_call(k){return this.normalize(k)}}class me extends ne{normalize(k){const N=_(this.config.pattern);return N===null?k:k.replaceAll(N,this.config.content)}}class ue extends ne{constructor(){super(...arguments);Y(this,"form")}normalize(N){return N=N.normalize(this.form),N}}class j extends ue{constructor(){super(...arguments);Y(this,"form","NFC")}}class F extends ue{constructor(){super(...arguments);Y(this,"form","NFD")}}class U extends ue{constructor(){super(...arguments);Y(this,"form","NFKC")}}class se extends ue{constructor(){super(...arguments);Y(this,"form","NFKD")}}class fe extends ne{normalize(k){return this.config.strip_left&&this.config.strip_right?k=k.trim():(this.config.strip_left&&(k=k.trimStart()),this.config.strip_right&&(k=k.trimEnd())),k}}class oe extends ne{normalize(k){return k=g(k),k}}class Te extends ne{normalize(k){return k=k.toLowerCase(),k}}class Re extends ne{normalize(k){return k=this.config.prepend+k,k}}class He extends ne{constructor(k){super(k),this.normalizers=k.normalizers.map(N=>ne.fromConfig(N))}normalize(k){return this.normalizers.reduce((N,J)=>J.normalize(N),k)}}class Me extends ne{_tokenize_chinese_chars(k){const N=[];for(let J=0;J<k.length;++J){const ae=k[J],de=ae.charCodeAt(0);$(de)?(N.push(" "),N.push(ae),N.push(" ")):N.push(ae)}return N.join("")}stripAccents(k){return k.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(k){switch(k){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(k)}}_clean_text(k){const N=[];for(const J of k){const ae=J.charCodeAt(0);ae===0||ae===65533||this._is_control(J)||(/^\s$/.test(J)?N.push(" "):N.push(J))}return N.join("")}normalize(k){return this.config.clean_text&&(k=this._clean_text(k)),this.config.handle_chinese_chars&&(k=this._tokenize_chinese_chars(k)),this.config.lowercase?(k=k.toLowerCase(),this.config.strip_accents!==!1&&(k=this.stripAccents(k))):this.config.strip_accents&&(k=this.stripAccents(k)),k}}class X extends s.Callable{static fromConfig(k){if(k===null)return null;switch(k.type){case"BertPreTokenizer":return new le(k);case"Sequence":return new as(k);case"Whitespace":return new Qt(k);case"WhitespaceSplit":return new Cr(k);case"Metaspace":return new Mr(k);case"ByteLevel":return new W(k);case"Split":return new ye(k);case"Punctuation":return new ke(k);case"Digits":return new Pe(k);case"Replace":return new Hs(k);default:throw new Error(`Unknown PreTokenizer type: ${k.type}`)}}pre_tokenize_text(k,N){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(k,N){return(Array.isArray(k)?k.map(J=>this.pre_tokenize_text(J,N)):this.pre_tokenize_text(k,N)).flat()}_call(k,N){return this.pre_tokenize(k,N)}}class le extends X{constructor(k){super(),this.pattern=new RegExp(`[^\\s${T}]+|[${T}]`,"gu")}pre_tokenize_text(k,N){return k.trim().match(this.pattern)||[]}}class W extends X{constructor(k){super(),this.config=k,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=te,this.text_encoder=new TextEncoder}pre_tokenize_text(k,N){return this.add_prefix_space&&!k.startsWith(" ")&&(k=" "+k),(this.use_regex?k.match(this.pattern)||[]:[k]).map(ae=>Array.from(this.text_encoder.encode(ae),de=>this.byte_encoder[de]).join(""))}}class ye extends X{constructor(k){super(),this.config=k,this.pattern=_(this.config.pattern,this.config.invert)}pre_tokenize_text(k,N){var J;return this.pattern===null?[]:this.config.invert?k.match(this.pattern)||[]:((J=this.config.behavior)==null?void 0:J.toLowerCase())==="removed"?k.split(this.pattern).filter(ae=>ae):u(k,this.pattern)}}class ke extends X{constructor(k){super(),this.config=k,this.pattern=new RegExp(`[^${T}]+|[${T}]+`,"gu")}pre_tokenize_text(k,N){return k.match(this.pattern)||[]}}class Pe extends X{constructor(k){super(),this.config=k;const N=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(N,"gu")}pre_tokenize_text(k,N){return k.match(this.pattern)||[]}}class be extends s.Callable{constructor(k){super(),this.config=k}static fromConfig(k){if(k===null)return null;switch(k.type){case"TemplateProcessing":return new Ie(k);case"ByteLevel":return new ze(k);case"RobertaProcessing":return new we(k);case"BertProcessing":return new Se(k);case"Sequence":return new Qe(k);default:throw new Error(`Unknown PostProcessor type: ${k.type}`)}}post_process(k,...N){throw Error("post_process should be implemented in subclass.")}_call(k,...N){return this.post_process(k,...N)}}class Se extends be{constructor(k){super(k),this.cls=k.cls[0],this.sep=k.sep[0]}post_process(k,N=null,{add_special_tokens:J=!0}={}){J&&(k=(0,i.mergeArrays)([this.cls],k,[this.sep]));let ae=new Array(k.length).fill(0);if(N!==null){const de=J&&this instanceof we?[this.sep]:[],Ee=J?[this.sep]:[];k=(0,i.mergeArrays)(k,de,N,Ee),ae=(0,i.mergeArrays)(ae,new Array(N.length+de.length+Ee.length).fill(1))}return{tokens:k,token_type_ids:ae}}}class we extends Se{}class Ie extends be{constructor(k){super(k),this.single=k.single,this.pair=k.pair}post_process(k,N=null,{add_special_tokens:J=!0}={}){const ae=N===null?this.single:this.pair;let de=[],Ee=[];for(const Ne of ae)"SpecialToken"in Ne?J&&(de.push(Ne.SpecialToken.id),Ee.push(Ne.SpecialToken.type_id)):"Sequence"in Ne&&(Ne.Sequence.id==="A"?(de=(0,i.mergeArrays)(de,k),Ee=(0,i.mergeArrays)(Ee,new Array(k.length).fill(Ne.Sequence.type_id))):Ne.Sequence.id==="B"&&(de=(0,i.mergeArrays)(de,N),Ee=(0,i.mergeArrays)(Ee,new Array(N.length).fill(Ne.Sequence.type_id))));return{tokens:de,token_type_ids:Ee}}}class ze extends be{post_process(k,N=null){return N&&(k=(0,i.mergeArrays)(k,N)),{tokens:k}}}class Qe extends be{constructor(k){super(k),this.processors=k.processors.map(N=>be.fromConfig(N))}post_process(k,N=null,J={}){let ae;for(const de of this.processors)if(de instanceof ze)k=de.post_process(k).tokens,N&&(N=de.post_process(N).tokens);else{const Ee=de.post_process(k,N,J);k=Ee.tokens,ae=Ee.token_type_ids}return{tokens:k,token_type_ids:ae}}}class xe extends s.Callable{constructor(k){super(),this.config=k,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=k.trim_offsets}static fromConfig(k){if(k===null)return null;switch(k.type){case"WordPiece":return new De(k);case"Metaspace":return new Pr(k);case"ByteLevel":return new Je(k);case"Replace":return new Ze(k);case"ByteFallback":return new Ge(k);case"Fuse":return new nt(k);case"Strip":return new Ye(k);case"Sequence":return new It(k);case"CTC":return new it(k);case"BPEDecoder":return new St(k);default:throw new Error(`Unknown Decoder type: ${k.type}`)}}_call(k){return this.decode(k)}decode(k){return this.decode_chain(k).join("")}decode_chain(k){throw Error("`decode_chain` should be implemented in subclass.")}}class Ze extends xe{decode_chain(k){const N=_(this.config.pattern);return N===null?k:k.map(J=>J.replaceAll(N,this.config.content))}}class Ge extends xe{constructor(k){super(k),this.text_decoder=new TextDecoder}decode_chain(k){const N=[];let J=[];for(const ae of k){let de=null;if(ae.length===6&&ae.startsWith("<0x")&&ae.endsWith(">")){const Ee=parseInt(ae.slice(3,5),16);isNaN(Ee)||(de=Ee)}if(de!==null)J.push(de);else{if(J.length>0){const Ee=this.text_decoder.decode(Uint8Array.from(J));N.push(Ee),J=[]}N.push(ae)}}if(J.length>0){const ae=this.text_decoder.decode(Uint8Array.from(J));N.push(ae),J=[]}return N}}class nt extends xe{decode_chain(k){return[k.join("")]}}class Ye extends xe{constructor(k){super(k),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(k){return k.map(N=>{let J=0;for(let de=0;de<this.start&&N[de]===this.content;++de){J=de+1;continue}let ae=N.length;for(let de=0;de<this.stop;++de){const Ee=N.length-de-1;if(N[Ee]===this.content){ae=Ee;continue}else break}return N.slice(J,ae)})}}class De extends xe{constructor(k){super(k),this.cleanup=k.cleanup}decode_chain(k){return k.map((N,J)=>(J!==0&&(N.startsWith(this.config.prefix)?N=N.replace(this.config.prefix,""):N=" "+N),this.cleanup&&(N=A(N)),N))}}class Je extends xe{constructor(k){super(k),this.byte_decoder=H,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(k){const N=k.join(""),J=new Uint8Array([...N].map(de=>this.byte_decoder[de]));return this.text_decoder.decode(J)}decode_chain(k){const N=[];let J=[];for(const ae of k)this.added_tokens.find(de=>de.content===ae)!==void 0?(J.length>0&&(N.push(this.convert_tokens_to_string(J)),J=[]),N.push(ae)):J.push(ae);return J.length>0&&N.push(this.convert_tokens_to_string(J)),N}}class it extends xe{constructor(k){super(k),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(k){if(k.length===0)return"";const N=[k[0]];for(let de=1;de<k.length;++de)k[de]!==N.at(-1)&&N.push(k[de]);let ae=N.filter(de=>de!==this.pad_token).join("");return this.cleanup&&(ae=A(ae).replaceAll(this.word_delimiter_token," ").trim()),ae}decode_chain(k){return[this.convert_tokens_to_string(k)]}}class It extends xe{constructor(k){super(k),this.decoders=k.decoders.map(N=>xe.fromConfig(N))}decode_chain(k){return this.decoders.reduce((N,J)=>J.decode_chain(N),k)}}class St extends xe{constructor(k){super(k),this.suffix=this.config.suffix}decode_chain(k){return k.map((N,J)=>N.replaceAll(this.suffix,J===k.length-1?"":" "))}}class bt extends xe{decode_chain(k){let N="";for(let J=1;J<k.length;J+=2)N+=k[J];return[N]}}class Mr extends X{constructor(k){super(),this.addPrefixSpace=k.add_prefix_space,this.replacement=k.replacement,this.strRep=k.str_rep||this.replacement,this.prepend_scheme=k.prepend_scheme??"always"}pre_tokenize_text(k,{section_index:N=void 0}={}){let J=k.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!J.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&N===0)&&(J=this.strRep+J),[J]}}class Pr extends xe{constructor(k){super(k),this.addPrefixSpace=k.add_prefix_space,this.replacement=k.replacement}decode_chain(k){const N=[];for(let J=0;J<k.length;++J){let ae=k[J].replaceAll(this.replacement," ");this.addPrefixSpace&&J==0&&ae.startsWith(" ")&&(ae=ae.substring(1)),N.push(ae)}return N}}class jr extends ne{constructor(k){super(k),this.charsmap=k.precompiled_charsmap}normalize(k){return k=k.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),k=k.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),k.includes("～")?k=k.split("～").map(J=>J.normalize("NFKC")).join("～"):k=k.normalize("NFKC"),k}}class as extends X{constructor(k){super(),this.tokenizers=k.pretokenizers.map(N=>X.fromConfig(N))}pre_tokenize_text(k,N){return this.tokenizers.reduce((J,ae)=>ae.pre_tokenize(J,N),[k])}}class Qt extends X{constructor(k){super()}pre_tokenize_text(k,N){return k.match(/\w+|[^\w\s]+/g)||[]}}class Cr extends X{constructor(k){super()}pre_tokenize_text(k,N){return v(k)}}class Hs extends X{constructor(k){super(),this.config=k,this.pattern=_(this.config.pattern),this.content=this.config.content}pre_tokenize_text(k,N){return this.pattern===null?[k]:[k.replaceAll(this.pattern,this.config.content)]}}const qs=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Qs(pe,k,N,J){for(const ae of Object.keys(pe)){const de=k-pe[ae].length,Ee=N(ae),Ne=new Array(de).fill(Ee);pe[ae]=J==="right"?(0,i.mergeArrays)(pe[ae],Ne):(0,i.mergeArrays)(Ne,pe[ae])}}function Xs(pe,k){for(const N of Object.keys(pe))pe[N].length=k}class ht extends s.Callable{constructor(N,J){super();Y(this,"return_token_type_ids",!1);Y(this,"padding_side","right");this.config=J,this.normalizer=ne.fromConfig(N.normalizer),this.pre_tokenizer=X.fromConfig(N.pre_tokenizer),this.model=G.fromConfig(N.model,J),this.post_processor=be.fromConfig(N.post_processor),this.decoder=xe.fromConfig(N.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ae of N.added_tokens){const de=new L(ae);this.added_tokens.push(de),this.model.tokens_to_ids.set(de.content,de.id),this.model.vocab[de.id]=de.content,de.special&&(this.special_tokens.push(de.content),this.all_special_ids.push(de.id))}if(this.additional_special_tokens=J.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(ae=>ae.content)),this.added_tokens_map=new Map(this.added_tokens.map(ae=>[ae.content,ae])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=J.model_max_length,this.remove_space=J.remove_space,this.clean_up_tokenization_spaces=J.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=J.do_lowercase_and_remove_accent??!1,J.padding_side&&(this.padding_side=J.padding_side),this.add_bos_token=J.add_bos_token,this.add_eos_token=J.add_eos_token,this.legacy=!1,this.chat_template=J.chat_template??null,Array.isArray(this.chat_template)){const ae=Object.create(null);for(const{name:de,template:Ee}of this.chat_template){if(typeof de!="string"||typeof Ee!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ae[de]=Ee}this.chat_template=ae}this._compiled_template_cache=new Map}getToken(...N){for(const J of N){const ae=this.config[J];if(ae)if(typeof ae=="object"){if(ae.__type==="AddedToken")return ae.content;throw Error(`Unknown token: ${ae}`)}else return ae}return null}static async from_pretrained(N,{progress_callback:J=null,config:ae=null,cache_dir:de=null,local_files_only:Ee=!1,revision:Ne="main",legacy:qe=null}={}){const We=await d(N,{progress_callback:J,config:ae,cache_dir:de,local_files_only:Ee,revision:Ne,legacy:qe});return new this(...We)}_call(N,{text_pair:J=null,add_special_tokens:ae=!0,padding:de=!1,truncation:Ee=null,max_length:Ne=null,return_tensor:qe=!0,return_token_type_ids:We=null}={}){const tt=Array.isArray(N);let Mt;if(tt){if(N.length===0)throw Error("text array must be non-empty");if(J!==null){if(Array.isArray(J)){if(N.length!==J.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Mt=N.map((Lt,nr)=>this._encode_plus(Lt,{text_pair:J[nr],add_special_tokens:ae,return_token_type_ids:We}))}else Mt=N.map(Lt=>this._encode_plus(Lt,{add_special_tokens:ae,return_token_type_ids:We}))}else{if(N==null)throw Error("text may not be null or undefined");if(Array.isArray(J))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Mt=[this._encode_plus(N,{text_pair:J,add_special_tokens:ae,return_token_type_ids:We})]}if(Ne===null?Ne=this.model_max_length:Ee===null&&(de===!0?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),Ne=this.model_max_length):de===!1&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),Ee=!0)),de===!0&&(Ne=Math.min((0,o.max)(Mt.map(Lt=>Lt.input_ids.length))[0],Ne??1/0)),Ne=Math.min(Ne,this.model_max_length??1/0),de||Ee)for(let Lt=0;Lt<Mt.length;++Lt)Mt[Lt].input_ids.length!==Ne&&(Mt[Lt].input_ids.length>Ne?Ee&&Xs(Mt[Lt],Ne):de&&Qs(Mt[Lt],Ne,nr=>nr==="input_ids"?this.pad_token_id:0,this.padding_side));const Rt={};if(qe){if(!(de&&Ee)&&Mt.some(nr=>{var Gt;for(const _r of Object.keys(nr))if(nr[_r].length!==((Gt=Mt[0][_r])==null?void 0:Gt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const Lt=[Mt.length,Mt[0].input_ids.length];for(const nr of Object.keys(Mt[0]))Rt[nr]=new a.Tensor("int64",BigInt64Array.from(Mt.flatMap(Gt=>Gt[nr]).map(BigInt)),Lt)}else{for(const Lt of Object.keys(Mt[0]))Rt[Lt]=Mt.map(nr=>nr[Lt]);if(!tt)for(const Lt of Object.keys(Rt))Rt[Lt]=Rt[Lt][0]}return Rt}_encode_text(N){if(N===null)return null;const J=this.added_tokens_splitter.split(N);for(let de=0;de<J.length;++de){const Ee=this.added_tokens_map.get(J[de]);Ee&&(Ee.lstrip&&de>0&&(J[de-1]=J[de-1].trimEnd()),Ee.rstrip&&de<J.length-1&&(J[de+1]=J[de+1].trimStart()))}return J.flatMap((de,Ee)=>{if(de.length===0)return[];if(this.added_tokens_map.has(de))return[de];if(this.remove_space===!0&&(de=de.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(de=w(de)),this.normalizer!==null&&(de=this.normalizer(de)),de.length===0)return[];const Ne=this.pre_tokenizer!==null?this.pre_tokenizer(de,{section_index:Ee}):[de];return this.model(Ne)})}_encode_plus(N,{text_pair:J=null,add_special_tokens:ae=!0,return_token_type_ids:de=null}={}){const{tokens:Ee,token_type_ids:Ne}=this._tokenize_helper(N,{pair:J,add_special_tokens:ae}),qe=this.model.convert_tokens_to_ids(Ee),We={input_ids:qe,attention_mask:new Array(qe.length).fill(1)};return(de??this.return_token_type_ids)&&Ne&&(We.token_type_ids=Ne),We}_tokenize_helper(N,{pair:J=null,add_special_tokens:ae=!1}={}){const de=this._encode_text(N),Ee=this._encode_text(J);return this.post_processor?this.post_processor(de,Ee,{add_special_tokens:ae}):{tokens:(0,i.mergeArrays)(de??[],Ee??[])}}tokenize(N,{pair:J=null,add_special_tokens:ae=!1}={}){return this._tokenize_helper(N,{pair:J,add_special_tokens:ae}).tokens}encode(N,{text_pair:J=null,add_special_tokens:ae=!0,return_token_type_ids:de=null}={}){return this._encode_plus(N,{text_pair:J,add_special_tokens:ae,return_token_type_ids:de}).input_ids}batch_decode(N,J={}){return N instanceof a.Tensor&&(N=N.tolist()),N.map(ae=>this.decode(ae,J))}decode(N,J={}){if(N instanceof a.Tensor&&(N=b(N)),!Array.isArray(N)||N.length===0||!(0,i.isIntegralNumber)(N[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(N,J)}decode_single(N,{skip_special_tokens:J=!1,clean_up_tokenization_spaces:ae=null}){let de=this.model.convert_ids_to_tokens(N);J&&(de=de.filter(Ne=>!this.special_tokens.includes(Ne)));let Ee=this.decoder?this.decoder(de):de.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Ee=Ee.replaceAll(this.decoder.end_of_word_suffix," "),J&&(Ee=Ee.trim())),(ae??this.clean_up_tokenization_spaces)&&(Ee=A(Ee)),Ee}get_chat_template({chat_template:N=null,tools:J=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ae=this.chat_template;if(N!==null&&Object.hasOwn(ae,N))N=ae[N];else if(N===null)if(J!==null&&"tool_use"in ae)N=ae.tool_use;else if("default"in ae)N=ae.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ae).sort()}.`)}else if(N===null)if(this.chat_template)N=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return N}apply_chat_template(N,{tools:J=null,documents:ae=null,chat_template:de=null,add_generation_prompt:Ee=!1,tokenize:Ne=!0,padding:qe=!1,truncation:We=!1,max_length:tt=null,return_tensor:Mt=!0,return_dict:Rt=!1,tokenizer_kwargs:Lt={},...nr}={}){if(de=this.get_chat_template({chat_template:de,tools:J}),typeof de!="string")throw Error(`chat_template must be a string, but got ${typeof de}`);let Gt=this._compiled_template_cache.get(de);Gt===void 0&&(Gt=new c.Template(de),this._compiled_template_cache.set(de,Gt));const _r=Object.create(null);for(const or of qs){const gr=this.getToken(or);gr&&(_r[or]=gr)}const yr=Gt.render({messages:N,add_generation_prompt:Ee,tools:J,documents:ae,..._r,...nr});if(Ne){const or=this._call(yr,{add_special_tokens:!1,padding:qe,truncation:We,max_length:tt,return_tensor:Mt,...Lt});return Rt?or:or.input_ids}return yr}}class As extends ht{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class ks extends ht{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class $t extends ht{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class Xt extends ht{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class S extends ht{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class Q extends ht{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class B extends ht{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class q extends ht{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class re extends ht{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class ge extends ht{}class Fe extends ht{}class rt extends ht{constructor(N,J){super(N,J);Y(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class gt extends ht{constructor(){super(...arguments);Y(this,"return_token_type_ids",!0)}}class mt extends ht{}class xt extends ht{}class st extends ht{}class Bt extends ht{constructor(k,N){super(k,N),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)),this.lang_to_token=J=>J}_build_translation_inputs(k,N,J){return Or(this,k,N,J)}}class Vt extends Bt{}class Nr extends ht{}class Qr extends ht{}const sr="▁";class $r extends ht{constructor(N,J){super(N,J);Y(this,"padding_side","left");this.legacy=J.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Mr({replacement:sr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(N){if(N===null)return null;if(this.legacy||N.length===0)return super._encode_text(N);let J=super._encode_text(sr+N.replaceAll(sr," "));return J.length>1&&J[0]===sr&&this.special_tokens.includes(J[1])&&(J=J.slice(1)),J}}class Sr extends ht{}class Vr extends ht{}class ls extends ht{}class Ar extends ht{}class Is extends ht{}class Fs extends ht{}class Ur extends ht{}class Wr extends ht{}class es extends ht{}function Or(pe,k,N,J){if(!("language_codes"in pe)||!Array.isArray(pe.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in pe)||!(pe.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in pe)||typeof pe.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const ae=J.src_lang,de=J.tgt_lang;if(!pe.language_codes.includes(de))throw new Error(`Target language code "${de}" is not valid. Must be one of: {${pe.language_codes.join(", ")}}`);if(ae!==void 0){if(!pe.language_codes.includes(ae))throw new Error(`Source language code "${ae}" is not valid. Must be one of: {${pe.language_codes.join(", ")}}`);for(const Ee of pe.post_processor.config.single)if("SpecialToken"in Ee&&pe.languageRegex.test(Ee.SpecialToken.id)){Ee.SpecialToken.id=pe.lang_to_token(ae);break}}return J.forced_bos_token_id=pe.model.convert_tokens_to_ids([pe.lang_to_token(de)])[0],pe._call(k,N)}class ms extends ht{constructor(k,N){super(k,N),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)),this.lang_to_token=J=>J}_build_translation_inputs(k,N,J){return Or(this,k,N,J)}}class hr extends ht{constructor(k,N){super(k,N),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(J=>this.languageRegex.test(J)).map(J=>J.slice(2,-2)),this.lang_to_token=J=>`__${J}__`}_build_translation_inputs(k,N,J){return Or(this,k,N,J)}}class fr extends ht{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(k,{return_timestamps:N=!1,return_language:J=!1,time_precision:ae=null,force_full_sequences:de=!0}={}){if(ae===null)throw Error("Must specify time_precision");let Ee=null;const Ne=N==="word";function qe(){return{language:Ee,timestamp:[null,null],text:""}}const We=[];let tt=qe(),Mt=0;const Rt=this.timestamp_begin,nr=Rt+1500;let Gt=[],_r=[],yr=!1,or=null;const gr=new Set(this.all_special_ids);for(const Zt of k){const wr=Zt.tokens,Kr=Ne?Zt.token_timestamps:null;let Br=null,gs=Rt;if("stride"in Zt){const[ur,ar,mr]=Zt.stride;if(Mt-=ar,or=ur-mr,ar&&(gs=ar/ae+Rt),mr)for(let ir=wr.length-1;ir>=0;--ir){const Hr=Number(wr[ir]);if(Hr>=Rt){if(Br!==null&&(Hr-Rt)*ae<or)break;Br=Hr}}}let kr=[],cs=[];for(let ur=0;ur<wr.length;++ur){const ar=Number(wr[ur]);if(gr.has(ar)){const mr=this.decode([ar]),ir=p.WHISPER_LANGUAGE_MAPPING.get(mr.slice(2,-2));if(ir!==void 0){if(Ee!==null&&ir!==Ee&&!N){Gt.push(kr);const Hr=this.findLongestCommonSequence(Gt)[0],Ns=this.decode(Hr);tt.text=Ns,We.push(tt),Gt=[],kr=[],tt=qe()}Ee=tt.language=ir}}else if(ar>=Rt&&ar<=nr){const mr=(ar-Rt)*ae+Mt,ir=(0,o.round)(mr,2);if(Br!==null&&ar>=Br)yr=!0;else if(yr||Gt.length>0&&ar<gs)yr=!1;else if(tt.timestamp[0]===null)tt.timestamp[0]=ir;else if(ir!==tt.timestamp[0]){tt.timestamp[1]=ir,Gt.push(kr),Ne&&_r.push(cs);const[Hr,Ns]=this.findLongestCommonSequence(Gt,_r),Vn=this.decode(Hr);tt.text=Vn,Ne&&(tt.words=this.collateWordTimestamps(Hr,Ns,Ee)),We.push(tt),Gt=[],kr=[],_r=[],cs=[],tt=qe()}}else if(kr.push(ar),Ne){let mr=(0,o.round)(Kr[ur]+Mt,2),ir;if(ur+1<Kr.length){ir=(0,o.round)(Kr[ur+1]+Mt,2);const Hr=this.decode([ar]);x.test(Hr)&&(ir=(0,o.round)(Math.min(mr+ae,ir),2))}else ir=null;cs.push([mr,ir])}}if("stride"in Zt){const[ur,ar,mr]=Zt.stride;Mt+=ur-mr}kr.length>0?(Gt.push(kr),Ne&&_r.push(cs)):Gt.every(ur=>ur.length===0)&&(tt=qe(),Gt=[],kr=[],_r=[],cs=[])}if(Gt.length>0){if(de&&N)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Zt,wr]=this.findLongestCommonSequence(Gt,_r),Kr=this.decode(Zt);tt.text=Kr,Ne&&(tt.words=this.collateWordTimestamps(Zt,wr,Ee)),We.push(tt)}let Lr=Object.create(null);const Yr=We.map(Zt=>Zt.text).join("");if(N||J){for(let Zt=0;Zt<We.length;++Zt){const wr=We[Zt];N||delete wr.timestamp,J||delete wr.language}if(Ne){const Zt=[];for(const wr of We)for(const Kr of wr.words)Zt.push(Kr);Lr={chunks:Zt}}else Lr={chunks:We}}return[Yr,Lr]}findLongestCommonSequence(k,N=null){let J=k[0],ae=J.length,de=[];const Ee=Array.isArray(N)&&N.length>0;let Ne=Ee?[]:null,qe=Ee?N[0]:null;for(let We=1;We<k.length;++We){const tt=k[We];let Mt=0,Rt=[ae,ae,0,0];const Lt=tt.length;for(let Lr=1;Lr<ae+Lt;++Lr){const Yr=Math.max(0,ae-Lr),Zt=Math.min(ae,ae+Lt-Lr),wr=J.slice(Yr,Zt),Kr=Math.max(0,Lr-ae),Br=Math.min(Lt,Lr),gs=tt.slice(Kr,Br);if(wr.length!==gs.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let kr;Ee?kr=wr.filter((ar,mr)=>ar===gs[mr]&&qe[Yr+mr]<=N[We][Kr+mr]).length:kr=wr.filter((ar,mr)=>ar===gs[mr]).length;const cs=Lr/1e4,ur=kr/Lr+cs;kr>1&&ur>Mt&&(Mt=ur,Rt=[Yr,Zt,Kr,Br])}const[nr,Gt,_r,yr]=Rt,or=Math.floor((Gt+nr)/2),gr=Math.floor((yr+_r)/2);de.push(...J.slice(0,or)),J=tt.slice(gr),ae=J.length,Ee&&(Ne.push(...qe.slice(0,or)),qe=N[We].slice(gr))}return de.push(...J),Ee?(Ne.push(...qe),[de,Ne]):[de,[]]}collateWordTimestamps(k,N,J){const[ae,de,Ee]=this.combineTokensIntoWords(k,J),Ne=[];for(let qe=0;qe<ae.length;++qe){const We=Ee[qe];Ne.push({text:ae[qe],timestamp:[N[We.at(0)][0],N[We.at(-1)][1]]})}return Ne}combineTokensIntoWords(k,N,J=`"'“¡¿([{-`,ae=`"'.。,，!！?？:：”)]}、`){N=N??"english";let de,Ee,Ne;return["chinese","japanese","thai","lao","myanmar"].includes(N)?[de,Ee,Ne]=this.splitTokensOnUnicode(k):[de,Ee,Ne]=this.splitTokensOnSpaces(k),this.mergePunctuations(de,Ee,Ne,J,ae)}decode(k,N){let J;return N!=null&&N.decode_with_timestamps?(k instanceof a.Tensor&&(k=b(k)),J=this.decodeWithTimestamps(k,N)):J=super.decode(k,N),J}decodeWithTimestamps(k,N){const J=(N==null?void 0:N.time_precision)??.02,ae=Array.from(this.all_special_ids).at(-1)+1;let de=[[]];for(let Ee of k)if(Ee=Number(Ee),Ee>=ae){const Ne=((Ee-ae)*J).toFixed(2);de.push(`<|${Ne}|>`),de.push([])}else de[de.length-1].push(Ee);return de=de.map(Ee=>typeof Ee=="string"?Ee:super.decode(Ee,N)),de.join("")}splitTokensOnUnicode(k){const N=this.decode(k,{decode_with_timestamps:!0}),J="�",ae=[],de=[],Ee=[];let Ne=[],qe=[],We=0;for(let tt=0;tt<k.length;++tt){const Mt=k[tt];Ne.push(Mt),qe.push(tt);const Rt=this.decode(Ne,{decode_with_timestamps:!0});(!Rt.includes(J)||N[We+Rt.indexOf(J)]===J)&&(ae.push(Rt),de.push(Ne),Ee.push(qe),Ne=[],qe=[],We+=Rt.length)}return[ae,de,Ee]}splitTokensOnSpaces(k){const[N,J,ae]=this.splitTokensOnUnicode(k),de=[],Ee=[],Ne=[],qe=new RegExp(`^[${T}]$`,"gu");for(let We=0;We<N.length;++We){const tt=N[We],Mt=J[We],Rt=ae[We],Lt=Mt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),nr=tt.startsWith(" "),Gt=tt.trim(),_r=qe.test(Gt);if(Lt||nr||_r||de.length===0)de.push(tt),Ee.push(Mt),Ne.push(Rt);else{const yr=de.length-1;de[yr]+=tt,Ee[yr].push(...Mt),Ne[yr].push(...Rt)}}return[de,Ee,Ne]}mergePunctuations(k,N,J,ae,de){const Ee=structuredClone(k),Ne=structuredClone(N),qe=structuredClone(J);let We=Ee.length-2,tt=Ee.length-1;for(;We>=0;)Ee[We].startsWith(" ")&&ae.includes(Ee[We].trim())?(Ee[tt]=Ee[We]+Ee[tt],Ne[tt]=(0,i.mergeArrays)(Ne[We],Ne[tt]),qe[tt]=(0,i.mergeArrays)(qe[We],qe[tt]),Ee[We]="",Ne[We]=[],qe[We]=[]):tt=We,--We;for(We=0,tt=1;tt<Ee.length;)!Ee[We].endsWith(" ")&&de.includes(Ee[tt])?(Ee[We]+=Ee[tt],Ne[We]=(0,i.mergeArrays)(Ne[We],Ne[tt]),qe[We]=(0,i.mergeArrays)(qe[We],qe[tt]),Ee[tt]="",Ne[tt]=[],qe[tt]=[]):We=tt,++tt;return[Ee.filter(Mt=>Mt),Ne.filter(Mt=>Mt.length>0),qe.filter(Mt=>Mt.length>0)]}}class Xr extends ht{}class Bs extends ht{}class Gr extends ht{}class Be extends ht{constructor(k,N){super(k,N),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(J=>this.languageRegex.test(J)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(k){if(k===null)return null;const[N,...J]=k.trim().split(this.languageRegex);if(J.length===0)return super._encode_text(N);if(J.length===2){const[ae,de]=J;return this.supported_language_codes.includes(ae)||console.warn(`Unsupported language code "${ae}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,i.mergeArrays)([ae],super._encode_text(de))}}}class je extends ht{}class et extends ht{}class Yt extends ht{}class Rs extends ht{}class fs extends ht{}class js extends ht{constructor(k,N){super(k,N),this.decoder=new bt({})}}class _s extends ht{}class dn extends ht{}class pn extends ht{}class hn{static async from_pretrained(k,{progress_callback:N=null,config:J=null,cache_dir:ae=null,local_files_only:de=!1,revision:Ee="main",legacy:Ne=null}={}){var Rt;const[qe,We]=await d(k,{progress_callback:N,config:J,cache_dir:ae,local_files_only:de,revision:Ee,legacy:Ne}),tt=((Rt=We.tokenizer_class)==null?void 0:Rt.replace(/Fast$/,""))??"PreTrainedTokenizer";let Mt=this.TOKENIZER_CLASS_MAPPING[tt];return Mt||(console.warn(`Unknown tokenizer class "${tt}", attempting to construct from base class.`),Mt=ht),new Mt(qe,We)}}Y(hn,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:mt,DistilBertTokenizer:ge,CamembertTokenizer:Fe,DebertaTokenizer:S,DebertaV2Tokenizer:Q,BertTokenizer:As,HerbertTokenizer:B,ConvBertTokenizer:q,RoFormerTokenizer:re,XLMTokenizer:rt,ElectraTokenizer:gt,MobileBertTokenizer:$t,SqueezeBertTokenizer:Xt,AlbertTokenizer:ks,GPT2Tokenizer:xt,BartTokenizer:st,MBartTokenizer:Bt,MBart50Tokenizer:Vt,RobertaTokenizer:Nr,WhisperTokenizer:fr,CodeGenTokenizer:Xr,CLIPTokenizer:Bs,SiglipTokenizer:Gr,MarianTokenizer:Be,BloomTokenizer:Qr,NllbTokenizer:ms,M2M100Tokenizer:hr,LlamaTokenizer:$r,CodeLlamaTokenizer:Sr,XLMRobertaTokenizer:Vr,MPNetTokenizer:ls,FalconTokenizer:Ar,GPTNeoXTokenizer:Is,EsmTokenizer:Fs,Wav2Vec2CTCTokenizer:je,BlenderbotTokenizer:et,BlenderbotSmallTokenizer:Yt,SpeechT5Tokenizer:Rs,NougatTokenizer:fs,VitsTokenizer:js,Qwen2Tokenizer:Ur,GemmaTokenizer:Wr,Grok1Tokenizer:es,CohereTokenizer:_s,MgpstrTokenizer:dn,Ernie4_5_Tokenizer:pn,PreTrainedTokenizer:ht})},"./src/utils/audio.js":(e,r,t)=>{t.r(r),t.d(r,{RawAudio:()=>K,hamming:()=>u,hanning:()=>d,mel_filter_bank:()=>$,read_audio:()=>c,spectrogram:()=>P,window_function:()=>D});var s=t("./src/utils/hub.js"),i=t("./src/utils/maths.js"),n=t("./src/utils/core.js"),o=t("./src/env.js"),a=t("./src/utils/tensor.js"),l=t("?7992");async function c(R,te){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const H=await(await(0,s.getFile)(R)).arrayBuffer(),ee=new AudioContext({sampleRate:te});typeof te>"u"&&console.warn(`No sampling rate provided, using default of ${ee.sampleRate}Hz.`);const Z=await ee.decodeAudioData(H);let ne;if(Z.numberOfChannels===2){const me=Math.sqrt(2),ue=Z.getChannelData(0),j=Z.getChannelData(1);ne=new Float32Array(ue.length);for(let F=0;F<Z.length;++F)ne[F]=me*(ue[F]+j[F])/2}else ne=Z.getChannelData(0);return ne}function p(R,te){if(R<1)return new Float64Array;if(R===1)return new Float64Array([1]);const H=1-te,ee=2*Math.PI/(R-1),Z=new Float64Array(R);for(let ne=0;ne<R;++ne)Z[ne]=te-H*Math.cos(ne*ee);return Z}function d(R){return p(R,.5)}function u(R){return p(R,.54)}const _={htk:R=>2595*Math.log10(1+R/700),kaldi:R=>1127*Math.log(1+R/700),slaney:(R,te=1e3,H=15,ee=27/Math.log(6.4))=>R>=te?H+Math.log(R/te)*ee:3*R/200};function f(R,te="htk"){const H=_[te];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof R=="number"?H(R):R.map(ee=>H(ee))}const b={htk:R=>700*(10**(R/2595)-1),kaldi:R=>700*(Math.exp(R/1127)-1),slaney:(R,te=1e3,H=15,ee=Math.log(6.4)/27)=>R>=H?te*Math.exp(ee*(R-H)):200*R/3};function A(R,te="htk"){const H=b[te];if(!H)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof R=="number"?H(R):R.map(ee=>H(ee))}function g(R,te){const H=Float64Array.from({length:te.length-1},(me,ue)=>te[ue+1]-te[ue]),ee=Array.from({length:R.length},()=>new Array(te.length));for(let me=0;me<R.length;++me){const ue=ee[me];for(let j=0;j<te.length;++j)ue[j]=te[j]-R[me]}const Z=te.length-2,ne=Array.from({length:Z},()=>new Array(R.length));for(let me=0;me<R.length;++me){const ue=ee[me];for(let j=0;j<Z;++j){const F=-ue[j]/H[j],U=ue[j+2]/H[j+1];ne[j][me]=Math.max(0,Math.min(F,U))}}return ne}function w(R,te,H){const ee=(te-R)/(H-1);return Float64Array.from({length:H},(Z,ne)=>R+ee*ne)}function $(R,te,H,ee,Z,ne=null,me="htk",ue=!1){if(ne!==null&&ne!=="slaney")throw new Error('norm must be one of null or "slaney"');if(R<2)throw new Error(`Require num_frequency_bins: ${R} >= 2`);if(H>ee)throw new Error(`Require min_frequency: ${H} <= max_frequency: ${ee}`);const j=f(H,me),F=f(ee,me),U=w(j,F,te+2);let se=A(U,me),fe;if(ue){const Te=Z/((R-1)*2);fe=f(Float64Array.from({length:R},(Re,He)=>He*Te),me),se=U}else fe=w(0,Math.floor(Z/2),R);const oe=g(fe,se);if(ne!==null&&ne==="slaney")for(let Te=0;Te<te;++Te){const Re=oe[Te],He=2/(se[Te+2]-se[Te]);for(let Me=0;Me<R;++Me)Re[Me]*=He}return oe}function y(R,te,H){const ee=new R.constructor(R.length+te+H),Z=R.length-1;for(let ne=0;ne<R.length;++ne)ee[te+ne]=R[ne];for(let ne=1;ne<=te;++ne)ee[te-ne]=R[(0,n.calculateReflectOffset)(ne,Z)];for(let ne=1;ne<=H;++ne)ee[Z+te+ne]=R[(0,n.calculateReflectOffset)(Z-ne,Z)];return ee}function v(R,te,H,ee,Z){if(H<=0)throw new Error("reference must be greater than zero");if(ee<=0)throw new Error("min_value must be greater than zero");H=Math.max(ee,H);const ne=Math.log10(H);for(let me=0;me<R.length;++me)R[me]=te*Math.log10(Math.max(ee,R[me])-ne);if(Z!==null){if(Z<=0)throw new Error("db_range must be greater than zero");const me=(0,i.max)(R)[0]-Z;for(let ue=0;ue<R.length;++ue)R[ue]=Math.max(R[ue],me)}return R}function T(R,te=1,H=1e-5,ee=null){return v(R,20,te,H,ee)}function x(R,te=1,H=1e-10,ee=null){return v(R,10,te,H,ee)}async function P(R,te,H,ee,{fft_length:Z=null,power:ne=1,center:me=!0,pad_mode:ue="reflect",onesided:j=!0,preemphasis:F=null,preemphasis_htk_flavor:U=!0,mel_filters:se=null,mel_floor:fe=1e-10,log_mel:oe=null,reference:Te=1,min_value:Re=1e-10,db_range:He=null,remove_dc_offset:Me=null,min_num_frames:X=null,max_num_frames:le=null,do_pad:W=!0,transpose:ye=!1}={}){const ke=te.length;if(Z===null&&(Z=H),H>Z)throw Error(`frame_length (${H}) may not be larger than fft_length (${Z})`);if(ke!==H)throw new Error(`Length of the window (${ke}) must equal frame_length (${H})`);if(ee<=0)throw new Error("hop_length must be greater than zero");if(ne===null&&se!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!U)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(me){if(ue!=="reflect")throw new Error(`pad_mode="${ue}" not implemented yet.`);const Ye=Math.floor((Z-1)/2)+1;R=y(R,Ye,Ye)}let Pe=Math.floor(1+Math.floor((R.length-H)/ee));X!==null&&Pe<X&&(Pe=X);const be=j?Math.floor(Z/2)+1:Z;let Se=Pe,we=Pe;le!==null&&(le>Pe?W&&(we=le):we=Se=le);const Ie=new i.FFT(Z),ze=new Float64Array(Z),Qe=new Float64Array(Ie.outputBufferSize),xe=new Float32Array(be*we);for(let Ye=0;Ye<Se;++Ye){const De=Ye*ee,Je=Math.min(R.length-De,H);Je!==H&&ze.fill(0,0,H);for(let it=0;it<Je;++it)ze[it]=R[De+it];if(Me){let it=0;for(let St=0;St<Je;++St)it+=ze[St];const It=it/Je;for(let St=0;St<Je;++St)ze[St]-=It}if(F!==null){for(let it=Je-1;it>=1;--it)ze[it]-=F*ze[it-1];ze[0]*=1-F}for(let it=0;it<te.length;++it)ze[it]*=te[it];Ie.realTransform(Qe,ze);for(let it=0;it<be;++it){const It=it<<1;xe[it*we+Ye]=Qe[It]**2+Qe[It+1]**2}}if(ne!==null&&ne!==2){const Ye=ne/2;for(let De=0;De<xe.length;++De)xe[De]**=Ye}const Ze=se.length;let Ge=await(0,a.matmul)(new a.Tensor("float32",se.flat(),[Ze,be]),new a.Tensor("float32",xe,[be,we]));ye&&(Ge=Ge.transpose(1,0));const nt=Ge.data;for(let Ye=0;Ye<nt.length;++Ye)nt[Ye]=Math.max(fe,nt[Ye]);if(ne!==null&&oe!==null){const Ye=Math.min(nt.length,Se*Ze);switch(oe){case"log":for(let De=0;De<Ye;++De)nt[De]=Math.log(nt[De]);break;case"log10":for(let De=0;De<Ye;++De)nt[De]=Math.log10(nt[De]);break;case"dB":if(ne===1)T(nt,Te,Re,He);else if(ne===2)x(nt,Te,Re,He);else throw new Error(`Cannot use log_mel option '${oe}' with power ${ne}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${oe}'`)}}return Ge}function D(R,te,{periodic:H=!0,frame_length:ee=null,center:Z=!0}={}){const ne=H?R+1:R;let me;switch(te){case"boxcar":me=new Float64Array(ne).fill(1);break;case"hann":case"hann_window":me=d(ne);break;case"hamming":me=u(ne);break;case"povey":me=d(ne).map(ue=>Math.pow(ue,.85));break;default:throw new Error(`Unknown window type ${te}.`)}if(H&&(me=me.subarray(0,R)),ee===null)return me;if(R>ee)throw new Error(`Length of the window (${R}) may not be larger than frame_length (${ee})`);return me}function L(R,te){let H=44;const ee=new ArrayBuffer(H+R.length*4),Z=new DataView(ee);G(Z,0,"RIFF"),Z.setUint32(4,36+R.length*4,!0),G(Z,8,"WAVE"),G(Z,12,"fmt "),Z.setUint32(16,16,!0),Z.setUint16(20,3,!0),Z.setUint16(22,1,!0),Z.setUint32(24,te,!0),Z.setUint32(28,te*4,!0),Z.setUint16(32,4,!0),Z.setUint16(34,32,!0),G(Z,36,"data"),Z.setUint32(40,R.length*4,!0);for(let ne=0;ne<R.length;++ne,H+=4)Z.setFloat32(H,R[ne],!0);return ee}function G(R,te,H){for(let ee=0;ee<H.length;++ee)R.setUint8(te+ee,H.charCodeAt(ee))}class K{constructor(te,H){this.audio=te,this.sampling_rate=H}toWav(){return L(this.audio,this.sampling_rate)}toBlob(){const te=this.toWav();return new Blob([te],{type:"audio/wav"})}async save(te){let H;if(o.apis.IS_BROWSER_ENV){if(o.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");H=n.saveBlob}else if(o.apis.IS_FS_AVAILABLE)H=async(ee,Z)=>{let ne=await Z.arrayBuffer();l.writeFileSync(ee,Buffer.from(ne))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await H(te,this.toBlob())}}},"./src/utils/constants.js":(e,r,t)=>{t.r(r),t.d(r,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>i,FEATURE_EXTRACTOR_NAME:()=>n,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>o,PROCESSOR_NAME:()=>a});const s="https://github.com/huggingface/transformers.js/issues/new/choose",i="config.json",n="preprocessor_config.json",o=n,a="processor_config.json",l="chat_template.jinja",c="generation_config.json"},"./src/utils/core.js":(e,r,t)=>{t.r(r),t.d(r,{calculateDimensions:()=>c,calculateReflectOffset:()=>_,count:()=>g,dispatchCallback:()=>s,escapeRegExp:()=>n,isIntegralNumber:()=>a,isNullishDimension:()=>l,isTypedArray:()=>o,len:()=>A,mergeArrays:()=>d,pick:()=>b,pop:()=>p,product:()=>u,reverseDictionary:()=>i,saveBlob:()=>f});function s(w,$){w&&w($)}function i(w){return Object.fromEntries(Object.entries(w).map(([$,y])=>[y,$]))}function n(w){return w.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function o(w){var $,y,v;return((v=(y=($=w==null?void 0:w.prototype)==null?void 0:$.__proto__)==null?void 0:y.constructor)==null?void 0:v.name)==="TypedArray"}function a(w){return Number.isInteger(w)||typeof w=="bigint"}function l(w){return w==null||w===-1}function c(w){const $=[];let y=w;for(;Array.isArray(y);)$.push(y.length),y=y[0];return $}function p(w,$,y=void 0){const v=w[$];if(v!==void 0)return delete w[$],v;if(y===void 0)throw Error(`Key ${$} does not exist in object.`);return y}function d(...w){return Array.prototype.concat.apply([],w)}function u(...w){return w.reduce(($,y)=>$.flatMap(v=>y.map(T=>[v,T])))}function _(w,$){return Math.abs((w+$)%(2*$)-$)}function f(w,$){const y=URL.createObjectURL($),v=document.createElement("a");v.href=y,v.download=w,v.click(),v.remove(),URL.revokeObjectURL(y)}function b(w,$){return Object.assign({},...$.map(y=>{if(w[y]!==void 0)return{[y]:w[y]}}))}function A(w){let $=0;for(const y of w)++$;return $}function g(w,$){let y=0;for(const v of w)v===$&&++y;return y}},"./src/utils/data-structures.js":(e,r,t)=>{t.r(r),t.d(r,{CharTrie:()=>i,DictionarySplitter:()=>l,LRUCache:()=>c,PriorityQueue:()=>s,TokenLattice:()=>o});class s{constructor(d=(_,f)=>_>f,u=1/0){this._heap=[],this._comparator=d,this._maxSize=u}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...d){return this.extend(d)}extend(d){for(const u of d)if(this.size<this._maxSize)this._heap.push(u),this._siftUp();else{const _=this._smallest();this._comparator(u,this._heap[_])&&(this._heap[_]=u,this._siftUpFrom(_))}return this.size}pop(){const d=this.peek(),u=this.size-1;return u>0&&this._swap(0,u),this._heap.pop(),this._siftDown(),d}replace(d){const u=this.peek();return this._heap[0]=d,this._siftDown(),u}_parent(d){return(d+1>>>1)-1}_left(d){return(d<<1)+1}_right(d){return d+1<<1}_greater(d,u){return this._comparator(this._heap[d],this._heap[u])}_swap(d,u){const _=this._heap[d];this._heap[d]=this._heap[u],this._heap[u]=_}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(d){for(;d>0&&this._greater(d,this._parent(d));)this._swap(d,this._parent(d)),d=this._parent(d)}_siftDown(){let d=0;for(;this._left(d)<this.size&&this._greater(this._left(d),d)||this._right(d)<this.size&&this._greater(this._right(d),d);){const u=this._right(d)<this.size&&this._greater(this._right(d),this._left(d))?this._right(d):this._left(d);this._swap(d,u),d=u}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class i{constructor(){this.root=n.default()}extend(d){for(const u of d)this.push(u)}push(d){let u=this.root;for(const _ of d){let f=u.children.get(_);f===void 0&&(f=n.default(),u.children.set(_,f)),u=f}u.isLeaf=!0}*commonPrefixSearch(d){let u=this.root;if(u===void 0)return;let _="";for(const f of d){if(_+=f,u=u.children.get(f),u===void 0)return;u.isLeaf&&(yield _)}}}class n{constructor(d,u){this.isLeaf=d,this.children=u}static default(){return new n(!1,new Map)}}class o{constructor(d,u,_){this.chars=Array.from(d),this.len=this.chars.length,this.bosTokenId=u,this.eosTokenId=_,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const f=new a(this.bosTokenId,0,0,0,0),b=new a(this.eosTokenId,1,this.len,0,0);this.nodes.push(f.clone()),this.nodes.push(b.clone()),this.beginNodes[this.len].push(b),this.endNodes[0].push(f)}insert(d,u,_,f){const b=this.nodes.length,A=new a(f,b,d,u,_);this.beginNodes[d].push(A),this.endNodes[d+u].push(A),this.nodes.push(A)}viterbi(){const d=this.len;let u=0;for(;u<=d;){if(this.beginNodes[u].length==0)return[];for(let g of this.beginNodes[u]){g.prev=null;let w=0,$=null;for(let y of this.endNodes[u]){const v=y.backtraceScore+g.score;($===null||v>w)&&($=y.clone(),w=v)}if($!==null)g.prev=$,g.backtraceScore=w;else return[]}++u}const _=[],b=this.beginNodes[d][0].prev;if(b===null)return[];let A=b.clone();for(;A.prev!==null;)_.push(A.clone()),A=A.clone().prev.clone();return _.reverse(),_}piece(d){return this.chars.slice(d.pos,d.pos+d.length).join("")}tokens(){return this.viterbi().map(u=>this.piece(u))}tokenIds(){return this.viterbi().map(u=>u.tokenId)}}class a{constructor(d,u,_,f,b){this.tokenId=d,this.nodeId=u,this.pos=_,this.length=f,this.score=b,this.prev=null,this.backtraceScore=0}clone(){const d=new a(this.tokenId,this.nodeId,this.pos,this.length,this.score);return d.prev=this.prev,d.backtraceScore=this.backtraceScore,d}}class l{constructor(d){this.trie=this._buildTrie(d)}_buildTrie(d){var _;const u=Object.create(null);for(const f of d){let b=u;for(let A=0;A<f.length;++A)b=b[_=f[A]]??(b[_]=Object.create(null));b.end=f}return u}split(d){const u=[],_=d.length;let f=0,b=0;for(;b<_;){let A=this.trie,g=null,w=b;for(;w<_&&(A=A[d[w]]);)A.end&&(g=A.end),++w;g?(b>f&&u.push(d.slice(f,b)),u.push(g),b+=g.length,f=b):++b}return f<_&&u.push(d.slice(f)),u}}class c{constructor(d){this.capacity=d,this.cache=new Map}get(d){if(!this.cache.has(d))return;const u=this.cache.get(d);return this.cache.delete(d),this.cache.set(d,u),u}put(d,u){this.cache.has(d)&&this.cache.delete(d),this.cache.set(d,u),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(e,r,t)=>{t.r(r),t.d(r,{DEVICE_TYPES:()=>s});const s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,r,t)=>{t.r(r),t.d(r,{DATA_TYPES:()=>o,DEFAULT_DEVICE_DTYPE_MAPPING:()=>a,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>n});var s=t("./src/env.js"),i=t("./src/utils/devices.js");const n=function(){let c;return async function(){if(c===void 0)if(!s.apis.IS_WEBGPU_AVAILABLE)c=!1;else try{c=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{c=!1}return c}}(),o=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),a=Object.freeze({[i.DEVICE_TYPES.wasm]:o.q8}),l=Object.freeze({[o.fp32]:"",[o.fp16]:"_fp16",[o.int8]:"_int8",[o.uint8]:"_uint8",[o.q8]:"_quantized",[o.q4]:"_q4",[o.q4f16]:"_q4f16",[o.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,r,t)=>{t.r(r),t.d(r,{Callable:()=>s});const s=class{constructor(){let i=function(...n){return i._call(...n)};return Object.setPrototypeOf(i,new.target.prototype)}_call(...i){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,r,t)=>{t.r(r),t.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>a,getFile:()=>_,getModelFile:()=>w,getModelJSON:()=>y,getModelText:()=>$});var s=t("?7992"),i=t("?5af5"),n=t("./src/env.js"),o=t("./src/utils/core.js");const a=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class c{constructor(P){if(this.filePath=P,this.headers=new Headers,this.exists=s.existsSync(P),this.exists){this.status=200,this.statusText="OK";let D=s.statSync(P);this.headers.set("content-length",D.size.toString()),this.updateContentType();const L=s.createReadStream(P);this.body=new ReadableStream({start(G){L.on("data",K=>G.enqueue(K)),L.on("end",()=>G.close()),L.on("error",K=>G.error(K))},cancel(){L.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const P=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[P]??"application/octet-stream")}clone(){let P=new c(this.filePath);return P.exists=this.exists,P.status=this.status,P.statusText=this.statusText,P.headers=new Headers(this.headers),P}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){const P=await s.promises.readFile(this.filePath);return new Blob([P],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function p(x,P=null,D=null){let L;try{L=new URL(x)}catch{return!1}return!(P&&!P.includes(L.protocol)||D&&!D.includes(L.hostname))}const d=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function u(x){return!(!d.test(x)||x.includes("..")||x.includes("--")||x.endsWith(".git")||x.endsWith(".ipynb"))}async function _(x){var P;if(n.env.useFS&&!p(x,["http:","https:","blob:"]))return new c(x instanceof URL?x.protocol==="file:"?x.pathname:x.toString():x);if(typeof process<"u"&&((P=process==null?void 0:process.release)==null?void 0:P.name)==="node"){const D=!!(Us!=null&&Us.TESTING_REMOTELY),L=n.env.version,G=new Headers;if(G.set("User-Agent",`transformers.js/${L}; is_ci/${D};`),p(x,["http:","https:"],["huggingface.co","hf.co"])){const R=(Us==null?void 0:Us.HF_TOKEN)??(Us==null?void 0:Us.HF_ACCESS_TOKEN);R&&G.set("Authorization",`Bearer ${R}`)}return fetch(x,{headers:G})}else return fetch(x)}const f={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function b(x,P,D){if(!D)return null;const L=f[x]??`Error (${x}) occurred while trying to load file`;throw Error(`${L}: "${P}".`)}class A{constructor(P){this.path=P}async match(P){let D=i.join(this.path,P),L=new c(D);if(L.exists)return L}async put(P,D,L=void 0){let G=i.join(this.path,P);try{const K=D.headers.get("Content-Length"),R=parseInt(K??"0");let te=0;await s.promises.mkdir(i.dirname(G),{recursive:!0});const H=s.createWriteStream(G),ee=D.body.getReader();for(;;){const{done:Z,value:ne}=await ee.read();if(Z)break;await new Promise((ue,j)=>{H.write(ne,F=>{if(F){j(F);return}ue()})}),te+=ne.length;const me=R?te/R*100:0;L==null||L({progress:me,loaded:te,total:R})}H.close()}catch(K){try{await s.promises.unlink(G)}catch{}throw K}}}async function g(x,...P){for(let D of P)try{let L=await x.match(D);if(L)return L}catch{continue}}async function w(x,P,D=!0,L={},G=!1){if(!n.env.allowLocalModels){if(L.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!n.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,o.dispatchCallback)(L.progress_callback,{status:"initiate",name:x,file:P});let K;if(!K&&n.env.useCustomCache){if(!n.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!n.env.customCache.match||!n.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");K=n.env.customCache}if(!K&&n.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{K=await caches.open("transformers-cache")}catch(fe){console.warn("An error occurred while opening the browser cache:",fe)}}if(!K&&n.env.useFSCache){if(!n.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");K=new A(L.cache_dir??n.env.cacheDir)}const R=L.revision??"main",te=T(x,P),H=u(x),ee=H?T(n.env.localModelPath,te):te,Z=T(n.env.remoteHost,n.env.remotePathTemplate.replaceAll("{model}",x).replaceAll("{revision}",encodeURIComponent(R)),P);let ne;const me=K instanceof A?R==="main"?te:T(x,R,P):Z;let ue=!1,j;K&&(j=await g(K,ee,me));const F=j!==void 0;if(j===void 0){if(n.env.allowLocalModels)if(p(te,["http:","https:"])){if(L.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${te}.`);if(!n.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${te}.`)}else try{j=await _(ee),ne=ee}catch(oe){console.warn(`Unable to load from local path "${ee}": "${oe}"`)}if(j===void 0||j.status===404){if(L.local_files_only||!n.env.allowRemoteModels){if(D)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${ee}".`);return null}if(!H)throw Error(`Local file missing at "${ee}" and download aborted due to invalid model ID "${x}".`);if(j=await _(Z),j.status!==200)return b(j.status,Z,D);ne=me}ue=K&&typeof Response<"u"&&j instanceof Response&&j.status===200}(0,o.dispatchCallback)(L.progress_callback,{status:"download",name:x,file:P});let U;if(!(n.apis.IS_NODE_ENV&&G)){let fe;L.progress_callback?F&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(fe=new Uint8Array(await j.arrayBuffer()),(0,o.dispatchCallback)(L.progress_callback,{status:"progress",name:x,file:P,progress:100,loaded:fe.length,total:fe.length})):fe=await v(j,oe=>{(0,o.dispatchCallback)(L.progress_callback,{status:"progress",name:x,file:P,...oe})}):fe=new Uint8Array(await j.arrayBuffer()),U=fe}if(ue&&ne&&await K.match(ne)===void 0&&(U?await K.put(ne,new Response(U,{headers:j.headers})).catch(fe=>{console.warn(`Unable to add response to browser cache: ${fe}.`)}):await K.put(ne,j,L.progress_callback)),(0,o.dispatchCallback)(L.progress_callback,{status:"done",name:x,file:P}),U){if(!n.apis.IS_NODE_ENV&&G)throw new Error("Cannot return path in a browser environment.");return U}if(j instanceof c)return j.filePath;const se=await(K==null?void 0:K.match(ne));if(se instanceof c)return se.filePath;if(se instanceof Response)return new Uint8Array(await se.arrayBuffer());if(typeof se=="string")return se;throw new Error("Unable to get model file path or buffer.")}async function $(x,P,D=!0,L={}){const G=await w(x,P,D,L,!1);return G===null?null:new TextDecoder("utf-8").decode(G)}async function y(x,P,D=!0,L={}){const G=await $(x,P,D,L);return G===null?{}:JSON.parse(G)}async function v(x,P){const D=x.headers.get("Content-Length");D===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let L=parseInt(D??"0"),G=new Uint8Array(L),K=0;const R=x.body.getReader();async function te(){const{done:H,value:ee}=await R.read();if(H)return;const Z=K+ee.length;if(Z>L){L=Z;const me=new Uint8Array(L);me.set(G),G=me}G.set(ee,K),K=Z;const ne=K/L*100;return P({progress:ne,loaded:K,total:L}),te()}return await te(),G}function T(...x){return x=x.map((P,D)=>(D&&(P=P.replace(new RegExp("^/"),"")),D!==x.length-1&&(P=P.replace(new RegExp("/$"),"")),P)),x.join("/")}},"./src/utils/image.js":(e,r,t)=>{t.r(r),t.d(r,{RawImage:()=>f,load_image:()=>b});var s=t("./src/utils/core.js"),i=t("./src/utils/hub.js"),n=t("./src/env.js"),o=t("./src/utils/tensor.js"),a=t("?2b25");let l,c,p;const d=n.apis.IS_BROWSER_ENV||n.apis.IS_WEBWORKER_ENV;if(d)l=(A,g)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(A,g)},p=self.createImageBitmap,c=self.ImageData;else if(a)p=async A=>{const w=(await A.metadata()).channels,{data:$,info:y}=await A.rotate().raw().toBuffer({resolveWithObject:!0}),v=new f(new Uint8ClampedArray($),y.width,y.height,y.channels);return w!==void 0&&w!==y.channels&&v.convert(w),v};else throw new Error("Unable to load image processing library.");const u={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},_=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(g,w,$,y){this.data=g,this.width=w,this.height=$,this.channels=y}get size(){return[this.width,this.height]}static async read(g){if(g instanceof f)return g;if(typeof g=="string"||g instanceof URL)return await this.fromURL(g);if(g instanceof Blob)return await this.fromBlob(g);if(typeof HTMLCanvasElement<"u"&&g instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&g instanceof OffscreenCanvas)return this.fromCanvas(g);throw new Error(`Unsupported input type: ${typeof g}`)}static fromCanvas(g){if(!d)throw new Error("fromCanvas() is only supported in browser environments.");const $=g.getContext("2d").getImageData(0,0,g.width,g.height).data;return new f($,g.width,g.height,4)}static async fromURL(g){const w=await(0,i.getFile)(g);if(w.status!==200)throw new Error(`Unable to read image from "${g}" (${w.status} ${w.statusText})`);const $=await w.blob();return this.fromBlob($)}static async fromBlob(g){if(d){const w=await p(g),$=l(w.width,w.height).getContext("2d");return $.drawImage(w,0,0),new this($.getImageData(0,0,w.width,w.height).data,w.width,w.height,4)}else{const w=a(await g.arrayBuffer());return await p(w)}}static fromTensor(g,w="CHW"){if(g.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${g.dims.length} dimensions.`);if(w==="CHW")g=g.transpose(1,2,0);else if(w!=="HWC")throw new Error(`Unsupported channel format: ${w}`);if(!(g.data instanceof Uint8ClampedArray||g.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${g.type}`);switch(g.dims[2]){case 1:case 2:case 3:case 4:return new f(g.data,g.dims[1],g.dims[0],g.dims[2]);default:throw new Error(`Unsupported number of channels: ${g.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const g=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let w=0,$=0;w<this.data.length;w+=this.channels){const y=this.data[w],v=this.data[w+1],T=this.data[w+2];g[$++]=Math.round(.2989*y+.587*v+.114*T)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(g,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const g=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let w=0,$=0;w<this.data.length;++w)g[$++]=this.data[w],g[$++]=this.data[w],g[$++]=this.data[w];break;case 4:for(let w=0,$=0;w<this.data.length;w+=4)g[$++]=this.data[w],g[$++]=this.data[w+1],g[$++]=this.data[w+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(g,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const g=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let w=0,$=0;w<this.data.length;++w)g[$++]=this.data[w],g[$++]=this.data[w],g[$++]=this.data[w],g[$++]=255;break;case 3:for(let w=0,$=0;w<this.data.length;w+=3)g[$++]=this.data[w],g[$++]=this.data[w+1],g[$++]=this.data[w+2],g[$++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(g,this.width,this.height,4)}putAlpha(g){if(g.width!==this.width||g.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${g.width}x${g.height}`);if(g.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${g.channels}`);const w=this.data,$=g.data,y=this.width*this.height;if(this.channels===3){const v=new Uint8ClampedArray(y*4);for(let T=0,x=0,P=0;T<y;++T)v[P++]=w[x++],v[P++]=w[x++],v[P++]=w[x++],v[P++]=$[T];return this._update(v,this.width,this.height,4)}else if(this.channels===4){for(let v=0;v<y;++v)w[4*v+3]=$[v];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(g,w,{resample:$=2}={}){if(this.width===g&&this.height===w)return this;let y=u[$]??$;const v=(0,s.isNullishDimension)(g),T=(0,s.isNullishDimension)(w);if(v&&T)return this;if(v?g=w/this.height*this.width:T&&(w=g/this.width*this.height),d){const x=this.channels,P=this.toCanvas(),D=l(g,w).getContext("2d");return D.drawImage(P,0,0,g,w),new f(D.getImageData(0,0,g,w).data,g,w,4).convert(x)}else{let x=this.toSharp();switch(y){case"box":case"hamming":(y==="box"||y==="hamming")&&(console.warn(`Resampling method ${y} is not yet supported. Using bilinear instead.`),y="bilinear");case"nearest":case"bilinear":case"bicubic":x=x.affine([g/this.width,0,0,w/this.height],{interpolator:y});break;case"lanczos":x=x.resize({width:g,height:w,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${y} is not supported.`)}return await p(x)}}async pad([g,w,$,y]){if(g=Math.max(g,0),w=Math.max(w,0),$=Math.max($,0),y=Math.max(y,0),g===0&&w===0&&$===0&&y===0)return this;if(d){const v=this.channels,T=this.toCanvas(),x=this.width+g+w,P=this.height+$+y,D=l(x,P).getContext("2d");return D.drawImage(T,0,0,this.width,this.height,g,$,this.width,this.height),new f(D.getImageData(0,0,x,P).data,x,P,4).convert(v)}else{const v=this.toSharp().extend({left:g,right:w,top:$,bottom:y});return await p(v)}}async crop([g,w,$,y]){if(g=Math.max(g,0),w=Math.max(w,0),$=Math.min($,this.width-1),y=Math.min(y,this.height-1),g===0&&w===0&&$===this.width-1&&y===this.height-1)return this;const v=$-g+1,T=y-w+1;if(d){const x=this.channels,P=this.toCanvas(),D=l(v,T).getContext("2d");return D.drawImage(P,g,w,v,T,0,0,v,T),new f(D.getImageData(0,0,v,T).data,v,T,4).convert(x)}else{const x=this.toSharp().extract({left:g,top:w,width:v,height:T});return await p(x)}}async center_crop(g,w){if(this.width===g&&this.height===w)return this;const $=(this.width-g)/2,y=(this.height-w)/2;if(d){const v=this.channels,T=this.toCanvas(),x=l(g,w).getContext("2d");let P=0,D=0,L=0,G=0;return $>=0?P=$:L=-$,y>=0?D=y:G=-y,x.drawImage(T,P,D,g,w,L,G,g,w),new f(x.getImageData(0,0,g,w).data,g,w,4).convert(v)}else{let v=this.toSharp();if($>=0&&y>=0)v=v.extract({left:Math.floor($),top:Math.floor(y),width:g,height:w});else if($<=0&&y<=0){const T=Math.floor(-y),x=Math.floor(-$);v=v.extend({top:T,left:x,right:g-this.width-x,bottom:w-this.height-T})}else{let T=[0,0],x=0;y<0?(T[0]=Math.floor(-y),T[1]=w-this.height-T[0]):x=Math.floor(y);let P=[0,0],D=0;$<0?(P[0]=Math.floor(-$),P[1]=g-this.width-P[0]):D=Math.floor($),v=v.extend({top:T[0],bottom:T[1],left:P[0],right:P[1]}).extract({left:D,top:x,width:g,height:w})}return await p(v)}}async toBlob(g="image/png",w=1){if(!d)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:g,quality:w})}toTensor(g="CHW"){let w=new o.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(g!=="HWC")if(g==="CHW")w=w.permute(2,0,1);else throw new Error(`Unsupported channel format: ${g}`);return w}toCanvas(){if(!d)throw new Error("toCanvas() is only supported in browser environments.");const g=this.clone().rgba(),w=l(g.width,g.height),$=new c(g.data,g.width,g.height);return w.getContext("2d").putImageData($,0,0),w}split(){const{data:g,width:w,height:$,channels:y}=this,v=g.constructor,T=g.length/y,x=Array.from({length:y},()=>new v(T));for(let P=0;P<T;++P){const D=y*P;for(let L=0;L<y;++L)x[L][P]=g[D+L]}return x.map(P=>new f(P,w,$,1))}_update(g,w,$,y=null){return this.data=g,this.width=w,this.height=$,y!==null&&(this.channels=y),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(g){if(this.channels===g)return this;switch(g){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(g){if(d){if(n.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const w=g.split(".").pop().toLowerCase(),$=_.get(w)??"image/png",y=await this.toBlob($);(0,s.saveBlob)(g,y)}else{if(n.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(g);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(d)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const b=f.read.bind(f)},"./src/utils/maths.js":(e,r,t)=>{t.r(r),t.d(r,{FFT:()=>b,bankers_round:()=>w,cos_sim:()=>l,dot:()=>a,dynamic_time_warping:()=>$,interpolate_data:()=>s,log_softmax:()=>o,magnitude:()=>c,max:()=>d,medianFilter:()=>A,min:()=>p,permute_data:()=>i,round:()=>g,softmax:()=>n});function s(y,[v,T,x],[P,D],L="bilinear",G=!1){const K=D/x,R=P/T,te=new y.constructor(P*D*v),H=T*x,ee=P*D;for(let Z=0;Z<P;++Z)for(let ne=0;ne<D;++ne){const me=Z*D+ne,ue=(ne+.5)/K-.5,j=(Z+.5)/R-.5;let F=Math.floor(ue),U=Math.floor(j);const se=Math.min(F+1,x-1),fe=Math.min(U+1,T-1);F=Math.max(F,0),U=Math.max(U,0);const oe=ue-F,Te=j-U,Re=(1-oe)*(1-Te),He=oe*(1-Te),Me=(1-oe)*Te,X=oe*Te,le=U*x,W=fe*x,ye=le+F,ke=le+se,Pe=W+F,be=W+se;for(let Se=0;Se<v;++Se){const we=Se*H;te[Se*ee+me]=Re*y[we+ye]+He*y[we+ke]+Me*y[we+Pe]+X*y[we+be]}}return te}function i(y,v,T){const x=new Array(T.length),P=new Array(T.length);for(let G=T.length-1,K=1;G>=0;--G)P[G]=K,x[G]=v[T[G]],K*=x[G];const D=T.map((G,K)=>P[T.indexOf(K)]),L=new y.constructor(y.length);for(let G=0;G<y.length;++G){let K=0;for(let R=v.length-1,te=G;R>=0;--R)K+=te%v[R]*D[R],te=Math.floor(te/v[R]);L[K]=y[G]}return[L,x]}function n(y){const v=d(y)[0],T=y.map(D=>Math.exp(D-v)),x=T.reduce((D,L)=>D+L,0);return T.map(D=>D/x)}function o(y){const v=d(y)[0];let T=0;for(let D=0;D<y.length;++D)T+=Math.exp(y[D]-v);const x=Math.log(T);return y.map(D=>D-v-x)}function a(y,v){let T=0;for(let x=0;x<y.length;++x)T+=y[x]*v[x];return T}function l(y,v){const T=a(y,v),x=c(y),P=c(v);return T/(x*P)}function c(y){return Math.sqrt(y.reduce((v,T)=>v+T*T,0))}function p(y){if(y.length===0)throw Error("Array must not be empty");let v=y[0],T=0;for(let x=1;x<y.length;++x)y[x]<v&&(v=y[x],T=x);return[v,T]}function d(y){if(y.length===0)throw Error("Array must not be empty");let v=y[0],T=0;for(let x=1;x<y.length;++x)y[x]>v&&(v=y[x],T=x);return[v,T]}function u(y){return y>0&&(y&y-1)===0}class _{constructor(v){if(this.size=v|0,this.size<=1||!u(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=v<<1,this.table=new Float64Array(this.size*2);for(let x=0;x<this.table.length;x+=2){const P=Math.PI*x/this.size;this.table[x]=Math.cos(P),this.table[x+1]=-Math.sin(P)}let T=0;for(let x=1;this.size>x;x<<=1)++T;this._width=T%2===0?T-1:T,this._bitrev=new Int32Array(1<<this._width);for(let x=0;x<this._bitrev.length;++x){this._bitrev[x]=0;for(let P=0;P<this._width;P+=2){const D=this._width-P-2;this._bitrev[x]|=(x>>>P&3)<<D}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(v,T){const x=T||new Array(v.length>>>1);for(let P=0;P<v.length;P+=2)x[P>>>1]=v[P];return x}toComplexArray(v,T){const x=T||this.createComplexArray();for(let P=0;P<x.length;P+=2)x[P]=v[P>>>1],x[P+1]=0;return x}transform(v,T){if(v===T)throw new Error("Input and output buffers must be different");this._transform4(v,T,1)}realTransform(v,T){if(v===T)throw new Error("Input and output buffers must be different");this._realTransform4(v,T,1)}inverseTransform(v,T){if(v===T)throw new Error("Input and output buffers must be different");this._transform4(v,T,-1);for(let x=0;x<v.length;++x)v[x]/=this.size}_transform4(v,T,x){const P=this._csize;let L=1<<this._width,G=P/L<<1,K,R;const te=this._bitrev;if(G===4)for(K=0,R=0;K<P;K+=G,++R){const ee=te[R];this._singleTransform2(T,v,K,ee,L)}else for(K=0,R=0;K<P;K+=G,++R){const ee=te[R];this._singleTransform4(T,v,K,ee,L,x)}const H=this.table;for(L>>=2;L>=2;L>>=2){G=P/L<<1;const ee=G>>>2;for(K=0;K<P;K+=G){const Z=K+ee-1;for(let ne=K,me=0;ne<Z;ne+=2,me+=L){const ue=ne,j=ue+ee,F=j+ee,U=F+ee,se=v[ue],fe=v[ue+1],oe=v[j],Te=v[j+1],Re=v[F],He=v[F+1],Me=v[U],X=v[U+1],le=H[me],W=x*H[me+1],ye=oe*le-Te*W,ke=oe*W+Te*le,Pe=H[2*me],be=x*H[2*me+1],Se=Re*Pe-He*be,we=Re*be+He*Pe,Ie=H[3*me],ze=x*H[3*me+1],Qe=Me*Ie-X*ze,xe=Me*ze+X*Ie,Ze=se+Se,Ge=fe+we,nt=se-Se,Ye=fe-we,De=ye+Qe,Je=ke+xe,it=x*(ye-Qe),It=x*(ke-xe);v[ue]=Ze+De,v[ue+1]=Ge+Je,v[j]=nt+It,v[j+1]=Ye-it,v[F]=Ze-De,v[F+1]=Ge-Je,v[U]=nt-It,v[U+1]=Ye+it}}}}_singleTransform2(v,T,x,P,D){const L=v[P],G=v[P+1],K=v[P+D],R=v[P+D+1];T[x]=L+K,T[x+1]=G+R,T[x+2]=L-K,T[x+3]=G-R}_singleTransform4(v,T,x,P,D,L){const G=D*2,K=D*3,R=v[P],te=v[P+1],H=v[P+D],ee=v[P+D+1],Z=v[P+G],ne=v[P+G+1],me=v[P+K],ue=v[P+K+1],j=R+Z,F=te+ne,U=R-Z,se=te-ne,fe=H+me,oe=ee+ue,Te=L*(H-me),Re=L*(ee-ue);T[x]=j+fe,T[x+1]=F+oe,T[x+2]=U+Re,T[x+3]=se-Te,T[x+4]=j-fe,T[x+5]=F-oe,T[x+6]=U-Re,T[x+7]=se+Te}_realTransform4(v,T,x){const P=this._csize;let L=1<<this._width,G=P/L<<1,K,R;const te=this._bitrev;if(G===4)for(K=0,R=0;K<P;K+=G,++R){const Z=te[R];this._singleRealTransform2(T,v,K,Z>>>1,L>>>1)}else for(K=0,R=0;K<P;K+=G,++R){const Z=te[R];this._singleRealTransform4(T,v,K,Z>>>1,L>>>1,x)}const H=this.table;for(L>>=2;L>=2;L>>=2){G=P/L<<1;const Z=G>>>1,ne=Z>>>1,me=ne>>>1;for(K=0;K<P;K+=G)for(let ue=0,j=0;ue<=me;ue+=2,j+=L){const F=K+ue,U=F+ne,se=U+ne,fe=se+ne,oe=v[F],Te=v[F+1],Re=v[U],He=v[U+1],Me=v[se],X=v[se+1],le=v[fe],W=v[fe+1],ye=oe,ke=Te,Pe=H[j],be=x*H[j+1],Se=Re*Pe-He*be,we=Re*be+He*Pe,Ie=H[2*j],ze=x*H[2*j+1],Qe=Me*Ie-X*ze,xe=Me*ze+X*Ie,Ze=H[3*j],Ge=x*H[3*j+1],nt=le*Ze-W*Ge,Ye=le*Ge+W*Ze,De=ye+Qe,Je=ke+xe,it=ye-Qe,It=ke-xe,St=Se+nt,bt=we+Ye,Mr=x*(Se-nt),Pr=x*(we-Ye);if(v[F]=De+St,v[F+1]=Je+bt,v[U]=it+Pr,v[U+1]=It-Mr,ue===0){v[se]=De-St,v[se+1]=Je-bt;continue}if(ue===me)continue;const jr=K+ne-ue,as=K+Z-ue;v[jr]=it-x*Pr,v[jr+1]=-It-x*Mr,v[as]=De-x*St,v[as+1]=-Je+x*bt}}const ee=P>>>1;for(let Z=2;Z<ee;Z+=2)v[P-Z]=v[Z],v[P-Z+1]=-v[Z+1]}_singleRealTransform2(v,T,x,P,D){const L=v[P],G=v[P+D];T[x]=L+G,T[x+1]=0,T[x+2]=L-G,T[x+3]=0}_singleRealTransform4(v,T,x,P,D,L){const G=D*2,K=D*3,R=v[P],te=v[P+D],H=v[P+G],ee=v[P+K],Z=R+H,ne=R-H,me=te+ee,ue=L*(te-ee);T[x]=Z+me,T[x+1]=0,T[x+2]=ne,T[x+3]=-ue,T[x+4]=Z-me,T[x+5]=0,T[x+6]=ne,T[x+7]=ue}}class f{constructor(v){const T=2*(v-1),x=2*(2*v-1),P=2**Math.ceil(Math.log2(x));this.bufferSize=P,this._a=T;const D=new Float64Array(x),L=new Float64Array(P);this._chirpBuffer=new Float64Array(P),this._buffer1=new Float64Array(P),this._buffer2=new Float64Array(P),this._outBuffer1=new Float64Array(P),this._outBuffer2=new Float64Array(P);const G=-2*Math.PI/v,K=Math.cos(G),R=Math.sin(G);for(let te=0;te<x>>1;++te){const H=(te+1-v)**2/2,ee=Math.sqrt(K**2+R**2)**H,Z=H*Math.atan2(R,K),ne=2*te;D[ne]=ee*Math.cos(Z),D[ne+1]=ee*Math.sin(Z),L[ne]=D[ne],L[ne+1]=-D[ne+1]}this._slicedChirpBuffer=D.subarray(T,x),this._f=new _(P>>1),this._f.transform(this._chirpBuffer,L)}_transform(v,T,x){const P=this._buffer1,D=this._buffer2,L=this._outBuffer1,G=this._outBuffer2,K=this._chirpBuffer,R=this._slicedChirpBuffer,te=this._a;if(x)for(let H=0;H<R.length;H+=2){const ee=H+1,Z=H>>1,ne=T[Z];P[H]=ne*R[H],P[ee]=ne*R[ee]}else for(let H=0;H<R.length;H+=2){const ee=H+1;P[H]=T[H]*R[H]-T[ee]*R[ee],P[ee]=T[H]*R[ee]+T[ee]*R[H]}this._f.transform(L,P);for(let H=0;H<K.length;H+=2){const ee=H+1;D[H]=L[H]*K[H]-L[ee]*K[ee],D[ee]=L[H]*K[ee]+L[ee]*K[H]}this._f.inverseTransform(G,D);for(let H=0;H<G.length;H+=2){const ee=G[H+te],Z=G[H+te+1],ne=R[H],me=R[H+1];v[H]=ee*ne-Z*me,v[H+1]=ee*me+Z*ne}}transform(v,T){this._transform(v,T,!1)}realTransform(v,T){this._transform(v,T,!0)}}class b{constructor(v){this.fft_length=v,this.isPowerOfTwo=u(v),this.isPowerOfTwo?(this.fft=new _(v),this.outputBufferSize=2*v):(this.fft=new f(v),this.outputBufferSize=this.fft.bufferSize)}realTransform(v,T){this.fft.realTransform(v,T)}transform(v,T){this.fft.transform(v,T)}}function A(y,v){if(v%2===0||v<=0)throw new Error("Window size must be a positive odd number");const T=new y.constructor(y.length),x=new y.constructor(v),P=Math.floor(v/2);for(let D=0;D<y.length;++D){let L=0;for(let G=-P;G<=P;++G){let K=D+G;K<0?K=Math.abs(K):K>=y.length&&(K=2*(y.length-1)-K),x[L++]=y[K]}x.sort(),T[D]=x[P]}return T}function g(y,v){const T=Math.pow(10,v);return Math.round(y*T)/T}function w(y){const v=Math.round(y);return Math.abs(y)%1===.5?v%2===0?v:v-1:v}function $(y){const v=y.length,T=y[0].length,x=[v+1,T+1],P=Array.from({length:x[0]},()=>Array(x[1]).fill(1/0));P[0][0]=0;const D=Array.from({length:x[0]},()=>Array(x[1]).fill(-1));for(let te=1;te<x[1];++te)for(let H=1;H<x[0];++H){const ee=P[H-1][te-1],Z=P[H-1][te],ne=P[H][te-1];let me,ue;ee<Z&&ee<ne?(me=ee,ue=0):Z<ee&&Z<ne?(me=Z,ue=1):(me=ne,ue=2),P[H][te]=y[H-1][te-1]+me,D[H][te]=ue}for(let te=0;te<x[1];++te)D[0][te]=2;for(let te=0;te<x[0];++te)D[te][0]=1;let L=v,G=T,K=[],R=[];for(;L>0||G>0;)switch(K.push(L-1),R.push(G-1),D[L][G]){case 0:--L,--G;break;case 1:--L;break;case 2:--G;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${L}, ${G}]. Please file a bug report.`)}return K.reverse(),R.reverse(),[K,R]}},"./src/utils/tensor.js":(e,r,t)=>{t.r(r),t.d(r,{DataTypeMap:()=>o,Tensor:()=>a,cat:()=>T,full:()=>R,full_like:()=>te,interpolate:()=>p,interpolate_4d:()=>d,layer_norm:()=>w,matmul:()=>u,mean:()=>L,mean_pooling:()=>g,ones:()=>H,ones_like:()=>ee,permute:()=>c,quantize_embeddings:()=>ue,rand:()=>me,rfft:()=>_,slice:()=>A,stack:()=>x,std_mean:()=>D,topk:()=>f,zeros:()=>Z,zeros_like:()=>ne});var s=t("./src/utils/maths.js"),i=t("./src/backends/onnx.js"),n=t("./src/ops/registry.js");const o=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class a{constructor(...F){Y(this,"ort_tensor");return(0,i.isONNXTensor)(F[0])?this.ort_tensor=F[0]:this.ort_tensor=new i.Tensor(F[0],F[1],F[2]),new Proxy(this,{get:(U,se)=>{if(typeof se=="string"){let fe=Number(se);if(Number.isInteger(fe))return U._getitem(fe)}return U[se]},set:(U,se,fe)=>U[se]=fe})}get dims(){return this.ort_tensor.dims}set dims(F){this.ort_tensor.dims=F}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[F,...U]=this.dims;if(U.length>0){const se=U.reduce((fe,oe)=>fe*oe);for(let fe=0;fe<F;++fe)yield this._subarray(fe,se,U)}else yield*this.data}_getitem(F){const[U,...se]=this.dims;if(F=v(F,U),se.length>0){const fe=se.reduce((oe,Te)=>oe*Te);return this._subarray(F,fe,se)}else return new a(this.type,[this.data[F]],se)}indexOf(F){const U=this.data;for(let se=0;se<U.length;++se)if(U[se]==F)return se;return-1}_subarray(F,U,se){const fe=F*U,oe=(F+1)*U,Te="subarray"in this.data?this.data.subarray(fe,oe):this.data.slice(fe,oe);return new a(this.type,Te,se)}item(){const F=this.data;if(F.length!==1)throw new Error(`a Tensor with ${F.length} elements cannot be converted to Scalar`);return F[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const F=this.data;for(let U=0;U<F.length;++U)F[U]=1/(1+Math.exp(-F[U]));return this}map(F){return this.clone().map_(F)}map_(F){const U=this.data;for(let se=0;se<U.length;++se)U[se]=F(U[se],se,U);return this}mul(F){return this.clone().mul_(F)}mul_(F){const U=this.data;for(let se=0;se<U.length;++se)U[se]*=F;return this}div(F){return this.clone().div_(F)}div_(F){const U=this.data;for(let se=0;se<U.length;++se)U[se]/=F;return this}add(F){return this.clone().add_(F)}add_(F){const U=this.data;for(let se=0;se<U.length;++se)U[se]+=F;return this}sub(F){return this.clone().sub_(F)}sub_(F){const U=this.data;for(let se=0;se<U.length;++se)U[se]-=F;return this}clone(){return new a(this.type,this.data.slice(),this.dims.slice())}slice(...F){const U=[],se=[];for(let Me=0;Me<this.dims.length;++Me){let X=F[Me];if(X==null)se.push([0,this.dims[Me]]),U.push(this.dims[Me]);else if(typeof X=="number")X=v(X,this.dims[Me],Me),se.push([X,X+1]);else if(Array.isArray(X)&&X.length===2){let[le,W]=X;if(le=le===null?0:v(le,this.dims[Me],Me,!1),W=W===null?this.dims[Me]:v(W,this.dims[Me],Me,!1),le>W)throw new Error(`Invalid slice: ${X}`);const ye=[Math.max(le,0),Math.min(W,this.dims[Me])];se.push(ye),U.push(ye[1]-ye[0])}else throw new Error(`Invalid slice: ${X}`)}const fe=se.map(([Me,X])=>X-Me),oe=fe.reduce((Me,X)=>Me*X),Te=this.data,Re=new Te.constructor(oe),He=this.stride();for(let Me=0;Me<oe;++Me){let X=0;for(let le=fe.length-1,W=Me;le>=0;--le){const ye=fe[le];X+=(W%ye+se[le][0])*He[le],W=Math.floor(W/ye)}Re[Me]=Te[X]}return new a(this.type,Re,U)}permute(...F){return c(this,F)}transpose(...F){return this.permute(...F)}sum(F=null,U=!1){return this.norm(1,F,U)}norm(F="fro",U=null,se=!1){if(F==="fro")F=2;else if(typeof F=="string")throw Error(`Unsupported norm: ${F}`);const fe=this.data,oe=(Me,X)=>Me+X**F;if(U===null){const Me=fe.reduce(oe,0)**(1/F);return new a(this.type,[Me],[])}const[Te,Re,He]=P(oe,this,U,se);if(F!==1)for(let Me=0;Me<Re.length;++Me)Re[Me]=Re[Me]**(1/F);return new a(Te,Re,He)}normalize_(F=2,U=1){U=v(U,this.dims.length);const se=this.norm(F,U,!0),fe=this.data,oe=se.data;for(let Te=0;Te<fe.length;++Te){let Re=0;for(let He=this.dims.length-1,Me=Te,X=1;He>=0;--He){const le=this.dims[He];if(He!==U){const W=Me%le;Re+=W*X,X*=this.dims[He]}Me=Math.floor(Me/le)}fe[Te]/=oe[Re]}return this}normalize(F=2,U=1){return this.clone().normalize_(F,U)}stride(){return G(this.dims)}squeeze(F=null){return new a(this.type,this.data,$(this.dims,F))}squeeze_(F=null){return this.dims=$(this.dims,F),this}unsqueeze(F=null){return new a(this.type,this.data,y(this.dims,F))}unsqueeze_(F=null){return this.dims=y(this.dims,F),this}flatten_(F=0,U=-1){U=(U+this.dims.length)%this.dims.length;let se=this.dims.slice(0,F),fe=this.dims.slice(F,U+1),oe=this.dims.slice(U+1);return this.dims=[...se,fe.reduce((Te,Re)=>Te*Re,1),...oe],this}flatten(F=0,U=-1){return this.clone().flatten_(F,U)}view(...F){let U=-1;for(let fe=0;fe<F.length;++fe)if(F[fe]===-1){if(U!==-1)throw new Error("Only one dimension can be inferred");U=fe}const se=this.data;if(U!==-1){const fe=F.reduce((oe,Te,Re)=>Re!==U?oe*Te:oe,1);F[U]=se.length/fe}return new a(this.type,se,F)}neg_(){const F=this.data;for(let U=0;U<F.length;++U)F[U]=-F[U];return this}neg(){return this.clone().neg_()}gt(F){const U=new Uint8Array(this.data.length),se=this.data;for(let fe=0;fe<se.length;++fe)U[fe]=se[fe]>F?1:0;return new a("bool",U,this.dims)}lt(F){const U=new Uint8Array(this.data.length),se=this.data;for(let fe=0;fe<se.length;++fe)U[fe]=se[fe]<F?1:0;return new a("bool",U,this.dims)}clamp_(F,U){const se=this.data;for(let fe=0;fe<se.length;++fe)se[fe]=Math.min(Math.max(se[fe],F),U);return this}clamp(F,U){return this.clone().clamp_(F,U)}round_(){const F=this.data;for(let U=0;U<F.length;++U)F[U]=Math.round(F[U]);return this}round(){return this.clone().round_()}mean(F=null,U=!1){return L(this,F,U)}min(F=null,U=!1){if(F===null){const Te=(0,s.min)(this.data)[0];return new a(this.type,[Te],[])}const[se,fe,oe]=P((Te,Re)=>Math.min(Te,Re),this,F,U,1/0);return new a(se,fe,oe)}max(F=null,U=!1){if(F===null){const Te=(0,s.max)(this.data)[0];return new a(this.type,[Te],[])}const[se,fe,oe]=P((Te,Re)=>Math.max(Te,Re),this,F,U,-1/0);return new a(se,fe,oe)}argmin(F=null,U=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const se=(0,s.min)(this.data)[1];return new a("int64",[BigInt(se)],[])}argmax(F=null,U=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const se=(0,s.max)(this.data)[1];return new a("int64",[BigInt(se)],[])}to(F){if(this.type===F)return this;if(!o.hasOwnProperty(F))throw new Error(`Unsupported type: ${F}`);let U;const se=["int64","uint64"].includes(this.type),fe=["int64","uint64"].includes(F);return se&&!fe?U=Number:!se&&fe&&(U=BigInt),new a(F,o[F].from(this.data,U),this.dims)}}function l(j,F){const U=j.length,se=F.reduce((oe,Te)=>oe*Te);if(U!==se)throw Error(`cannot reshape array of size ${U} into shape (${F})`);let fe=j;for(let oe=F.length-1;oe>=0;oe--)fe=fe.reduce((Te,Re)=>{let He=Te[Te.length-1];return He.length<F[oe]?He.push(Re):Te.push([Re]),Te},[[]]);return fe[0]}function c(j,F){const[U,se]=(0,s.permute_data)(j.data,j.dims,F);return new a(j.type,U,se)}function p(j,[F,U],se="bilinear",fe=!1){const oe=j.dims.at(-3)??1,Te=j.dims.at(-2),Re=j.dims.at(-1);let He=(0,s.interpolate_data)(j.data,[oe,Te,Re],[F,U],se,fe);return new a(j.type,He,[oe,F,U])}async function d(j,{size:F=null,mode:U="bilinear"}={}){if(j.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!F)throw new Error("`interpolate_4d` requires a `size` argument.");let se;if(F.length===2)se=[...j.dims.slice(0,2),...F];else if(F.length===3)se=[j.dims[0],...F];else if(F.length===4)se=F;else throw new Error("`size` must be of length 2, 3, or 4.");let fe;if(U==="nearest")fe=await n.TensorOpRegistry.nearest_interpolate_4d;else if(U==="bilinear")fe=await n.TensorOpRegistry.bilinear_interpolate_4d;else if(U==="bicubic")fe=await n.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${U}`);const oe=new a("int64",new BigInt64Array(se.map(BigInt)),[se.length]);return await fe({x:j,s:oe})}async function u(j,F){return await(await n.TensorOpRegistry.matmul)({a:j,b:F})}async function _(j,F){return await(await n.TensorOpRegistry.rfft)({x:j,a:F})}async function f(j,F){const U=await n.TensorOpRegistry.top_k;return F==null?F=j.dims.at(-1):F=Math.min(F,j.dims.at(-1)),await U({x:j,k:new a("int64",[BigInt(F)],[1])})}const b=j=>new a("int64",j,[j.length]);async function A(j,F,U,se,fe){return await(await n.TensorOpRegistry.slice)({x:j,s:b(F),e:b(U),a:b(se),t:b(fe??new Array(se.length).fill(1))})}function g(j,F){const U=j.data,se=F.data,fe=[j.dims[0],j.dims[2]],oe=new U.constructor(fe[0]*fe[1]),[Te,Re,He]=j.dims;let Me=0;for(let X=0;X<Te;++X){const le=X*He*Re;for(let W=0;W<He;++W){let ye=0,ke=0;const Pe=X*Re,be=le+W;for(let we=0;we<Re;++we){const Ie=Number(se[Pe+we]);ke+=Ie,ye+=U[be+we*He]*Ie}const Se=ye/ke;oe[Me++]=Se}}return new a(j.type,oe,fe)}function w(j,F,{eps:U=1e-5}={}){if(j.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[se,fe]=j.dims;if(F.length!==1&&F[0]!==fe)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[oe,Te]=D(j,1,0,!0),Re=oe.data,He=Te.data,Me=j.data,X=new Me.constructor(Me.length);for(let le=0;le<se;++le){const W=le*fe;for(let ye=0;ye<fe;++ye){const ke=W+ye;X[ke]=(Me[ke]-He[le])/(Re[le]+U)}}return new a(j.type,X,j.dims)}function $(j,F){return j=j.slice(),F===null?j=j.filter(U=>U!==1):typeof F=="number"?j[F]===1&&j.splice(F,1):Array.isArray(F)&&(j=j.filter((U,se)=>U!==1||!F.includes(se))),j}function y(j,F){return F=v(F,j.length+1),j=j.slice(),j.splice(F,0,1),j}function v(j,F,U=null,se=!0){if(j<-F||j>=F){if(se)throw new Error(`IndexError: index ${j} is out of bounds for dimension${U===null?"":" "+U} with size ${F}`);return j<-F?0:F}return j<0&&(j=(j%F+F)%F),j}function T(j,F=0){F=v(F,j[0].dims.length);const U=j[0].dims.slice();U[F]=j.reduce((Te,Re)=>Te+Re.dims[F],0);const se=U.reduce((Te,Re)=>Te*Re,1),fe=new j[0].data.constructor(se),oe=j[0].type;if(F===0){let Te=0;for(const Re of j){const He=Re.data;fe.set(He,Te),Te+=He.length}}else{let Te=0;for(let Re=0;Re<j.length;++Re){const{data:He,dims:Me}=j[Re];for(let X=0;X<He.length;++X){let le=0;for(let W=Me.length-1,ye=X,ke=1;W>=0;--W){const Pe=Me[W];let be=ye%Pe;W===F&&(be+=Te),le+=be*ke,ke*=U[W],ye=Math.floor(ye/Pe)}fe[le]=He[X]}Te+=Me[F]}}return new a(oe,fe,U)}function x(j,F=0){return T(j.map(U=>U.unsqueeze(F)),F)}function P(j,F,U=null,se=!1,fe=null){const oe=F.data,Te=F.dims;U=v(U,Te.length);const Re=Te.slice();Re[U]=1;const He=new oe.constructor(oe.length/Te[U]);fe!==null&&He.fill(fe);for(let Me=0;Me<oe.length;++Me){let X=0;for(let le=Te.length-1,W=Me,ye=1;le>=0;--le){const ke=Te[le];if(le!==U){const Pe=W%ke;X+=Pe*ye,ye*=Re[le]}W=Math.floor(W/ke)}He[X]=j(He[X],oe[Me],Me,X)}return se||Re.splice(U,1),[F.type,He,Re]}function D(j,F=null,U=1,se=!1){const fe=j.data,oe=j.dims;if(F===null){const ye=fe.reduce((Se,we)=>Se+we,0)/fe.length,ke=Math.sqrt(fe.reduce((Se,we)=>Se+(we-ye)**2,0)/(fe.length-U)),Pe=new a(j.type,[ye],[]);return[new a(j.type,[ke],[]),Pe]}F=v(F,oe.length);const Te=L(j,F,se),Re=Te.data,[He,Me,X]=P((W,ye,ke,Pe)=>W+(ye-Re[Pe])**2,j,F,se);for(let W=0;W<Me.length;++W)Me[W]=Math.sqrt(Me[W]/(oe[F]-U));return[new a(He,Me,X),Te]}function L(j,F=null,U=!1){const se=j.dims,fe=j.data;if(F===null){const He=fe.reduce((Me,X)=>Me+X,0);return new a(j.type,[He/fe.length],[])}F=v(F,se.length);const[oe,Te,Re]=P((He,Me)=>He+Me,j,F,U);if(se[F]!==1)for(let He=0;He<Te.length;++He)Te[He]/=se[F];return new a(oe,Te,Re)}function G(j){const F=new Array(j.length);for(let U=j.length-1,se=1;U>=0;--U)F[U]=se,se*=j[U];return F}function K(j,F,U,se){const fe=j.reduce((oe,Te)=>oe*Te,1);return new a(U,new se(fe).fill(F),j)}function R(j,F){let U,se;if(typeof F=="number")U="float32",se=Float32Array;else if(typeof F=="bigint")U="int64",se=BigInt64Array;else if(typeof F=="boolean")U="bool",se=Uint8Array;else throw new Error(`Unsupported data type: ${typeof F}`);return K(j,F,U,se)}function te(j,F){return R(j.dims,F)}function H(j){return K(j,1n,"int64",BigInt64Array)}function ee(j){return H(j.dims)}function Z(j){return K(j,0n,"int64",BigInt64Array)}function ne(j){return Z(j.dims)}function me(j){const F=j.reduce((U,se)=>U*se,1);return new a("float32",Float32Array.from({length:F},()=>Math.random()),j)}function ue(j,F){if(j.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(j.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(F))throw new Error("The precision must be either 'binary' or 'ubinary'");const U=F==="binary",se=U?"int8":"uint8",fe=U?Int8Array:Uint8Array,oe=j.data,Te=new fe(oe.length/8);for(let Re=0;Re<oe.length;++Re){const He=oe[Re]>0?1:0,Me=Math.floor(Re/8),X=Re%8;Te[Me]|=He<<7-X,U&&X===0&&(Te[Me]-=128)}return new a(se,Te,[j.dims[0],j.dims[1]/8])}},"./src/utils/video.js":(e,r,t)=>{t.r(r),t.d(r,{RawVideo:()=>o,RawVideoFrame:()=>n,load_video:()=>a});var s=t("./src/utils/image.js"),i=t("./src/env.js");class n{constructor(c,p){this.image=c,this.timestamp=p}}class o{constructor(c,p){c.length>0&&c[0]instanceof s.RawImage&&(c=c.map((d,u)=>new n(d,(u+1)/(c.length+1)*p))),this.frames=c,this.duration=p}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function a(l,{num_frames:c=null,fps:p=null}={}){if(!i.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(c==null&&p==null)throw new Error("Either num_frames or fps must be provided.");const d=[],u=document.createElement("video");if(u.crossOrigin="anonymous",u.muted=!0,typeof l=="string")u.src=l;else if(l instanceof Blob)u.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)u.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise($=>u.onloadedmetadata=$),u.seekable.start(0)===u.seekable.end(0)){const y=await(await fetch(u.src)).blob();u.src=URL.createObjectURL(y),await new Promise(v=>u.onloadedmetadata=v)}const _=u.duration;let f,b;c!=null?(f=c,b=c===1?0:_/(c-1)):(b=1/p,f=Math.floor(_/b));let A=[];for(let $=0;$<f;++$)A.push(c===1?_/2:$*b);const g=document.createElement("canvas");g.width=u.videoWidth,g.height=u.videoHeight;const w=g.getContext("2d",{willReadFrequently:!0});for(const $ of A){u.currentTime=$,await new Promise(x=>{u.onseeked=x}),w.drawImage(u,0,0,g.width,g.height);const y=w.getImageData(0,0,g.width,g.height),v=new s.RawImage(y.data,g.width,g.height,4),T=new n(v,$);d.push(T)}return u.remove(),new o(d,_)}}},Ob={};function Ut(e){var r=Ob[e];if(r!==void 0)return r.exports;var t=Ob[e]={exports:{}};return kT[e](t,t.exports,Ut),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,r;Ut.t=function(t,s){if(s&1&&(t=this(t)),s&8||typeof t=="object"&&t&&(s&4&&t.__esModule||s&16&&typeof t.then=="function"))return t;var i=Object.create(null);Ut.r(i);var n={};r=r||[null,e({}),e([]),e(e)];for(var o=s&2&&t;typeof o=="object"&&!~r.indexOf(o);o=e(o))Object.getOwnPropertyNames(o).forEach(a=>n[a]=()=>t[a]);return n.default=()=>t,Ut.d(i,n),i}})();Ut.d=(e,r)=>{for(var t in r)Ut.o(r,t)&&!Ut.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})};Ut.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);Ut.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var m={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Ut.r(m),Ut.d(m,{ASTFeatureExtractor:()=>d.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>i.AutoConfig,AutoFeatureExtractor:()=>u.AutoFeatureExtractor,AutoImageProcessor:()=>b.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>w.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>r.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>$.BaseStreamer,BeitFeatureExtractor:()=>f.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>f.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>f.CLIPFeatureExtractor,CLIPImageProcessor:()=>f.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>f.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>d.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>v.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>s.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>f.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>f.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>t.DFineForObjectDetection,DFineModel:()=>t.DFineModel,DFinePreTrainedModel:()=>t.DFinePreTrainedModel,DPTFeatureExtractor:()=>f.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>f.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>d.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>f.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>f.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>f.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>f.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>f.DonutFeatureExtractor,DonutImageProcessor:()=>f.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>f.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EncodecFeatureExtractor:()=>d.EncodecFeatureExtractor,EosTokenCriteria:()=>y.EosTokenCriteria,Ernie4_5_ForCausalLM:()=>t.Ernie4_5_ForCausalLM,Ernie4_5_Model:()=>t.Ernie4_5_Model,Ernie4_5_PretrainedModel:()=>t.Ernie4_5_PretrainedModel,Ernie4_5_Tokenizer:()=>s.Ernie4_5_Tokenizer,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>p.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>g.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>v.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>v.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>d.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>t.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>t.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>g.Gemma3nProcessor,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>s.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>s.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>g.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>s.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>f.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>g.Idefics3Processor,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>r.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>d.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>_.ImageProcessor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,InterruptableStoppingCriteria:()=>y.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>g.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,Lfm2ForCausalLM:()=>t.Lfm2ForCausalLM,Lfm2Model:()=>t.Lfm2Model,Lfm2PreTrainedModel:()=>t.Lfm2PreTrainedModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>f.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LlavaProcessor:()=>g.LlavaProcessor,LlavaQwen2ForCausalLM:()=>t.LlavaQwen2ForCausalLM,LogitsProcessor:()=>v.LogitsProcessor,LogitsProcessorList:()=>v.LogitsProcessorList,LogitsWarper:()=>v.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,Mask2FormerImageProcessor:()=>f.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>y.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>g.MgpstrProcessor,MgpstrTokenizer:()=>s.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>v.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>v.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>f.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>f.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>f.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>f.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>f.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>f.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>f.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>f.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>f.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>f.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertDecoderForCausalLM:()=>t.ModernBertDecoderForCausalLM,ModernBertDecoderModel:()=>t.ModernBertDecoderModel,ModernBertDecoderPreTrainedModel:()=>t.ModernBertDecoderPreTrainedModel,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>d.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>g.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NeoBertForMaskedLM:()=>t.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>t.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>t.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>t.NeoBertForTokenClassification,NeoBertModel:()=>t.NeoBertModel,NeoBertPreTrainedModel:()=>t.NeoBertPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NoBadWordsLogitsProcessor:()=>v.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>v.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>f.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>f.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>f.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>g.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>f.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>g.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>f.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>g.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>i.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>A.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>f.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>d.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>g.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>f.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>g.Qwen2VLProcessor,Qwen3ForCausalLM:()=>t.Qwen3ForCausalLM,Qwen3Model:()=>t.Qwen3Model,Qwen3PreTrainedModel:()=>t.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>f.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>n.RawAudio,RawImage:()=>o.RawImage,RawVideo:()=>a.RawVideo,RawVideoFrame:()=>a.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>v.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>f.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>g.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>f.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>f.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>f.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolLM3ForCausalLM:()=>t.SmolLM3ForCausalLM,SmolLM3Model:()=>t.SmolLM3Model,SmolLM3PreTrainedModel:()=>t.SmolLM3PreTrainedModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>f.SmolVLMImageProcessor,SmolVLMProcessor:()=>g.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>d.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>g.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>y.StoppingCriteria,StoppingCriteriaList:()=>y.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>r.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>v.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>f.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>v.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextStreamer:()=>$.TextStreamer,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TopKLogitsWarper:()=>v.TopKLogitsWarper,TopPLogitsWarper:()=>v.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>g.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>g.VLChatProcessor,VLMImageProcessor:()=>f.VLMImageProcessor,ViTFeatureExtractor:()=>f.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>f.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>f.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>f.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,VoxtralForConditionalGeneration:()=>t.VoxtralForConditionalGeneration,VoxtralProcessor:()=>g.VoxtralProcessor,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>g.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>g.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>d.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>d.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>g.WhisperProcessor,WhisperTextStreamer:()=>$.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>v.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>f.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>f.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>l.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getCacheShapes:()=>i.getCacheShapes,hamming:()=>n.hamming,hanning:()=>n.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>s.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>o.load_image,load_video:()=>a.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>l.matmul,max:()=>c.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>n.mel_filter_bank,min:()=>c.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>c.permute_data,pipeline:()=>r.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>n.read_audio,rfft:()=>l.rfft,round:()=>c.round,slice:()=>l.slice,softmax:()=>c.softmax,spectrogram:()=>n.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>n.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=Ut("./src/env.js"),r=Ut("./src/pipelines.js"),t=Ut("./src/models.js"),s=Ut("./src/tokenizers.js"),i=Ut("./src/configs.js"),n=Ut("./src/utils/audio.js"),o=Ut("./src/utils/image.js"),a=Ut("./src/utils/video.js"),l=Ut("./src/utils/tensor.js"),c=Ut("./src/utils/maths.js"),p=Ut("./src/base/feature_extraction_utils.js"),d=Ut("./src/models/feature_extractors.js"),u=Ut("./src/models/auto/feature_extraction_auto.js"),_=Ut("./src/base/image_processors_utils.js"),f=Ut("./src/models/image_processors.js"),b=Ut("./src/models/auto/image_processing_auto.js"),A=Ut("./src/base/processing_utils.js"),g=Ut("./src/models/processors.js"),w=Ut("./src/models/auto/processing_auto.js"),$=Ut("./src/generation/streamers.js"),y=Ut("./src/generation/stopping_criteria.js"),v=Ut("./src/generation/logits_process.js")})();m.ASTFeatureExtractor;m.ASTForAudioClassification;m.ASTModel;m.ASTPreTrainedModel;m.AlbertForMaskedLM;m.AlbertForQuestionAnswering;m.AlbertForSequenceClassification;m.AlbertModel;m.AlbertPreTrainedModel;m.AlbertTokenizer;m.AudioClassificationPipeline;m.AutoConfig;m.AutoFeatureExtractor;m.AutoImageProcessor;m.AutoModel;m.AutoModelForAudioClassification;m.AutoModelForAudioFrameClassification;m.AutoModelForAudioTextToText;m.AutoModelForCTC;m.AutoModelForCausalLM;m.AutoModelForDepthEstimation;m.AutoModelForDocumentQuestionAnswering;m.AutoModelForImageClassification;m.AutoModelForImageFeatureExtraction;m.AutoModelForImageMatting;m.AutoModelForImageSegmentation;m.AutoModelForImageTextToText;m.AutoModelForImageToImage;m.AutoModelForMaskGeneration;m.AutoModelForMaskedLM;m.AutoModelForNormalEstimation;m.AutoModelForObjectDetection;m.AutoModelForPoseEstimation;m.AutoModelForQuestionAnswering;m.AutoModelForSemanticSegmentation;m.AutoModelForSeq2SeqLM;m.AutoModelForSequenceClassification;m.AutoModelForSpeechSeq2Seq;m.AutoModelForTextToSpectrogram;m.AutoModelForTextToWaveform;m.AutoModelForTokenClassification;m.AutoModelForUniversalSegmentation;m.AutoModelForVision2Seq;m.AutoModelForXVector;m.AutoModelForZeroShotObjectDetection;m.AutoProcessor;m.AutoTokenizer;m.AutomaticSpeechRecognitionPipeline;m.BackgroundRemovalPipeline;m.BartForConditionalGeneration;m.BartForSequenceClassification;m.BartModel;m.BartPretrainedModel;m.BartTokenizer;m.BaseModelOutput;m.BaseStreamer;m.BeitFeatureExtractor;m.BeitForImageClassification;m.BeitModel;m.BeitPreTrainedModel;m.BertForMaskedLM;m.BertForQuestionAnswering;m.BertForSequenceClassification;m.BertForTokenClassification;m.BertModel;m.BertPreTrainedModel;m.BertTokenizer;m.BitImageProcessor;m.BlenderbotForConditionalGeneration;m.BlenderbotModel;m.BlenderbotPreTrainedModel;m.BlenderbotSmallForConditionalGeneration;m.BlenderbotSmallModel;m.BlenderbotSmallPreTrainedModel;m.BlenderbotSmallTokenizer;m.BlenderbotTokenizer;m.BloomForCausalLM;m.BloomModel;m.BloomPreTrainedModel;m.BloomTokenizer;m.CLIPFeatureExtractor;m.CLIPImageProcessor;m.CLIPModel;m.CLIPPreTrainedModel;m.CLIPSegForImageSegmentation;m.CLIPSegModel;m.CLIPSegPreTrainedModel;m.CLIPTextModel;m.CLIPTextModelWithProjection;m.CLIPTokenizer;m.CLIPVisionModel;m.CLIPVisionModelWithProjection;m.CamembertForMaskedLM;m.CamembertForQuestionAnswering;m.CamembertForSequenceClassification;m.CamembertForTokenClassification;m.CamembertModel;m.CamembertPreTrainedModel;m.CamembertTokenizer;m.CausalLMOutput;m.CausalLMOutputWithPast;m.ChineseCLIPFeatureExtractor;m.ChineseCLIPModel;m.ChineseCLIPPreTrainedModel;m.ClapAudioModelWithProjection;m.ClapFeatureExtractor;m.ClapModel;m.ClapPreTrainedModel;m.ClapTextModelWithProjection;m.ClassifierFreeGuidanceLogitsProcessor;m.CodeGenForCausalLM;m.CodeGenModel;m.CodeGenPreTrainedModel;m.CodeGenTokenizer;m.CodeLlamaTokenizer;m.CohereForCausalLM;m.CohereModel;m.CoherePreTrainedModel;m.CohereTokenizer;m.ConvBertForMaskedLM;m.ConvBertForQuestionAnswering;m.ConvBertForSequenceClassification;m.ConvBertForTokenClassification;m.ConvBertModel;m.ConvBertPreTrainedModel;m.ConvBertTokenizer;m.ConvNextFeatureExtractor;m.ConvNextForImageClassification;m.ConvNextImageProcessor;m.ConvNextModel;m.ConvNextPreTrainedModel;m.ConvNextV2ForImageClassification;m.ConvNextV2Model;m.ConvNextV2PreTrainedModel;m.DFineForObjectDetection;m.DFineModel;m.DFinePreTrainedModel;m.DPTFeatureExtractor;m.DPTForDepthEstimation;m.DPTImageProcessor;m.DPTModel;m.DPTPreTrainedModel;m.DacDecoderModel;m.DacDecoderOutput;m.DacEncoderModel;m.DacEncoderOutput;m.DacFeatureExtractor;m.DacModel;m.DacPreTrainedModel;m.DataTypeMap;m.DebertaForMaskedLM;m.DebertaForQuestionAnswering;m.DebertaForSequenceClassification;m.DebertaForTokenClassification;m.DebertaModel;m.DebertaPreTrainedModel;m.DebertaTokenizer;m.DebertaV2ForMaskedLM;m.DebertaV2ForQuestionAnswering;m.DebertaV2ForSequenceClassification;m.DebertaV2ForTokenClassification;m.DebertaV2Model;m.DebertaV2PreTrainedModel;m.DebertaV2Tokenizer;m.DecisionTransformerModel;m.DecisionTransformerPreTrainedModel;m.DeiTFeatureExtractor;m.DeiTForImageClassification;m.DeiTImageProcessor;m.DeiTModel;m.DeiTPreTrainedModel;m.DepthAnythingForDepthEstimation;m.DepthAnythingPreTrainedModel;m.DepthEstimationPipeline;m.DepthProForDepthEstimation;m.DepthProPreTrainedModel;m.DetrFeatureExtractor;m.DetrForObjectDetection;m.DetrForSegmentation;m.DetrImageProcessor;m.DetrModel;m.DetrObjectDetectionOutput;m.DetrPreTrainedModel;m.DetrSegmentationOutput;m.Dinov2ForImageClassification;m.Dinov2Model;m.Dinov2PreTrainedModel;m.Dinov2WithRegistersForImageClassification;m.Dinov2WithRegistersModel;m.Dinov2WithRegistersPreTrainedModel;m.DistilBertForMaskedLM;m.DistilBertForQuestionAnswering;m.DistilBertForSequenceClassification;m.DistilBertForTokenClassification;m.DistilBertModel;m.DistilBertPreTrainedModel;m.DistilBertTokenizer;m.DocumentQuestionAnsweringPipeline;m.DonutFeatureExtractor;m.DonutImageProcessor;m.DonutSwinModel;m.DonutSwinPreTrainedModel;m.EfficientNetForImageClassification;m.EfficientNetImageProcessor;m.EfficientNetModel;m.EfficientNetPreTrainedModel;m.ElectraForMaskedLM;m.ElectraForQuestionAnswering;m.ElectraForSequenceClassification;m.ElectraForTokenClassification;m.ElectraModel;m.ElectraPreTrainedModel;m.ElectraTokenizer;m.EncodecFeatureExtractor;m.EosTokenCriteria;m.Ernie4_5_ForCausalLM;m.Ernie4_5_Model;m.Ernie4_5_PretrainedModel;m.Ernie4_5_Tokenizer;m.EsmForMaskedLM;m.EsmForSequenceClassification;m.EsmForTokenClassification;m.EsmModel;m.EsmPreTrainedModel;m.EsmTokenizer;m.ExaoneForCausalLM;m.ExaoneModel;m.ExaonePreTrainedModel;m.FFT;m.FalconForCausalLM;m.FalconModel;m.FalconPreTrainedModel;m.FalconTokenizer;m.FastViTForImageClassification;m.FastViTModel;m.FastViTPreTrainedModel;m.FeatureExtractionPipeline;m.FeatureExtractor;m.FillMaskPipeline;m.Florence2ForConditionalGeneration;m.Florence2PreTrainedModel;m.Florence2Processor;m.ForcedBOSTokenLogitsProcessor;m.ForcedEOSTokenLogitsProcessor;m.GLPNFeatureExtractor;m.GLPNForDepthEstimation;m.GLPNModel;m.GLPNPreTrainedModel;m.GPT2LMHeadModel;m.GPT2Model;m.GPT2PreTrainedModel;m.GPT2Tokenizer;m.GPTBigCodeForCausalLM;m.GPTBigCodeModel;m.GPTBigCodePreTrainedModel;m.GPTJForCausalLM;m.GPTJModel;m.GPTJPreTrainedModel;m.GPTNeoForCausalLM;m.GPTNeoModel;m.GPTNeoPreTrainedModel;m.GPTNeoXForCausalLM;m.GPTNeoXModel;m.GPTNeoXPreTrainedModel;m.GPTNeoXTokenizer;m.Gemma2ForCausalLM;m.Gemma2Model;m.Gemma2PreTrainedModel;m.Gemma3ForCausalLM;m.Gemma3Model;m.Gemma3PreTrainedModel;m.Gemma3nAudioFeatureExtractor;m.Gemma3nForConditionalGeneration;m.Gemma3nPreTrainedModel;m.Gemma3nProcessor;m.GemmaForCausalLM;m.GemmaModel;m.GemmaPreTrainedModel;m.GemmaTokenizer;m.GlmForCausalLM;m.GlmModel;m.GlmPreTrainedModel;m.GraniteForCausalLM;m.GraniteModel;m.GranitePreTrainedModel;m.Grok1Tokenizer;m.GroundingDinoForObjectDetection;m.GroundingDinoImageProcessor;m.GroundingDinoPreTrainedModel;m.GroundingDinoProcessor;m.GroupViTModel;m.GroupViTPreTrainedModel;m.HeliumForCausalLM;m.HeliumModel;m.HeliumPreTrainedModel;m.HerbertTokenizer;m.HieraForImageClassification;m.HieraModel;m.HieraPreTrainedModel;m.HubertForCTC;m.HubertForSequenceClassification;m.HubertModel;m.HubertPreTrainedModel;m.IJepaForImageClassification;m.IJepaModel;m.IJepaPreTrainedModel;m.Idefics3ForConditionalGeneration;m.Idefics3ImageProcessor;m.Idefics3PreTrainedModel;m.Idefics3Processor;m.ImageClassificationPipeline;m.ImageFeatureExtractionPipeline;m.ImageFeatureExtractor;m.ImageMattingOutput;m.ImageProcessor;m.ImageSegmentationPipeline;m.ImageToImagePipeline;m.ImageToTextPipeline;m.InterruptableStoppingCriteria;m.JAISLMHeadModel;m.JAISModel;m.JAISPreTrainedModel;m.JinaCLIPImageProcessor;m.JinaCLIPModel;m.JinaCLIPPreTrainedModel;m.JinaCLIPProcessor;m.JinaCLIPTextModel;m.JinaCLIPVisionModel;m.Lfm2ForCausalLM;m.Lfm2Model;m.Lfm2PreTrainedModel;m.LiteWhisperForConditionalGeneration;m.LlamaForCausalLM;m.LlamaModel;m.LlamaPreTrainedModel;m.LlamaTokenizer;m.LlavaForConditionalGeneration;m.LlavaOnevisionForConditionalGeneration;m.LlavaOnevisionImageProcessor;m.LlavaPreTrainedModel;m.LlavaProcessor;m.LlavaQwen2ForCausalLM;m.LogitsProcessor;m.LogitsProcessorList;m.LogitsWarper;m.LongT5ForConditionalGeneration;m.LongT5Model;m.LongT5PreTrainedModel;m.M2M100ForConditionalGeneration;m.M2M100Model;m.M2M100PreTrainedModel;m.M2M100Tokenizer;m.MBart50Tokenizer;m.MBartForCausalLM;m.MBartForConditionalGeneration;m.MBartForSequenceClassification;m.MBartModel;m.MBartPreTrainedModel;m.MBartTokenizer;m.MPNetForMaskedLM;m.MPNetForQuestionAnswering;m.MPNetForSequenceClassification;m.MPNetForTokenClassification;m.MPNetModel;m.MPNetPreTrainedModel;m.MPNetTokenizer;m.MT5ForConditionalGeneration;m.MT5Model;m.MT5PreTrainedModel;m.MarianMTModel;m.MarianModel;m.MarianPreTrainedModel;m.MarianTokenizer;m.Mask2FormerImageProcessor;m.MaskFormerFeatureExtractor;m.MaskFormerForInstanceSegmentation;m.MaskFormerImageProcessor;m.MaskFormerModel;m.MaskFormerPreTrainedModel;m.MaskedLMOutput;m.MaxLengthCriteria;m.Metric3DForDepthEstimation;m.Metric3DPreTrainedModel;m.Metric3Dv2ForDepthEstimation;m.Metric3Dv2PreTrainedModel;m.MgpstrForSceneTextRecognition;m.MgpstrModelOutput;m.MgpstrPreTrainedModel;m.MgpstrProcessor;m.MgpstrTokenizer;m.MimiDecoderModel;m.MimiDecoderOutput;m.MimiEncoderModel;m.MimiEncoderOutput;m.MimiModel;m.MimiPreTrainedModel;m.MinLengthLogitsProcessor;m.MinNewTokensLengthLogitsProcessor;m.MistralForCausalLM;m.MistralModel;m.MistralPreTrainedModel;m.MobileBertForMaskedLM;m.MobileBertForQuestionAnswering;m.MobileBertForSequenceClassification;m.MobileBertModel;m.MobileBertPreTrainedModel;m.MobileBertTokenizer;m.MobileLLMForCausalLM;m.MobileLLMModel;m.MobileLLMPreTrainedModel;m.MobileNetV1FeatureExtractor;m.MobileNetV1ForImageClassification;m.MobileNetV1ForSemanticSegmentation;m.MobileNetV1ImageProcessor;m.MobileNetV1Model;m.MobileNetV1PreTrainedModel;m.MobileNetV2FeatureExtractor;m.MobileNetV2ForImageClassification;m.MobileNetV2ForSemanticSegmentation;m.MobileNetV2ImageProcessor;m.MobileNetV2Model;m.MobileNetV2PreTrainedModel;m.MobileNetV3FeatureExtractor;m.MobileNetV3ForImageClassification;m.MobileNetV3ForSemanticSegmentation;m.MobileNetV3ImageProcessor;m.MobileNetV3Model;m.MobileNetV3PreTrainedModel;m.MobileNetV4FeatureExtractor;m.MobileNetV4ForImageClassification;m.MobileNetV4ForSemanticSegmentation;m.MobileNetV4ImageProcessor;m.MobileNetV4Model;m.MobileNetV4PreTrainedModel;m.MobileViTFeatureExtractor;m.MobileViTForImageClassification;m.MobileViTImageProcessor;m.MobileViTModel;m.MobileViTPreTrainedModel;m.MobileViTV2ForImageClassification;m.MobileViTV2Model;m.MobileViTV2PreTrainedModel;m.ModelOutput;m.ModernBertDecoderForCausalLM;m.ModernBertDecoderModel;m.ModernBertDecoderPreTrainedModel;m.ModernBertForMaskedLM;m.ModernBertForSequenceClassification;m.ModernBertForTokenClassification;m.ModernBertModel;m.ModernBertPreTrainedModel;m.Moondream1ForConditionalGeneration;m.MoonshineFeatureExtractor;m.MoonshineForConditionalGeneration;m.MoonshineModel;m.MoonshinePreTrainedModel;m.MoonshineProcessor;m.MptForCausalLM;m.MptModel;m.MptPreTrainedModel;m.MultiModalityCausalLM;m.MultiModalityPreTrainedModel;m.MusicgenForCausalLM;m.MusicgenForConditionalGeneration;m.MusicgenModel;m.MusicgenPreTrainedModel;m.NeoBertForMaskedLM;m.NeoBertForQuestionAnswering;m.NeoBertForSequenceClassification;m.NeoBertForTokenClassification;m.NeoBertModel;m.NeoBertPreTrainedModel;m.NllbTokenizer;m.NoBadWordsLogitsProcessor;m.NoRepeatNGramLogitsProcessor;m.NomicBertModel;m.NomicBertPreTrainedModel;m.NougatImageProcessor;m.NougatTokenizer;m.OPTForCausalLM;m.OPTModel;m.OPTPreTrainedModel;m.ObjectDetectionPipeline;m.Olmo2ForCausalLM;m.Olmo2Model;m.Olmo2PreTrainedModel;m.OlmoForCausalLM;m.OlmoModel;m.OlmoPreTrainedModel;m.OpenELMForCausalLM;m.OpenELMModel;m.OpenELMPreTrainedModel;m.OwlViTFeatureExtractor;m.OwlViTForObjectDetection;m.OwlViTImageProcessor;m.OwlViTModel;m.OwlViTPreTrainedModel;m.OwlViTProcessor;m.Owlv2ForObjectDetection;m.Owlv2ImageProcessor;m.Owlv2Model;m.Owlv2PreTrainedModel;m.PaliGemmaForConditionalGeneration;m.PaliGemmaPreTrainedModel;m.PaliGemmaProcessor;m.PatchTSMixerForPrediction;m.PatchTSMixerModel;m.PatchTSMixerPreTrainedModel;m.PatchTSTForPrediction;m.PatchTSTModel;m.PatchTSTPreTrainedModel;m.Phi3ForCausalLM;m.Phi3Model;m.Phi3PreTrainedModel;m.Phi3VForCausalLM;m.Phi3VImageProcessor;m.Phi3VPreTrainedModel;m.Phi3VProcessor;m.PhiForCausalLM;m.PhiModel;m.PhiPreTrainedModel;m.Pipeline;m.PreTrainedModel;m.PreTrainedTokenizer;m.PretrainedConfig;m.PretrainedMixin;m.Processor;m.PvtForImageClassification;m.PvtImageProcessor;m.PvtModel;m.PvtPreTrainedModel;m.PyAnnoteFeatureExtractor;m.PyAnnoteForAudioFrameClassification;m.PyAnnoteModel;m.PyAnnotePreTrainedModel;m.PyAnnoteProcessor;m.QuestionAnsweringModelOutput;m.QuestionAnsweringPipeline;m.Qwen2ForCausalLM;m.Qwen2Model;m.Qwen2PreTrainedModel;m.Qwen2Tokenizer;m.Qwen2VLForConditionalGeneration;m.Qwen2VLImageProcessor;m.Qwen2VLPreTrainedModel;m.Qwen2VLProcessor;m.Qwen3ForCausalLM;m.Qwen3Model;m.Qwen3PreTrainedModel;m.RFDetrForObjectDetection;m.RFDetrModel;m.RFDetrObjectDetectionOutput;m.RFDetrPreTrainedModel;m.RTDetrForObjectDetection;m.RTDetrImageProcessor;m.RTDetrModel;m.RTDetrObjectDetectionOutput;m.RTDetrPreTrainedModel;m.RTDetrV2ForObjectDetection;m.RTDetrV2Model;m.RTDetrV2ObjectDetectionOutput;m.RTDetrV2PreTrainedModel;m.RawAudio;var xv=m.RawImage;m.RawVideo;m.RawVideoFrame;m.RepetitionPenaltyLogitsProcessor;m.ResNetForImageClassification;m.ResNetModel;m.ResNetPreTrainedModel;m.RoFormerForMaskedLM;m.RoFormerForQuestionAnswering;m.RoFormerForSequenceClassification;m.RoFormerForTokenClassification;m.RoFormerModel;m.RoFormerPreTrainedModel;m.RoFormerTokenizer;m.RobertaForMaskedLM;m.RobertaForQuestionAnswering;m.RobertaForSequenceClassification;m.RobertaForTokenClassification;m.RobertaModel;m.RobertaPreTrainedModel;m.RobertaTokenizer;m.SamImageProcessor;m.SamImageSegmentationOutput;m.SamModel;m.SamPreTrainedModel;m.SamProcessor;m.SapiensForDepthEstimation;m.SapiensForNormalEstimation;m.SapiensForSemanticSegmentation;m.SapiensPreTrainedModel;m.SeamlessM4TFeatureExtractor;m.SegformerFeatureExtractor;m.SegformerForImageClassification;m.SegformerForSemanticSegmentation;m.SegformerImageProcessor;m.SegformerModel;m.SegformerPreTrainedModel;m.Seq2SeqLMOutput;m.SequenceClassifierOutput;m.SiglipImageProcessor;m.SiglipModel;m.SiglipPreTrainedModel;m.SiglipTextModel;m.SiglipTokenizer;m.SiglipVisionModel;m.SmolLM3ForCausalLM;m.SmolLM3Model;m.SmolLM3PreTrainedModel;m.SmolVLMForConditionalGeneration;m.SmolVLMImageProcessor;m.SmolVLMProcessor;m.SnacDecoderModel;m.SnacEncoderModel;m.SnacFeatureExtractor;m.SnacModel;m.SnacPreTrainedModel;m.SpeechT5FeatureExtractor;m.SpeechT5ForSpeechToText;m.SpeechT5ForTextToSpeech;m.SpeechT5HifiGan;m.SpeechT5Model;m.SpeechT5PreTrainedModel;m.SpeechT5Processor;m.SpeechT5Tokenizer;m.SqueezeBertForMaskedLM;m.SqueezeBertForQuestionAnswering;m.SqueezeBertForSequenceClassification;m.SqueezeBertModel;m.SqueezeBertPreTrainedModel;m.SqueezeBertTokenizer;m.StableLmForCausalLM;m.StableLmModel;m.StableLmPreTrainedModel;m.Starcoder2ForCausalLM;m.Starcoder2Model;m.Starcoder2PreTrainedModel;m.StoppingCriteria;m.StoppingCriteriaList;m.StyleTextToSpeech2Model;m.StyleTextToSpeech2PreTrainedModel;m.SummarizationPipeline;m.SuppressTokensAtBeginLogitsProcessor;m.Swin2SRForImageSuperResolution;m.Swin2SRImageProcessor;m.Swin2SRModel;m.Swin2SRPreTrainedModel;m.SwinForImageClassification;m.SwinForSemanticSegmentation;m.SwinModel;m.SwinPreTrainedModel;m.T5ForConditionalGeneration;m.T5Model;m.T5PreTrainedModel;m.T5Tokenizer;m.TableTransformerForObjectDetection;m.TableTransformerModel;m.TableTransformerObjectDetectionOutput;m.TableTransformerPreTrainedModel;m.TemperatureLogitsWarper;m.Tensor;m.Text2TextGenerationPipeline;m.TextClassificationPipeline;m.TextGenerationPipeline;m.TextStreamer;m.TextToAudioPipeline;m.TokenClassificationPipeline;m.TokenClassifierOutput;m.TokenizerModel;m.TopKLogitsWarper;m.TopPLogitsWarper;m.TrOCRForCausalLM;m.TrOCRPreTrainedModel;m.TranslationPipeline;m.UltravoxModel;m.UltravoxPreTrainedModel;m.UltravoxProcessor;m.UniSpeechForCTC;m.UniSpeechForSequenceClassification;m.UniSpeechModel;m.UniSpeechPreTrainedModel;m.UniSpeechSatForAudioFrameClassification;m.UniSpeechSatForCTC;m.UniSpeechSatForSequenceClassification;m.UniSpeechSatModel;m.UniSpeechSatPreTrainedModel;m.VLChatProcessor;m.VLMImageProcessor;m.ViTFeatureExtractor;m.ViTForImageClassification;m.ViTImageProcessor;m.ViTMAEModel;m.ViTMAEPreTrainedModel;m.ViTMSNForImageClassification;m.ViTMSNModel;m.ViTMSNPreTrainedModel;m.ViTModel;m.ViTPreTrainedModel;m.VisionEncoderDecoderModel;m.VitMatteForImageMatting;m.VitMatteImageProcessor;m.VitMattePreTrainedModel;m.VitPoseForPoseEstimation;m.VitPoseImageProcessor;m.VitPosePreTrainedModel;m.VitsModel;m.VitsModelOutput;m.VitsPreTrainedModel;m.VitsTokenizer;m.VoxtralForConditionalGeneration;m.VoxtralProcessor;m.Wav2Vec2BertForCTC;m.Wav2Vec2BertForSequenceClassification;m.Wav2Vec2BertModel;m.Wav2Vec2BertPreTrainedModel;m.Wav2Vec2CTCTokenizer;m.Wav2Vec2FeatureExtractor;m.Wav2Vec2ForAudioFrameClassification;m.Wav2Vec2ForCTC;m.Wav2Vec2ForSequenceClassification;m.Wav2Vec2Model;m.Wav2Vec2PreTrainedModel;m.Wav2Vec2Processor;m.Wav2Vec2ProcessorWithLM;m.WavLMForAudioFrameClassification;m.WavLMForCTC;m.WavLMForSequenceClassification;m.WavLMForXVector;m.WavLMModel;m.WavLMPreTrainedModel;m.WeSpeakerFeatureExtractor;m.WeSpeakerResNetModel;m.WeSpeakerResNetPreTrainedModel;m.WhisperFeatureExtractor;m.WhisperForConditionalGeneration;m.WhisperModel;m.WhisperPreTrainedModel;m.WhisperProcessor;m.WhisperTextStreamer;m.WhisperTimeStampLogitsProcessor;m.WhisperTokenizer;m.XLMForQuestionAnswering;m.XLMForSequenceClassification;m.XLMForTokenClassification;m.XLMModel;m.XLMPreTrainedModel;m.XLMRobertaForMaskedLM;m.XLMRobertaForQuestionAnswering;m.XLMRobertaForSequenceClassification;m.XLMRobertaForTokenClassification;m.XLMRobertaModel;m.XLMRobertaPreTrainedModel;m.XLMRobertaTokenizer;m.XLMTokenizer;m.XLMWithLMHeadModel;m.XVectorOutput;m.YolosFeatureExtractor;m.YolosForObjectDetection;m.YolosImageProcessor;m.YolosModel;m.YolosObjectDetectionOutput;m.YolosPreTrainedModel;m.ZeroShotAudioClassificationPipeline;m.ZeroShotClassificationPipeline;m.ZeroShotImageClassificationPipeline;m.ZeroShotObjectDetectionPipeline;m.bankers_round;m.cat;m.cos_sim;m.dot;m.dynamic_time_warping;m.env;m.full;m.full_like;m.getCacheShapes;m.hamming;m.hanning;m.interpolate;m.interpolate_4d;m.interpolate_data;m.is_chinese_char;m.layer_norm;m.load_image;m.load_video;m.log_softmax;m.magnitude;m.matmul;m.max;m.mean;m.mean_pooling;m.medianFilter;m.mel_filter_bank;m.min;m.ones;m.ones_like;m.permute;m.permute_data;var IT=m.pipeline;m.quantize_embeddings;m.rand;m.read_audio;m.rfft;m.round;m.slice;m.softmax;m.spectrogram;m.stack;m.std_mean;m.topk;m.window_function;m.zeros;m.zeros_like;/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.20.0
 * @author George Michael Brower
 * @license MIT
 */class zs{constructor(r,t,s,i,n="div"){this.parent=r,this.object=t,this.property=s,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement(n),this.domElement.classList.add("controller"),this.domElement.classList.add(i),this.$name=document.createElement("div"),this.$name.classList.add("name"),zs.nextNameID=zs.nextNameID||0,this.$name.id=`lil-gui-name-${++zs.nextNameID}`,this.$widget=document.createElement("div"),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.domElement.addEventListener("keydown",o=>o.stopPropagation()),this.domElement.addEventListener("keyup",o=>o.stopPropagation()),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(s)}name(r){return this._name=r,this.$name.textContent=r,this}onChange(r){return this._onChange=r,this}_callOnChange(){this.parent._callOnChange(this),this._onChange!==void 0&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(r){return this._onFinishChange=r,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),this._onFinishChange!==void 0&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(r=!0){return this.disable(!r)}disable(r=!0){return r===this._disabled?this:(this._disabled=r,this.domElement.classList.toggle("disabled",r),this.$disable.toggleAttribute("disabled",r),this)}show(r=!0){return this._hidden=!r,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(r){const t=this.parent.add(this.object,this.property,r);return t.name(this._name),this.destroy(),t}min(r){return this}max(r){return this}step(r){return this}decimals(r){return this}listen(r=!0){return this._listening=r,this._listenCallbackID!==void 0&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const r=this.save();r!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=r}getValue(){return this.object[this.property]}setValue(r){return this.getValue()!==r&&(this.object[this.property]=r,this._callOnChange(),this.updateDisplay()),this}updateDisplay(){return this}load(r){return this.setValue(r),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class FT extends zs{constructor(r,t,s){super(r,t,s,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",()=>{this.setValue(this.$input.checked),this._callOnFinishChange()}),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function lu(e){let r,t;return(r=e.match(/(#|0x)?([a-f0-9]{6})/i))?t=r[2]:(r=e.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?t=parseInt(r[1]).toString(16).padStart(2,0)+parseInt(r[2]).toString(16).padStart(2,0)+parseInt(r[3]).toString(16).padStart(2,0):(r=e.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(t=r[1]+r[1]+r[2]+r[2]+r[3]+r[3]),t?"#"+t:!1}const DT={isPrimitive:!0,match:e=>typeof e=="string",fromHexString:lu,toHexString:lu},ro={isPrimitive:!0,match:e=>typeof e=="number",fromHexString:e=>parseInt(e.substring(1),16),toHexString:e=>"#"+e.toString(16).padStart(6,0)},OT={isPrimitive:!1,match:e=>Array.isArray(e),fromHexString(e,r,t=1){const s=ro.fromHexString(e);r[0]=(s>>16&255)/255*t,r[1]=(s>>8&255)/255*t,r[2]=(s&255)/255*t},toHexString([e,r,t],s=1){s=255/s;const i=e*s<<16^r*s<<8^t*s<<0;return ro.toHexString(i)}},LT={isPrimitive:!1,match:e=>Object(e)===e,fromHexString(e,r,t=1){const s=ro.fromHexString(e);r.r=(s>>16&255)/255*t,r.g=(s>>8&255)/255*t,r.b=(s&255)/255*t},toHexString({r:e,g:r,b:t},s=1){s=255/s;const i=e*s<<16^r*s<<8^t*s<<0;return ro.toHexString(i)}},zT=[DT,ro,OT,LT];function BT(e){return zT.find(r=>r.match(e))}class RT extends zs{constructor(r,t,s,i){super(r,t,s,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=BT(this.initialValue),this._rgbScale=i,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",()=>{this._setValueFromHexString(this.$input.value)}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$text.addEventListener("input",()=>{const n=lu(this.$text.value);n&&this._setValueFromHexString(n)}),this.$text.addEventListener("focus",()=>{this._textFocused=!0,this.$text.select()}),this.$text.addEventListener("blur",()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()}),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(r){if(this._format.isPrimitive){const t=this._format.fromHexString(r);this.setValue(t)}else this._format.fromHexString(r,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(r){return this._setValueFromHexString(r),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class Uc extends zs{constructor(r,t,s){super(r,t,s,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",i=>{i.preventDefault(),this.getValue().call(this.object),this._callOnChange()}),this.$button.addEventListener("touchstart",()=>{},{passive:!0}),this.$disable=this.$button}}class jT extends zs{constructor(r,t,s,i,n,o){super(r,t,s,"number"),this._initInput(),this.min(i),this.max(n);const a=o!==void 0;this.step(a?o:this._getImplicitStep(),a),this.updateDisplay()}decimals(r){return this._decimals=r,this.updateDisplay(),this}min(r){return this._min=r,this._onUpdateMinMax(),this}max(r){return this._max=r,this._onUpdateMinMax(),this}step(r,t=!0){return this._step=r,this._stepExplicit=t,this}updateDisplay(){const r=this.getValue();if(this._hasSlider){let t=(r-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=t*100+"%"}return this._inputFocused||(this.$input.value=this._decimals===void 0?r:r.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),window.matchMedia("(pointer: coarse)").matches&&(this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any")),this.$widget.appendChild(this.$input),this.$disable=this.$input;const t=()=>{let w=parseFloat(this.$input.value);isNaN(w)||(this._stepExplicit&&(w=this._snap(w)),this.setValue(this._clamp(w)))},s=w=>{const $=parseFloat(this.$input.value);isNaN($)||(this._snapClampSetValue($+w),this.$input.value=this.getValue())},i=w=>{w.key==="Enter"&&this.$input.blur(),w.code==="ArrowUp"&&(w.preventDefault(),s(this._step*this._arrowKeyMultiplier(w))),w.code==="ArrowDown"&&(w.preventDefault(),s(this._step*this._arrowKeyMultiplier(w)*-1))},n=w=>{this._inputFocused&&(w.preventDefault(),s(this._step*this._normalizeMouseWheel(w)))};let o=!1,a,l,c,p,d;const u=5,_=w=>{a=w.clientX,l=c=w.clientY,o=!0,p=this.getValue(),d=0,window.addEventListener("mousemove",f),window.addEventListener("mouseup",b)},f=w=>{if(o){const $=w.clientX-a,y=w.clientY-l;Math.abs(y)>u?(w.preventDefault(),this.$input.blur(),o=!1,this._setDraggingStyle(!0,"vertical")):Math.abs($)>u&&b()}if(!o){const $=w.clientY-c;d-=$*this._step*this._arrowKeyMultiplier(w),p+d>this._max?d=this._max-p:p+d<this._min&&(d=this._min-p),this._snapClampSetValue(p+d)}c=w.clientY},b=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",f),window.removeEventListener("mouseup",b)},A=()=>{this._inputFocused=!0},g=()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()};this.$input.addEventListener("input",t),this.$input.addEventListener("keydown",i),this.$input.addEventListener("wheel",n,{passive:!1}),this.$input.addEventListener("mousedown",_),this.$input.addEventListener("focus",A),this.$input.addEventListener("blur",g)}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const r=(g,w,$,y,v)=>(g-w)/($-w)*(v-y)+y,t=g=>{const w=this.$slider.getBoundingClientRect();let $=r(g,w.left,w.right,this._min,this._max);this._snapClampSetValue($)},s=g=>{this._setDraggingStyle(!0),t(g.clientX),window.addEventListener("mousemove",i),window.addEventListener("mouseup",n)},i=g=>{t(g.clientX)},n=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",i),window.removeEventListener("mouseup",n)};let o=!1,a,l;const c=g=>{g.preventDefault(),this._setDraggingStyle(!0),t(g.touches[0].clientX),o=!1},p=g=>{g.touches.length>1||(this._hasScrollBar?(a=g.touches[0].clientX,l=g.touches[0].clientY,o=!0):c(g),window.addEventListener("touchmove",d,{passive:!1}),window.addEventListener("touchend",u))},d=g=>{if(o){const w=g.touches[0].clientX-a,$=g.touches[0].clientY-l;Math.abs(w)>Math.abs($)?c(g):(window.removeEventListener("touchmove",d),window.removeEventListener("touchend",u))}else g.preventDefault(),t(g.touches[0].clientX)},u=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",d),window.removeEventListener("touchend",u)},_=this._callOnFinishChange.bind(this),f=400;let b;const A=g=>{if(Math.abs(g.deltaX)<Math.abs(g.deltaY)&&this._hasScrollBar)return;g.preventDefault();const $=this._normalizeMouseWheel(g)*this._step;this._snapClampSetValue(this.getValue()+$),this.$input.value=this.getValue(),clearTimeout(b),b=setTimeout(_,f)};this.$slider.addEventListener("mousedown",s),this.$slider.addEventListener("touchstart",p,{passive:!1}),this.$slider.addEventListener("wheel",A,{passive:!1})}_setDraggingStyle(r,t="horizontal"){this.$slider&&this.$slider.classList.toggle("active",r),document.body.classList.toggle("lil-gui-dragging",r),document.body.classList.toggle(`lil-gui-${t}`,r)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(r){let{deltaX:t,deltaY:s}=r;return Math.floor(r.deltaY)!==r.deltaY&&r.wheelDelta&&(t=0,s=-r.wheelDelta/120,s*=this._stepExplicit?1:10),t+-s}_arrowKeyMultiplier(r){let t=this._stepExplicit?1:10;return r.shiftKey?t*=10:r.altKey&&(t/=10),t}_snap(r){let t=0;return this._hasMin?t=this._min:this._hasMax&&(t=this._max),r-=t,r=Math.round(r/this._step)*this._step,r+=t,r=parseFloat(r.toPrecision(15)),r}_clamp(r){return r<this._min&&(r=this._min),r>this._max&&(r=this._max),r}_snapClampSetValue(r){this.setValue(this._clamp(this._snap(r)))}get _hasScrollBar(){const r=this.parent.root.$children;return r.scrollHeight>r.clientHeight}get _hasMin(){return this._min!==void 0}get _hasMax(){return this._max!==void 0}}class NT extends zs{constructor(r,t,s,i){super(r,t,s,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$select.addEventListener("change",()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()}),this.$select.addEventListener("focus",()=>{this.$display.classList.add("focus")}),this.$select.addEventListener("blur",()=>{this.$display.classList.remove("focus")}),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.options(i)}options(r){return this._values=Array.isArray(r)?r:Object.values(r),this._names=Array.isArray(r)?r:Object.keys(r),this.$select.replaceChildren(),this._names.forEach(t=>{const s=document.createElement("option");s.textContent=t,this.$select.appendChild(s)}),this.updateDisplay(),this}updateDisplay(){const r=this.getValue(),t=this._values.indexOf(r);return this.$select.selectedIndex=t,this.$display.textContent=t===-1?r:this._names[t],this}}class VT extends zs{constructor(r,t,s){super(r,t,s,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("spellcheck","false"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",()=>{this.setValue(this.$input.value)}),this.$input.addEventListener("keydown",i=>{i.code==="Enter"&&this.$input.blur()}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}var UT=`.lil-gui {
  font-family: var(--font-family);
  font-size: var(--font-size);
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  text-align: left;
  color: var(--text-color);
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  --background-color: #1f1f1f;
  --text-color: #ebebeb;
  --title-background-color: #111111;
  --title-text-color: #ebebeb;
  --widget-color: #424242;
  --hover-color: #4f4f4f;
  --focus-color: #595959;
  --number-color: #2cc9ff;
  --string-color: #a2db3c;
  --font-size: 11px;
  --input-font-size: 11px;
  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;
  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;
  --padding: 4px;
  --spacing: 4px;
  --widget-height: 20px;
  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);
  --name-width: 45%;
  --slider-knob-width: 2px;
  --slider-input-width: 27%;
  --color-input-width: 27%;
  --slider-input-min-width: 45px;
  --color-input-min-width: 45px;
  --folder-indent: 7px;
  --widget-padding: 0 0 0 3px;
  --widget-border-radius: 2px;
  --checkbox-size: calc(0.75 * var(--widget-height));
  --scrollbar-width: 5px;
}
.lil-gui, .lil-gui * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
.lil-gui.root {
  width: var(--width, 245px);
  display: flex;
  flex-direction: column;
  background: var(--background-color);
}
.lil-gui.root > .title {
  background: var(--title-background-color);
  color: var(--title-text-color);
}
.lil-gui.root > .children {
  overflow-x: hidden;
  overflow-y: auto;
}
.lil-gui.root > .children::-webkit-scrollbar {
  width: var(--scrollbar-width);
  height: var(--scrollbar-width);
  background: var(--background-color);
}
.lil-gui.root > .children::-webkit-scrollbar-thumb {
  border-radius: var(--scrollbar-width);
  background: var(--focus-color);
}
@media (pointer: coarse) {
  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {
    --widget-height: 28px;
    --padding: 6px;
    --spacing: 6px;
    --font-size: 13px;
    --input-font-size: 16px;
    --folder-indent: 10px;
    --scrollbar-width: 7px;
    --slider-input-min-width: 50px;
    --color-input-min-width: 65px;
  }
}
.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {
  --widget-height: 28px;
  --padding: 6px;
  --spacing: 6px;
  --font-size: 13px;
  --input-font-size: 16px;
  --folder-indent: 10px;
  --scrollbar-width: 7px;
  --slider-input-min-width: 50px;
  --color-input-min-width: 65px;
}
.lil-gui.autoPlace {
  max-height: 100%;
  position: fixed;
  top: 0;
  right: 15px;
  z-index: 1001;
}

.lil-gui .controller {
  display: flex;
  align-items: center;
  padding: 0 var(--padding);
  margin: var(--spacing) 0;
}
.lil-gui .controller.disabled {
  opacity: 0.5;
}
.lil-gui .controller.disabled, .lil-gui .controller.disabled * {
  pointer-events: none !important;
}
.lil-gui .controller > .name {
  min-width: var(--name-width);
  flex-shrink: 0;
  white-space: pre;
  padding-right: var(--spacing);
  line-height: var(--widget-height);
}
.lil-gui .controller .widget {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  min-height: var(--widget-height);
}
.lil-gui .controller.string input {
  color: var(--string-color);
}
.lil-gui .controller.boolean {
  cursor: pointer;
}
.lil-gui .controller.color .display {
  width: 100%;
  height: var(--widget-height);
  border-radius: var(--widget-border-radius);
  position: relative;
}
@media (hover: hover) {
  .lil-gui .controller.color .display:hover:before {
    content: " ";
    display: block;
    position: absolute;
    border-radius: var(--widget-border-radius);
    border: 1px solid #fff9;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
}
.lil-gui .controller.color input[type=color] {
  opacity: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}
.lil-gui .controller.color input[type=text] {
  margin-left: var(--spacing);
  font-family: var(--font-family-mono);
  min-width: var(--color-input-min-width);
  width: var(--color-input-width);
  flex-shrink: 0;
}
.lil-gui .controller.option select {
  opacity: 0;
  position: absolute;
  width: 100%;
  max-width: 100%;
}
.lil-gui .controller.option .display {
  position: relative;
  pointer-events: none;
  border-radius: var(--widget-border-radius);
  height: var(--widget-height);
  line-height: var(--widget-height);
  max-width: 100%;
  overflow: hidden;
  word-break: break-all;
  padding-left: 0.55em;
  padding-right: 1.75em;
  background: var(--widget-color);
}
@media (hover: hover) {
  .lil-gui .controller.option .display.focus {
    background: var(--focus-color);
  }
}
.lil-gui .controller.option .display.active {
  background: var(--focus-color);
}
.lil-gui .controller.option .display:after {
  font-family: "lil-gui";
  content: "↕";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  padding-right: 0.375em;
}
.lil-gui .controller.option .widget,
.lil-gui .controller.option select {
  cursor: pointer;
}
@media (hover: hover) {
  .lil-gui .controller.option .widget:hover .display {
    background: var(--hover-color);
  }
}
.lil-gui .controller.number input {
  color: var(--number-color);
}
.lil-gui .controller.number.hasSlider input {
  margin-left: var(--spacing);
  width: var(--slider-input-width);
  min-width: var(--slider-input-min-width);
  flex-shrink: 0;
}
.lil-gui .controller.number .slider {
  width: 100%;
  height: var(--widget-height);
  background: var(--widget-color);
  border-radius: var(--widget-border-radius);
  padding-right: var(--slider-knob-width);
  overflow: hidden;
  cursor: ew-resize;
  touch-action: pan-y;
}
@media (hover: hover) {
  .lil-gui .controller.number .slider:hover {
    background: var(--hover-color);
  }
}
.lil-gui .controller.number .slider.active {
  background: var(--focus-color);
}
.lil-gui .controller.number .slider.active .fill {
  opacity: 0.95;
}
.lil-gui .controller.number .fill {
  height: 100%;
  border-right: var(--slider-knob-width) solid var(--number-color);
  box-sizing: content-box;
}

.lil-gui-dragging .lil-gui {
  --hover-color: var(--widget-color);
}
.lil-gui-dragging * {
  cursor: ew-resize !important;
}

.lil-gui-dragging.lil-gui-vertical * {
  cursor: ns-resize !important;
}

.lil-gui .title {
  height: var(--title-height);
  font-weight: 600;
  padding: 0 var(--padding);
  width: 100%;
  text-align: left;
  background: none;
  text-decoration-skip: objects;
}
.lil-gui .title:before {
  font-family: "lil-gui";
  content: "▾";
  padding-right: 2px;
  display: inline-block;
}
.lil-gui .title:active {
  background: var(--title-background-color);
  opacity: 0.75;
}
@media (hover: hover) {
  body:not(.lil-gui-dragging) .lil-gui .title:hover {
    background: var(--title-background-color);
    opacity: 0.85;
  }
  .lil-gui .title:focus {
    text-decoration: underline var(--focus-color);
  }
}
.lil-gui.root > .title:focus {
  text-decoration: none !important;
}
.lil-gui.closed > .title:before {
  content: "▸";
}
.lil-gui.closed > .children {
  transform: translateY(-7px);
  opacity: 0;
}
.lil-gui.closed:not(.transition) > .children {
  display: none;
}
.lil-gui.transition > .children {
  transition-duration: 300ms;
  transition-property: height, opacity, transform;
  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);
  overflow: hidden;
  pointer-events: none;
}
.lil-gui .children:empty:before {
  content: "Empty";
  padding: 0 var(--padding);
  margin: var(--spacing) 0;
  display: block;
  height: var(--widget-height);
  font-style: italic;
  line-height: var(--widget-height);
  opacity: 0.5;
}
.lil-gui.root > .children > .lil-gui > .title {
  border: 0 solid var(--widget-color);
  border-width: 1px 0;
  transition: border-color 300ms;
}
.lil-gui.root > .children > .lil-gui.closed > .title {
  border-bottom-color: transparent;
}
.lil-gui + .controller {
  border-top: 1px solid var(--widget-color);
  margin-top: 0;
  padding-top: var(--spacing);
}
.lil-gui .lil-gui .lil-gui > .title {
  border: none;
}
.lil-gui .lil-gui .lil-gui > .children {
  border: none;
  margin-left: var(--folder-indent);
  border-left: 2px solid var(--widget-color);
}
.lil-gui .lil-gui .controller {
  border: none;
}

.lil-gui label, .lil-gui input, .lil-gui button {
  -webkit-tap-highlight-color: transparent;
}
.lil-gui input {
  border: 0;
  outline: none;
  font-family: var(--font-family);
  font-size: var(--input-font-size);
  border-radius: var(--widget-border-radius);
  height: var(--widget-height);
  background: var(--widget-color);
  color: var(--text-color);
  width: 100%;
}
@media (hover: hover) {
  .lil-gui input:hover {
    background: var(--hover-color);
  }
  .lil-gui input:active {
    background: var(--focus-color);
  }
}
.lil-gui input:disabled {
  opacity: 1;
}
.lil-gui input[type=text],
.lil-gui input[type=number] {
  padding: var(--widget-padding);
  -moz-appearance: textfield;
}
.lil-gui input[type=text]:focus,
.lil-gui input[type=number]:focus {
  background: var(--focus-color);
}
.lil-gui input[type=checkbox] {
  appearance: none;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border-radius: var(--widget-border-radius);
  text-align: center;
  cursor: pointer;
}
.lil-gui input[type=checkbox]:checked:before {
  font-family: "lil-gui";
  content: "✓";
  font-size: var(--checkbox-size);
  line-height: var(--checkbox-size);
}
@media (hover: hover) {
  .lil-gui input[type=checkbox]:focus {
    box-shadow: inset 0 0 0 1px var(--focus-color);
  }
}
.lil-gui button {
  outline: none;
  cursor: pointer;
  font-family: var(--font-family);
  font-size: var(--font-size);
  color: var(--text-color);
  width: 100%;
  border: none;
}
.lil-gui .controller button {
  height: var(--widget-height);
  text-transform: none;
  background: var(--widget-color);
  border-radius: var(--widget-border-radius);
}
@media (hover: hover) {
  .lil-gui .controller button:hover {
    background: var(--hover-color);
  }
  .lil-gui .controller button:focus {
    box-shadow: inset 0 0 0 1px var(--focus-color);
  }
}
.lil-gui .controller button:active {
  background: var(--focus-color);
}

@font-face {
  font-family: "lil-gui";
  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");
}`;function WT(e){const r=document.createElement("style");r.innerHTML=e;const t=document.querySelector("head link[rel=stylesheet], head style");t?document.head.insertBefore(r,t):document.head.appendChild(r)}let Lb=!1;class Nu{constructor({parent:r,autoPlace:t=r===void 0,container:s,width:i,title:n="Controls",closeFolders:o=!1,injectStyles:a=!0,touchStyles:l=!0}={}){if(this.parent=r,this.root=r?r.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("button"),this.$title.classList.add("title"),this.$title.setAttribute("aria-expanded",!0),this.$title.addEventListener("click",()=>this.openAnimated(this._closed)),this.$title.addEventListener("touchstart",()=>{},{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(n),this.parent){this.parent.children.push(this),this.parent.folders.push(this),this.parent.$children.appendChild(this.domElement);return}this.domElement.classList.add("root"),l&&this.domElement.classList.add("allow-touch-styles"),!Lb&&a&&(WT(UT),Lb=!0),s?s.appendChild(this.domElement):t&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),i&&this.domElement.style.setProperty("--width",i+"px"),this._closeFolders=o}add(r,t,s,i,n){if(Object(s)===s)return new NT(this,r,t,s);const o=r[t];switch(typeof o){case"number":return new jT(this,r,t,s,i,n);case"boolean":return new FT(this,r,t);case"string":return new VT(this,r,t);case"function":return new Uc(this,r,t)}console.error(`gui.add failed
	property:`,t,`
	object:`,r,`
	value:`,o)}addColor(r,t,s=1){return new RT(this,r,t,s)}addFolder(r){const t=new Nu({parent:this,title:r});return this.root._closeFolders&&t.close(),t}load(r,t=!0){return r.controllers&&this.controllers.forEach(s=>{s instanceof Uc||s._name in r.controllers&&s.load(r.controllers[s._name])}),t&&r.folders&&this.folders.forEach(s=>{s._title in r.folders&&s.load(r.folders[s._title])}),this}save(r=!0){const t={controllers:{},folders:{}};return this.controllers.forEach(s=>{if(!(s instanceof Uc)){if(s._name in t.controllers)throw new Error(`Cannot save GUI with duplicate property "${s._name}"`);t.controllers[s._name]=s.save()}}),r&&this.folders.forEach(s=>{if(s._title in t.folders)throw new Error(`Cannot save GUI with duplicate folder "${s._title}"`);t.folders[s._title]=s.save()}),t}open(r=!0){return this._setClosed(!r),this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}_setClosed(r){this._closed!==r&&(this._closed=r,this._callOnOpenClose(this))}show(r=!0){return this._hidden=!r,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(r=!0){return this._setClosed(!r),this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame(()=>{const t=this.$children.clientHeight;this.$children.style.height=t+"px",this.domElement.classList.add("transition");const s=n=>{n.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",s))};this.$children.addEventListener("transitionend",s);const i=r?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!r),requestAnimationFrame(()=>{this.$children.style.height=i+"px"})}),this}title(r){return this._title=r,this.$title.textContent=r,this}reset(r=!0){return(r?this.controllersRecursive():this.controllers).forEach(s=>s.reset()),this}onChange(r){return this._onChange=r,this}_callOnChange(r){this.parent&&this.parent._callOnChange(r),this._onChange!==void 0&&this._onChange.call(this,{object:r.object,property:r.property,value:r.getValue(),controller:r})}onFinishChange(r){return this._onFinishChange=r,this}_callOnFinishChange(r){this.parent&&this.parent._callOnFinishChange(r),this._onFinishChange!==void 0&&this._onFinishChange.call(this,{object:r.object,property:r.property,value:r.getValue(),controller:r})}onOpenClose(r){return this._onOpenClose=r,this}_callOnOpenClose(r){this.parent&&this.parent._callOnOpenClose(r),this._onOpenClose!==void 0&&this._onOpenClose.call(this,r)}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach(r=>r.destroy())}controllersRecursive(){let r=Array.from(this.controllers);return this.folders.forEach(t=>{r=r.concat(t.controllersRecursive())}),r}foldersRecursive(){let r=Array.from(this.folders);return this.folders.forEach(t=>{r=r.concat(t.foldersRecursive())}),r}}class cu{constructor(r){Y(this,"imageData");this.imageData=r}get data(){return this.imageData.data}get width(){return this.imageData.width}get height(){return this.imageData.height}get(r,t){r=r%this.width,t=t%this.height;const s=(t*this.width+r)*4;return[this.data[s+0]??0,this.data[s+1]??0,this.data[s+2]??0,this.data[s+3]??255]}set(r,t,s){const i=(t*this.width+r)*4;this.data[i+0]=s[0],this.data[i+1]=s[1],this.data[i+2]=s[2],this.data[i+3]=s[3]}}const GT=[{name:"Marbles",url:"marbles.jpg"},{name:"Flowers",url:"flowers.jpg"},{name:"Flowers (vintage)",url:"vintage-flowers-sm.jpg"},{name:"90s",url:"90s.png"}],pt={disparityScale:1,selectedPattern:"marbles.jpg",customPatternFile:null,currentImage:null,currentDepth:null,autostereogramImageData:null,isProcessing:!1,gui:null,fadeTimeout:null,fadeAnimation:null,showDepthMap:!1};async function fa(){if(!pt.currentDepth||pt.isProcessing)return;pt.isProcessing=!0,Ln("generating-autostereogram"),Ln("messages"),Ls("canvas"),Ls("depth-canvas");const e=document.getElementById("canvas"),r=new OffscreenCanvas(e.width,e.height),t=Math.floor(r.width*.15),s=Math.floor(r.width*.2),i=t;let n;pt.customPatternFile?n=URL.createObjectURL(pt.customPatternFile):n=pt.selectedPattern;const o=(await xv.fromURL(n)).toCanvas(),a=i*o.height/o.width,l=new OffscreenCanvas(i,a);QT(o,l,i);const c=new cu(l.getContext("2d").getImageData(0,0,l.width,l.height)),p=new OffscreenCanvas(r.width,r.height),d=new cu(p.getContext("2d").getImageData(0,0,p.width,p.height));for(let u=0;u<d.height;++u)for(let _=0;_<d.width;++_){const f=pt.currentDepth.get(_,u)[0]/255,b=Math.floor(f*(s-t)*pt.disparityScale);_<t?d.set(_,u,c.get((_+b)%t,u)):d.set(_,u,d.get(_+b-t,u))}pt.autostereogramImageData=d.imageData,Tv(),pt.customPatternFile&&URL.revokeObjectURL(n),pt.isProcessing=!1,Ls("messages"),Ls("generating-autostereogram")}function Tv(){pt.currentDepth&&(pt.showDepthMap?(Ls("canvas"),Ln("depth-canvas"),document.getElementById("depth-canvas").getContext("2d").putImageData(pt.currentDepth.imageData,0,0)):(Ls("depth-canvas"),Ln("canvas"),pt.autostereogramImageData&&document.getElementById("canvas").getContext("2d").putImageData(pt.autostereogramImageData,0,0)))}function KT(){const e=new Nu;e.close(),e.title("Controls"),e.hide(),pt.gui=e,e.add(pt,"disparityScale",.1,1.75,.01).name("Depth").onChange(XT(()=>{fa()},1e3));const r=document.createElement("input");r.type="file",r.accept="image/*",r.style.display="none",document.body.appendChild(r),r.addEventListener("change",a=>{var c;const l=(c=a.target.files)==null?void 0:c[0];l&&(pt.customPatternFile=l,fa())});const t=GT.reduce((a,l)=>(a[l.name]=l.url,a),{});t["Upload..."]="custom",e.add(pt,"selectedPattern",t).name("Pattern").onChange(()=>{pt.selectedPattern==="custom"?r.click():(pt.customPatternFile=null,fa())}),e.add(pt,"showDepthMap").name("Depth map").onChange(()=>{Tv()}),e.add({saveImage:()=>{const a=pt.showDepthMap?document.getElementById("depth-canvas"):document.getElementById("canvas"),l=document.createElement("a");l.download=pt.showDepthMap?"depth-map.png":"autostereogram.png",l.href=a.toDataURL(),l.click()}},"saveImage").name("Save Image");const s=e.domElement;s.addEventListener("mouseenter",Ws),s.addEventListener("click",Ws),s.addEventListener("input",Ws),s.addEventListener("change",Ws),s.addEventListener("touchstart",Ws),s.addEventListener("touchend",Ws);const i=e.show.bind(e);e.show=a=>{const l=i(a);return a!==!1&&uu(),l};const n=e.hide.bind(e);e.hide=()=>{const a=n();return pt.fadeTimeout&&(clearTimeout(pt.fadeTimeout),pt.fadeTimeout=null),pt.fadeAnimation&&(pt.fadeAnimation.cancel(),pt.fadeAnimation=null),a},new MutationObserver(a=>{a.forEach(l=>{l.type==="attributes"&&l.attributeName==="class"&&(l.target.classList.contains("expanded")?(pt.fadeTimeout&&(clearTimeout(pt.fadeTimeout),pt.fadeTimeout=null),pt.fadeAnimation&&(pt.fadeAnimation.cancel(),pt.fadeAnimation=null),s.style.opacity="1"):uu())})}).observe(s,{attributes:!0,attributeFilter:["class"]}),document.addEventListener("mousemove",a=>{if(!pt.gui)return;const l=s.getBoundingClientRect(),c=50;a.clientX>=l.left-c&&a.clientX<=l.right+c&&a.clientY>=l.top-c&&a.clientY<=l.bottom+c&&Ws()}),document.addEventListener("touchstart",Ws),document.addEventListener("click",Ws)}async function HT(){Ls("preloader");const e=navigator.gpu!==void 0,r=e&&(async()=>{try{return(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{return!1}})();Ln("loader");const t=await IT("depth-estimation","onnx-community/depth-anything-v2-small",{dtype:r?"fp16":void 0,device:e?"webgpu":void 0});Ls("loader"),KT(),Ln("image-chooser"),document.getElementById("choose-a-photo").addEventListener("change",async i=>{var d,u,_;const n=(d=i.target.files)==null?void 0:d[0];if(!n)return;(u=pt.gui)==null||u.hide(),Ls("image-chooser"),Ln("loading-depth-estimation");const o=await xv.fromBlob(n);pt.currentImage=o;const{depth:a}=await t(o);Ls("loading-depth-estimation");const l=document.getElementById("canvas"),c=new OffscreenCanvas(l.width,l.height),p=c.getContext("2d");{const f=p.createLinearGradient(0,0,0,c.height);f.addColorStop(.25,"#000000"),f.addColorStop(1,"#111111"),p.fillStyle=f,p.fillRect(0,0,c.width,c.height);const b=a.toCanvas();qT(b,c)}pt.currentDepth=new cu(p.getImageData(0,0,c.width,c.height)),await fa(),(_=pt.gui)==null||_.show()})}HT();function qT(e,r){const t=r.getContext("2d"),s=e.width,i=e.height,n=r.width,o=r.height,a=n/s,l=o/i,c=Math.min(a,l),p=s*c,d=i*c,u=(n-p)/2,_=(o-d)/2,f=t.globalCompositeOperation;t.globalCompositeOperation="lighten",t.drawImage(e,u,_,p,d),t.drawImage(e,0,_,1,i,0,0,u+1,o),t.drawImage(e,s-1,_,1,i,u+p-1,0,u+1,o);const b=t.createLinearGradient(0,0,n,0);b.addColorStop(0,"#555"),b.addColorStop(u/n,"white"),b.addColorStop((n-u)/n,"white"),b.addColorStop(1,"#555"),t.fillStyle=b,t.globalCompositeOperation="multiply",t.fillRect(0,0,n,o),t.globalCompositeOperation=f}function QT(e,r,t){const s=r.getContext("2d"),i=t*e.height/e.width,n=Math.ceil(r.width/t),o=Math.ceil(r.height/i);for(let a=0;a<o;a++)for(let l=0;l<n;l++)s.drawImage(e,l*t,a*i,t,i)}function Ls(e){document.getElementById(e).hidden=!0}function Ln(e){document.getElementById(e).hidden=!1}function XT(e,r){let t;return()=>{clearTimeout(t),t=setTimeout(e,r)}}function uu(){if(!pt.gui||!pt.gui.domElement.classList.contains("closed"))return;pt.fadeTimeout&&clearTimeout(pt.fadeTimeout),pt.fadeAnimation&&pt.fadeAnimation.cancel();const e=pt.gui.domElement;e.classList.contains("expanded")||(e.style.opacity="1",pt.fadeTimeout=setTimeout(()=>{YT()},3e3))}function YT(){if(!pt.gui)return;const e=pt.gui.domElement;e.classList.contains("expanded")||(pt.fadeAnimation=e.animate([{opacity:"1"},{opacity:"0.1"}],{duration:2e3,easing:"ease-out",fill:"forwards"}))}function Ws(){pt.gui&&(pt.fadeTimeout&&(clearTimeout(pt.fadeTimeout),pt.fadeTimeout=null),pt.fadeAnimation&&(pt.fadeAnimation.cancel(),pt.fadeAnimation=null),pt.gui.domElement.style.opacity="1",uu())}
